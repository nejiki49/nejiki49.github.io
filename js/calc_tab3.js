// ダメージ = (((レベル×2/5+2)×威力×A/D)/50×Ma+2)×Mb×乱数補正×タイプ一致補正×相性補正×Mc

// 各計算ごとに小数点は切り捨てる。

// Ma=やけど補正×壁補正×範囲補正×天気補正×もらいび補正
// Mb=急所補正×いのちのたま補正×メトロノーム補正×さきどり補正
// タイプ相性を参照しないその他の補正
// Mc=Mfilter×たつじんのおび補正×いろめがね補正×半減の実補正
// タイプ相性を参照するその他の補正
// Mfilter
// 効果バツグンのダメージを軽減する特性による補正(0.75倍): ハードロック、フィルター

// かっこ内の計算ごとに小数点は切り捨てる。計算の結果0になった場合は1にする。

// ダメージ =
// (((○レベル×○2/○5+○2)×○威力×○A/○D)/○50×Ma+○2)
// ×Mb
// ×乱数補正
// ×タイプ一致補正
// ×相性補正
// ×Mc
$(
  "#level_selection_tab3 input[name=Lv_tab3], #mypokename_tab3,#pokeShape_tab3 input[name=shape_tab3], #kota_tab3, #trainers_tab3, #tekipokename_tab3, .Rank button, #myItem_tab3, #tekiItem1_tab3, #tekiItem2_tab3, #tekiItem3_tab3, #tekiItem4_tab3, #myAbility_tab3, #tekiAbility_tab3, #myBurned_tab3, #tekiBurned_tab3, #myParalysis_tab3, #tekiParalysis_tab3, #myCharged, #myReflect_tab3, #myLightScreen_tab3, #tekiCharged, #tekiReflect_tab3, #tekiLightScreen_tab3, #whether_tab3, #zanHP_tab3, #myItemAuto_tab3, #myItemAutoApply_tab3"
).on("change click", function () {
  // 条件が変更された時の処理を記述

  // kotaのvalueを取得
  const kotaVal = parseFloat($("input[name=kota_tab3]:checked").val());
  // mypokenameのvalueを取得
  const mypokeNameVal = parseFloat($("#mypokename_tab3 option:selected").val());
  // shapeのvalueを取得
  const pokeShapeVal = parseFloat($("input[name=shape_tab3]:checked").val());
  // Lvのvalueを取得
  const lvVal = parseFloat($("input[name=Lv_tab3]:checked").val());

  const trainersVal = parseFloat($("#trainers_tab3 option:selected").val());
  const tekipokeNameVal = parseFloat($("#tekipokename_tab3 option:selected").val());

  //天候取得
  const whether_tab3Select = document.getElementById("whether_tab3");
  const selectedWhether = whether_tab3Select.value;
  //自分特性取得
  const myAbilitySelect = document.getElementById("myAbility_tab3");
  const selectedAbility = myAbilitySelect.value;
  //敵特性取得
  const tekiAbilitySelect = document.getElementById("tekiAbility_tab3");
  const selectedTekiAbility = tekiAbilitySelect.value;

  // 自分持ち物のバリューを取得
  const myItem_tab3 = document.getElementById("myItem_tab3").value;
  // 敵持ち物のバリューを取得
  const tekiItem1_tab3 = document.getElementById("tekiItem1_tab3").value;
  const tekiItem2_tab3 = document.getElementById("tekiItem2_tab3").value;
  const tekiItem3_tab3 = document.getElementById("tekiItem3_tab3").value;
  const tekiItem4_tab3 = document.getElementById("tekiItem4_tab3").value;

  // チェックボックスの状態を取得
  const myCheckbox = document.getElementById("myBurned_tab3").checked;
  const tekiCheckbox = document.getElementById("tekiBurned_tab3").checked;
  const myParalysis_tab3 = document.getElementById("myParalysis_tab3").checked;
  let myParalysisDisplay;
  if (myParalysis_tab3) {
    myParalysisDisplay = "[まひ*1/4]";
  } else {
    myParalysisDisplay = "";
  }

  const tekiParalysis_tab3 = document.getElementById("tekiParalysis_tab3").checked;
  let tekiParalysisDisplay;
  if (tekiParalysis_tab3) {
    tekiParalysisDisplay = "[まひ*1/4]";
  } else {
    tekiParalysisDisplay = "";
  }
  const myReflectCheckbox = document.getElementById("tekiReflect_tab3").checked;
  const myLightScreenCheckbox = document.getElementById("tekiLightScreen_tab3").checked;
  const tekiReflectCheckbox = document.getElementById("myReflect_tab3").checked;
  const tekiLightScreenCheckbox = document.getElementById("myLightScreen_tab3").checked;

  const myImageUrl = "https://veekun.com/dex/media/pokemon/icons/" + mypokeNameVal + ".png";
  const tekiImageUrl = "https://veekun.com/dex/media/pokemon/icons/" + tekipokeNameVal + ".png";

  const mypokeST = bfpokedata.find((item) => item.pokeNo == mypokeNameVal && item.shape === pokeShapeVal);
  //自分のポケモンの情報
  const NAME = mypokeST ? mypokeST.NAME : ""; //名前

  const mypokeBaseH = parseFloat(mypokeST ? mypokeST.shH : ""); //自H種族値
  const mypokeBaseA = parseFloat(mypokeST ? mypokeST.shA : ""); //自A種族値
  const mypokeBaseB = parseFloat(mypokeST ? mypokeST.shB : ""); //自B種族値
  const mypokeBaseC = parseFloat(mypokeST ? mypokeST.shC : ""); //自C種族値
  const mypokeBaseD = parseFloat(mypokeST ? mypokeST.shD : ""); //自D種族値
  const mypokeBaseS = parseFloat(mypokeST ? mypokeST.shS : ""); //自S種族値
  const mypokeTokusei1 = mypokeST ? mypokeST.tokusei1 : ""; //攻撃側特性1
  const mypokeTokusei2 = mypokeST ? mypokeST.tokusei2 : ""; //攻撃側特性2
  const mypokeKusamusubiDamage = parseFloat(mypokeST ? mypokeST.kusamusubiD : ""); //攻撃がわ草結び被ダメ
  const mypokeType1 = mypokeST ? mypokeST.t1 : ""; //タイプ1
  const mypokeType2 = mypokeST ? mypokeST.t2 : ""; //タイプ2
  const mypokenNAME = mypokeST ? mypokeST.nNAME : ""; //性格
  const mypokeShape = parseFloat(mypokeST ? mypokeST.shape : ""); //型
  const mypokeItemName = mypokeST ? mypokeST.itemName : ""; //持ち物名称
  const mypokeItemValue = mypokeST ? mypokeST.item : ""; //持ち物ID
  const mypokeWeight = parseFloat(mypokeST ? mypokeST.weight : ""); //体重
  const mypokeWeapon1No = parseFloat(mypokeST ? mypokeST.weapon1 : ""); //技ナンバー
  const mypokeWeapon2No = parseFloat(mypokeST ? mypokeST.weapon2 : ""); //技ナンバー
  const mypokeWeapon3No = parseFloat(mypokeST ? mypokeST.weapon3 : ""); //技ナンバー
  const mypokeWeapon4No = parseFloat(mypokeST ? mypokeST.weapon4 : ""); //技ナンバー

  const mypokedH = parseFloat(mypokeST ? mypokeST.dH : ""); //自H努力値
  const mypokedA = parseFloat(mypokeST ? mypokeST.dA : ""); //自A努力値
  const mypokedB = parseFloat(mypokeST ? mypokeST.dB : ""); //自B努力値
  const mypokedC = parseFloat(mypokeST ? mypokeST.dC : ""); //自C努力値
  const mypokedD = parseFloat(mypokeST ? mypokeST.dD : ""); //自D努力値
  const mypokedS = parseFloat(mypokeST ? mypokeST.dS : ""); //自S努力値
  // natureA
  const mypokenA = parseFloat(mypokeST ? mypokeST.nA : ""); //自A性格補正値
  const mypokenB = parseFloat(mypokeST ? mypokeST.nB : ""); //自B性格補正値
  const mypokenC = parseFloat(mypokeST ? mypokeST.nC : ""); //自C性格補正値
  const mypokenD = parseFloat(mypokeST ? mypokeST.nD : ""); //自D性格補正値
  const mypokenS = parseFloat(mypokeST ? mypokeST.nS : ""); //自S性格補正値

  let mypokeStatusH;
  if (mypokeBaseH == 1) {
    mypokeStatusH = 1;
  } else {
    mypokeStatusH = Math.floor(((mypokeBaseH * 2 + kotaVal + Math.floor(mypokedH / 4)) * lvVal) / 100) + lvVal + 10; //ヌケニン判定、自HP
  }

  let mypokeStatusA = Math.floor(
    (Math.floor(((mypokeBaseA * 2 + kotaVal + Math.floor(mypokedA / 4)) * lvVal) / 100 + 5) * mypokenA) / 10
  ); //(自A)計算
  let mypokeStatusB = Math.floor(
    (Math.floor(((mypokeBaseB * 2 + kotaVal + Math.floor(mypokedB / 4)) * lvVal) / 100 + 5) * mypokenB) / 10
  ); //(自B)
  let mypokeStatusC = Math.floor(
    (Math.floor(((mypokeBaseC * 2 + kotaVal + Math.floor(mypokedC / 4)) * lvVal) / 100 + 5) * mypokenC) / 10
  ); //(自C)
  let mypokeStatusD = Math.floor(
    (Math.floor(((mypokeBaseD * 2 + kotaVal + Math.floor(mypokedD / 4)) * lvVal) / 100 + 5) * mypokenD) / 10
  ); //(自D)
  let mypokeStatusS = Math.floor(
    (Math.floor(((mypokeBaseS * 2 + kotaVal + Math.floor(mypokedS / 4)) * lvVal) / 100 + 5) * mypokenS) / 10
  ); //(自S)

  // { name: "名前", wtype: "タイプ", power:  威力, powerdisplay: 威力(徹底攻略）, accuracy: 命中(必中100), accuracydisplay: 命中(徹底攻略）, pp: PP, moveClass: "分類", priority: 優先度, contact: "接触", protect: "守", king: "王者補正", subject: "効果対象", effect: "説明", no: 技No value, no51on:昇順並び替え },

  const mypokeMove1 = weaponsdata.find((item) => item.no === mypokeWeapon1No);
  const mypokeMove2 = weaponsdata.find((item) => item.no === mypokeWeapon2No);
  const mypokeMove3 = weaponsdata.find((item) => item.no === mypokeWeapon3No);
  const mypokeMove4 = weaponsdata.find((item) => item.no === mypokeWeapon4No);

  //name: "名前",
  const name1 = mypokeMove1 ? mypokeMove1.name : "";
  const name2 = mypokeMove2 ? mypokeMove2.name : "";
  const name3 = mypokeMove3 ? mypokeMove3.name : "";
  const name4 = mypokeMove4 ? mypokeMove4.name : "";

  //wtype: "タイプ"
  const wtype1 = mypokeMove1 ? mypokeMove1.wtype : "";
  const wtype2 = mypokeMove2 ? mypokeMove2.wtype : "";
  const wtype3 = mypokeMove3 ? mypokeMove3.wtype : "";
  const wtype4 = mypokeMove4 ? mypokeMove4.wtype : "";

  // power  威力
  let power1 = mypokeMove1 ? mypokeMove1.power : "";
  let power2 = mypokeMove2 ? mypokeMove2.power : "";
  let power3 = mypokeMove3 ? mypokeMove3.power : "";
  let power4 = mypokeMove4 ? mypokeMove4.power : "";

  // powerdisplay1:  威力 0は-表記,
  const powerdisplay1 = mypokeMove1 ? mypokeMove1.powerdisplay : "";
  const powerdisplay2 = mypokeMove2 ? mypokeMove2.powerdisplay : "";
  const powerdisplay3 = mypokeMove3 ? mypokeMove3.powerdisplay : "";
  const powerdisplay4 = mypokeMove4 ? mypokeMove4.powerdisplay : "";

  // accuracydisplay: 命中(徹底攻略）
  const accuracydisplay1 = mypokeMove1 ? mypokeMove1.accuracydisplay : "";
  const accuracydisplay2 = mypokeMove2 ? mypokeMove2.accuracydisplay : "";
  const accuracydisplay3 = mypokeMove3 ? mypokeMove3.accuracydisplay : "";
  const accuracydisplay4 = mypokeMove4 ? mypokeMove4.accuracydisplay : "";
  // pp: PP
  // accuracydisplay: 命中(徹底攻略）
  const pp1 = mypokeMove1 ? mypokeMove1.pp : "";
  const pp2 = mypokeMove2 ? mypokeMove2.pp : "";
  const pp3 = mypokeMove3 ? mypokeMove3.pp : "";
  const pp4 = mypokeMove4 ? mypokeMove4.pp : "";
  // moveClass: "分類",
  const moveClass1 = mypokeMove1 ? mypokeMove1.moveClass : "";
  const moveClass2 = mypokeMove2 ? mypokeMove2.moveClass : "";
  const moveClass3 = mypokeMove3 ? mypokeMove3.moveClass : "";
  const moveClass4 = mypokeMove4 ? mypokeMove4.moveClass : "";
  // priority: 優先度
  const priority1 = mypokeMove1 ? mypokeMove1.priority : "";
  const priority2 = mypokeMove2 ? mypokeMove2.priority : "";
  const priority3 = mypokeMove3 ? mypokeMove3.priority : "";
  const priority4 = mypokeMove4 ? mypokeMove4.priority : "";

  // contact: "接触
  const contact1 = mypokeMove1 ? mypokeMove1.contact : "";
  const contact2 = mypokeMove2 ? mypokeMove2.contact : "";
  const contact3 = mypokeMove3 ? mypokeMove3.contact : "";
  const contact4 = mypokeMove4 ? mypokeMove4.contact : "";

  // king: "王者補正
  const king1 = mypokeMove1 ? mypokeMove1.king : "";
  const king2 = mypokeMove2 ? mypokeMove2.king : "";
  const king3 = mypokeMove3 ? mypokeMove3.king : "";
  const king4 = mypokeMove4 ? mypokeMove4.king : "";

  // no: "技ナンバー
  const no1 = mypokeMove1 ? mypokeMove1.no : "";
  const no2 = mypokeMove2 ? mypokeMove2.no : "";
  const no3 = mypokeMove3 ? mypokeMove3.no : "";
  const no4 = mypokeMove4 ? mypokeMove4.no : "";
  // effect: "技の効果
  const effect1 = mypokeMove1 ? mypokeMove1.effect : "";
  const effect2 = mypokeMove2 ? mypokeMove2.effect : "";
  const effect3 = mypokeMove3 ? mypokeMove3.effect : "";
  const effect4 = mypokeMove4 ? mypokeMove4.effect : "";

  // チェックボックスとセレクトボックスの要素を取得する
  const button = document.getElementById("myItemAuto_tab3");
  const selectBox = document.getElementById("myItem_tab3");

  // セレクトボックスの値を設定する関数
  function setSelectBoxValue() {
    const itemValue = mypokeST ? mypokeST.itemName : "";
    const options = selectBox.options;
    for (let i = 0; i < options.length; i++) {
      if (options[i].value === itemValue) {
        selectBox.value = itemValue;
        return;
      }
    }
    selectBox.value = "0";
  }

  // ボタンがクリックされた時にセレクトボックスの値を設定する
  button.addEventListener("click", function () {
    setSelectBoxValue();
  });

  // 初回読み込み時にセレクトボックスの値を設定する（初期状態で適切な値が選択されている場合）
  // setSelectBoxValue();

  //敵のポケモンの情報

  const tekipokeST = bfpokedata.filter((item) => item.pokeNo == tekipokeNameVal); //4型分配列に格納

  const tekiNAME = bfpokedata.find((item) => item.pokeNo == tekipokeNameVal)?.NAME; //敵H種族値※4型とも同じなのでfindで１件目を参照
  const tekipokeBaseH = parseFloat(bfpokedata.find((item) => item.pokeNo == tekipokeNameVal)?.shH); //敵H種族値※4型とも同じなのでfindで１件目を参照
  const tekipokeBaseA = parseFloat(bfpokedata.find((item) => item.pokeNo == tekipokeNameVal)?.shA); //敵A種族値
  const tekipokeBaseB = parseFloat(bfpokedata.find((item) => item.pokeNo == tekipokeNameVal)?.shB); //敵B種族値
  const tekipokeBaseC = parseFloat(bfpokedata.find((item) => item.pokeNo == tekipokeNameVal)?.shC); //敵C種族値
  const tekipokeBaseD = parseFloat(bfpokedata.find((item) => item.pokeNo == tekipokeNameVal)?.shD); //敵D種族値
  const tekipokeBaseS = parseFloat(bfpokedata.find((item) => item.pokeNo == tekipokeNameVal)?.shS); //敵S種族値
  const tekipokeTokusei1 = bfpokedata.find((item) => item.pokeNo == tekipokeNameVal)?.tokusei1; //特性1
  const tekipokeTokusei2 = bfpokedata.find((item) => item.pokeNo == tekipokeNameVal)?.tokusei2; //特性2
  const tekipokeKusamusubiDamage = parseFloat(bfpokedata.find((item) => item.pokeNo == tekipokeNameVal)?.kusamusubiD); //攻撃がわ草結び被ダメ
  const tekipokeType1 = bfpokedata.find((item) => item.pokeNo == tekipokeNameVal)?.t1; //タイプ1
  const tekipokeType2 = bfpokedata.find((item) => item.pokeNo == tekipokeNameVal)?.t2; //タイプ2

  const tekipokeBfNoArray = tekipokeST.map((item) => item.bfNo); //性格4型配列
  const tekipokeBfNoshape1 = tekipokeBfNoArray[0]; //敵bfNo　型1
  const tekipokeBfNoshape2 = tekipokeBfNoArray[1]; //敵bfNo　型2
  const tekipokeBfNoshape3 = tekipokeBfNoArray[2]; //敵bfNo　型3
  const tekipokeBfNoshape4 = tekipokeBfNoArray[3]; //敵bfNo　型4

  const tekipokenNAMEArray = tekipokeST.map((item) => item.nNAME); //性格4型配列
  const tekipokenNAMEshape1 = tekipokenNAMEArray[0]; //敵性格　型1
  const tekipokenNAMEshape2 = tekipokenNAMEArray[1]; //敵性格　型2
  const tekipokenNAMEshape3 = tekipokenNAMEArray[2]; //敵性格　型3
  const tekipokenNAMEshape4 = tekipokenNAMEArray[3]; //敵性格　型4

  //ここでNaN返した場合は出力しないようにする。
  const tekipokeShapeArray = tekipokeST.map((item) => item.shape); //型4型配列
  const tekipokeShape1 = parseFloat(tekipokeShapeArray[0]); //敵型　型1
  const tekipokeShape2 = parseFloat(tekipokeShapeArray[1]); //敵型　型2
  const tekipokeShape3 = parseFloat(tekipokeShapeArray[2]); //敵型　型3
  const tekipokeShape4 = parseFloat(tekipokeShapeArray[3]); //敵型　型4

  const tekipokeItemNameArray = tekipokeST.map((item) => item.itemName); //持ち物名称4型配列
  const tekipokeItemName1 = tekipokeItemNameArray[0]; //敵持ち物名称　型1
  const tekipokeItemName2 = tekipokeItemNameArray[1]; //敵持ち物名称　型2
  const tekipokeItemName3 = tekipokeItemNameArray[2]; //敵持ち物名称　型3
  const tekipokeItemName4 = tekipokeItemNameArray[3]; //敵持ち物名称　型4

  const tekipokeItemValueArray = tekipokeST.map((item) => item.item); //持ち物ID4型配列
  const tekipokeItem1 = tekipokeItemValueArray[0]; //敵持ち物ID　型1
  const tekipokeItem2 = tekipokeItemValueArray[1]; //敵持ち物ID　型2
  const tekipokeItem3 = tekipokeItemValueArray[2]; //敵持ち物ID　型3
  const tekipokeItem4 = tekipokeItemValueArray[3]; //敵持ち物ID　型4

  const tekipokeWeight = parseFloat(bfpokedata.find((item) => item.pokeNo == tekipokeNameVal)?.weight); //体重

  const tekipokeWeapon1NoArray = tekipokeST.map((item) => parseFloat(item.weapon1));
  const tekipokeWeapon1NoS1 = parseFloat(tekipokeWeapon1NoArray[0]); //敵わざ1　型1
  const tekipokeWeapon1NoS2 = parseFloat(tekipokeWeapon1NoArray[1]); //敵わざ1　型2
  const tekipokeWeapon1NoS3 = parseFloat(tekipokeWeapon1NoArray[2]); //敵わざ1　型3
  const tekipokeWeapon1NoS4 = parseFloat(tekipokeWeapon1NoArray[3]); //敵わざ1　型4

  const tekipokeWeapon2NoArray = tekipokeST.map((item) => parseFloat(item.weapon2));
  const tekipokeWeapon2NoS1 = parseFloat(tekipokeWeapon2NoArray[0]); //敵わざ2　型1
  const tekipokeWeapon2NoS2 = parseFloat(tekipokeWeapon2NoArray[1]); //敵わざ2　型2
  const tekipokeWeapon2NoS3 = parseFloat(tekipokeWeapon2NoArray[2]); //敵わざ2　型3
  const tekipokeWeapon2NoS4 = parseFloat(tekipokeWeapon2NoArray[3]); //敵わざ2　型4

  const tekipokeWeapon3NoArray = tekipokeST.map((item) => parseFloat(item.weapon3));
  const tekipokeWeapon3NoS1 = parseFloat(tekipokeWeapon3NoArray[0]); //敵わざ3　型1
  const tekipokeWeapon3NoS2 = parseFloat(tekipokeWeapon3NoArray[1]); //敵わざ3　型2
  const tekipokeWeapon3NoS3 = parseFloat(tekipokeWeapon3NoArray[2]); //敵わざ3　型3
  const tekipokeWeapon3NoS4 = parseFloat(tekipokeWeapon3NoArray[3]); //敵わざ3　型4

  const tekipokeWeapon4NoArray = tekipokeST.map((item) => parseFloat(item.weapon4));
  const tekipokeWeapon4NoS1 = parseFloat(tekipokeWeapon4NoArray[0]); //敵わざ4　型1
  const tekipokeWeapon4NoS2 = parseFloat(tekipokeWeapon4NoArray[1]); //敵わざ4　型2
  const tekipokeWeapon4NoS3 = parseFloat(tekipokeWeapon4NoArray[2]); //敵わざ4　型3
  const tekipokeWeapon4NoS4 = parseFloat(tekipokeWeapon4NoArray[3]); //敵わざ4　型4

  const tekipokedHArray = tekipokeST.map((item) => parseFloat(item.dH));
  const tekipokedHS1 = parseFloat(tekipokedHArray[0]); //敵H努力値　型1
  const tekipokedHS2 = parseFloat(tekipokedHArray[1]); //敵H努力値　型2
  const tekipokedHS3 = parseFloat(tekipokedHArray[2]); //敵H努力値　型3
  const tekipokedHS4 = parseFloat(tekipokedHArray[3]); //敵H努力値　型4

  const tekipokedAArray = tekipokeST.map((item) => parseFloat(item.dA));
  const tekipokedAS1 = parseFloat(tekipokedAArray[0]); //敵A努力値　型1
  const tekipokedAS2 = parseFloat(tekipokedAArray[1]); //敵A努力値　型2
  const tekipokedAS3 = parseFloat(tekipokedAArray[2]); //敵A努力値　型3
  const tekipokedAS4 = parseFloat(tekipokedAArray[3]); //敵A努力値　型4

  const tekipokedBArray = tekipokeST.map((item) => parseFloat(item.dB));
  const tekipokedBS1 = parseFloat(tekipokedBArray[0]); //敵B努力値　型1
  const tekipokedBS2 = parseFloat(tekipokedBArray[1]); //敵B努力値　型2
  const tekipokedBS3 = parseFloat(tekipokedBArray[2]); //敵B努力値　型3
  const tekipokedBS4 = parseFloat(tekipokedBArray[3]); //敵B努力値　型4

  const tekipokedCArray = tekipokeST.map((item) => parseFloat(item.dC));
  const tekipokedCS1 = parseFloat(tekipokedCArray[0]); //敵C努力値　型1
  const tekipokedCS2 = parseFloat(tekipokedCArray[1]); //敵C努力値　型2
  const tekipokedCS3 = parseFloat(tekipokedCArray[2]); //敵C努力値　型3
  const tekipokedCS4 = parseFloat(tekipokedCArray[3]); //敵C努力値　型4

  const tekipokedDArray = tekipokeST.map((item) => parseFloat(item.dD));
  const tekipokedDS1 = parseFloat(tekipokedDArray[0]); //敵D努力値　型1
  const tekipokedDS2 = parseFloat(tekipokedDArray[1]); //敵D努力値　型2
  const tekipokedDS3 = parseFloat(tekipokedDArray[2]); //敵D努力値　型3
  const tekipokedDS4 = parseFloat(tekipokedDArray[3]); //敵D努力値　型4

  const tekipokedSArray = tekipokeST.map((item) => parseFloat(item.dS));
  const tekipokedSS1 = parseFloat(tekipokedSArray[0]); //敵S努力値　型1
  const tekipokedSS2 = parseFloat(tekipokedSArray[1]); //敵S努力値　型2
  const tekipokedSS3 = parseFloat(tekipokedSArray[2]); //敵S努力値　型3
  const tekipokedSS4 = parseFloat(tekipokedSArray[3]); //敵S努力値　型4

  //性格補正
  const tekipokenAArray = tekipokeST.map((item) => parseFloat(item.nA));
  const tekipokenAS1 = parseFloat(tekipokenAArray[0]); //敵A性格補正　型1
  const tekipokenAS2 = parseFloat(tekipokenAArray[1]); //敵A性格補正　型2
  const tekipokenAS3 = parseFloat(tekipokenAArray[2]); //敵A性格補正　型3
  const tekipokenAS4 = parseFloat(tekipokenAArray[3]); //敵A性格補正　型4

  //     const tekipokenB = parseFloat(tekipokeST.nB);
  const tekipokenBArray = tekipokeST.map((item) => parseFloat(item.nB));
  const tekipokenBS1 = parseFloat(tekipokenBArray[0]); //敵B性格補正　型1
  const tekipokenBS2 = parseFloat(tekipokenBArray[1]); //敵B性格補正　型2
  const tekipokenBS3 = parseFloat(tekipokenBArray[2]); //敵B性格補正　型3
  const tekipokenBS4 = parseFloat(tekipokenBArray[3]); //敵B性格補正　型4

  //     const tekipokenC = parseFloat(tekipokeST.nC);
  const tekipokenCArray = tekipokeST.map((item) => parseFloat(item.nC));
  const tekipokenCS1 = parseFloat(tekipokenCArray[0]); //敵C性格補正　型1
  const tekipokenCS2 = parseFloat(tekipokenCArray[1]); //敵C性格補正　型2
  const tekipokenCS3 = parseFloat(tekipokenCArray[2]); //敵C性格補正　型3
  const tekipokenCS4 = parseFloat(tekipokenCArray[3]); //敵C性格補正　型4

  //     const tekipokenD = parseFloat(tekipokeST.nD);
  const tekipokenDArray = tekipokeST.map((item) => parseFloat(item.nD));
  const tekipokenDS1 = parseFloat(tekipokenDArray[0]); //敵D性格補正　型1
  const tekipokenDS2 = parseFloat(tekipokenDArray[1]); //敵D性格補正　型2
  const tekipokenDS3 = parseFloat(tekipokenDArray[2]); //敵D性格補正　型3
  const tekipokenDS4 = parseFloat(tekipokenDArray[3]); //敵D性格補正　型4

  //     const tekipokenS = parseFloat(tekipokeST.nS);
  const tekipokenSArray = tekipokeST.map((item) => parseFloat(item.nS));
  const tekipokenSS1 = parseFloat(tekipokenSArray[0]); //敵S性格補正　型1
  const tekipokenSS2 = parseFloat(tekipokenSArray[1]); //敵S性格補正　型2
  const tekipokenSS3 = parseFloat(tekipokenSArray[2]); //敵S性格補正　型3
  const tekipokenSS4 = parseFloat(tekipokenSArray[3]); //敵S性格補正　型4

  const selectBoxTeki1 = document.getElementById("tekiItem1_tab3");
  const selectBoxTeki2 = document.getElementById("tekiItem2_tab3");
  const selectBoxTeki3 = document.getElementById("tekiItem3_tab3");
  const selectBoxTeki4 = document.getElementById("tekiItem4_tab3");

  // セレクトボックスの値を設定する関数
  function setSelectBoxTeki1Value() {
    const itemValue = tekipokeItemNameArray[0]; //敵持ち物名称　型1
    const options = selectBoxTeki1.options;
    for (let i = 0; i < options.length; i++) {
      if (options[i].value === itemValue) {
        selectBoxTeki1.value = itemValue;
        return;
      }
    }
    selectBoxTeki1.value = "0";
  }

  // ボタンがクリックされた時にセレクトボックスの値を設定する
  button.addEventListener("click", function () {
    setSelectBoxTeki1Value();
  });

  // 初回読み込み時にセレクトボックスの値を設定する（初期状態で適切な値が選択されている場合）
  // setSelectBoxTeki1Value();

  // セレクトボックスの値を設定する関数
  function setSelectBoxTeki2Value() {
    const itemValue = tekipokeItemNameArray[1]; //敵持ち物名称　型2
    const options = selectBoxTeki2.options;
    for (let i = 0; i < options.length; i++) {
      if (options[i].value === itemValue) {
        selectBoxTeki2.value = itemValue;
        return;
      }
    }
    selectBoxTeki2.value = "0";
  }

  // ボタンがクリックされた時にセレクトボックスの値を設定する
  button.addEventListener("click", function () {
    setSelectBoxTeki2Value();
  });

  // 初回読み込み時にセレクトボックスの値を設定する（初期状態で適切な値が選択されている場合）
  // setSelectBoxTeki2Value();

  // セレクトボックスの値を設定する関数
  function setSelectBoxTeki3Value() {
    const itemValue = tekipokeItemNameArray[2]; //敵持ち物名称　型3
    const options = selectBoxTeki3.options;
    for (let i = 0; i < options.length; i++) {
      if (options[i].value === itemValue) {
        selectBoxTeki3.value = itemValue;
        return;
      }
    }
    selectBoxTeki3.value = "0";
  }

  // ボタンがクリックされた時にセレクトボックスの値を設定する
  button.addEventListener("click", function () {
    setSelectBoxTeki3Value();
  });

  // 初回読み込み時にセレクトボックスの値を設定する（初期状態で適切な値が選択されている場合）
  // setSelectBoxTeki3Value();

  // セレクトボックスの値を設定する関数
  function setSelectBoxTeki4Value() {
    const itemValue = tekipokeItemNameArray[3]; //敵持ち物名称　型4
    const options = selectBoxTeki4.options;
    for (let i = 0; i < options.length; i++) {
      if (options[i].value === itemValue) {
        selectBoxTeki4.value = itemValue;
        return;
      }
    }
    selectBoxTeki4.value = "0";
  }

  // ボタンがクリックされた時にセレクトボックスの値を設定する
  button.addEventListener("click", function () {
    setSelectBoxTeki4Value();
  });

  // 初回読み込み時にセレクトボックスの値を設定する（初期状態で適切な値が選択されている場合）
  // setSelectBoxTeki4Value();

  const trainerData = trainerdata.find((item) => item.cd == trainersVal);

  const trainerId = parseFloat(trainerData.cd); //トレーナID
  const trainerRank = parseFloat(trainerData.rank); //トレーナID
  const trainerKota = parseFloat(trainerData.kota); //個体値
  const trainerUnder100 = parseFloat(trainerData.under100); //オープン使用範囲下限
  const trainerTop100 = parseFloat(trainerData.top100); //オープン使用範囲上限
  const trainerSelect100 = trainerData.select100; //オープン使用範囲
  const trainerUnder50 = parseFloat(trainerData.under50); //50レベル使用範囲下限
  const trainerTop50 = parseFloat(trainerData.top50); //50レベル使用範囲上限
  const trainerSelect50 = trainerData.select50; //50レベル使用範囲
  const trainerName = trainerData.label; //トレーナー名

  let tekipokeStatusHS1;
  let tekipokeStatusHS2;
  let tekipokeStatusHS3;
  let tekipokeStatusHS4;

  if (tekipokeBaseH == 1) {
    tekipokeStatusHS1 = 1; //ヌケニン判定
    tekipokeStatusHS2 = 1;
    tekipokeStatusHS3 = 1;
    tekipokeStatusHS4 = 1;
  } else {
    tekipokeStatusHS1 =
      Math.floor(((tekipokeBaseH * 2 + trainerKota + Math.floor(tekipokedHS1 / 4)) * lvVal) / 100) + lvVal + 10; //敵HP　型1
    tekipokeStatusHS2 =
      Math.floor(((tekipokeBaseH * 2 + trainerKota + Math.floor(tekipokedHS2 / 4)) * lvVal) / 100) + lvVal + 10; //敵HP　型2
    tekipokeStatusHS3 =
      Math.floor(((tekipokeBaseH * 2 + trainerKota + Math.floor(tekipokedHS3 / 4)) * lvVal) / 100) + lvVal + 10; //敵HP　型3
    tekipokeStatusHS4 =
      Math.floor(((tekipokeBaseH * 2 + trainerKota + Math.floor(tekipokedHS4 / 4)) * lvVal) / 100) + lvVal + 10; //敵HP　型4
  }

  let tekipokeStatusAS1 = Math.floor(
    (Math.floor(((tekipokeBaseA * 2 + trainerKota + Math.floor(tekipokedAS1 / 4)) * lvVal) / 100 + 5) * tekipokenAS1) /
      10
  ); //(敵A)型1
  let tekipokeStatusAS2 = Math.floor(
    (Math.floor(((tekipokeBaseA * 2 + trainerKota + Math.floor(tekipokedAS2 / 4)) * lvVal) / 100 + 5) * tekipokenAS2) /
      10
  ); //(敵A)型2
  let tekipokeStatusAS3 = Math.floor(
    (Math.floor(((tekipokeBaseA * 2 + trainerKota + Math.floor(tekipokedAS3 / 4)) * lvVal) / 100 + 5) * tekipokenAS3) /
      10
  ); //(敵A)型3
  let tekipokeStatusAS4 = Math.floor(
    (Math.floor(((tekipokeBaseA * 2 + trainerKota + Math.floor(tekipokedAS4 / 4)) * lvVal) / 100 + 5) * tekipokenAS4) /
      10
  ); //(敵A)型4

  let tekipokeStatusBS1 = Math.floor(
    (Math.floor(((tekipokeBaseB * 2 + trainerKota + Math.floor(tekipokedBS1 / 4)) * lvVal) / 100 + 5) * tekipokenBS1) /
      10
  ); //(敵B)型1
  let tekipokeStatusBS2 = Math.floor(
    (Math.floor(((tekipokeBaseB * 2 + trainerKota + Math.floor(tekipokedBS2 / 4)) * lvVal) / 100 + 5) * tekipokenBS2) /
      10
  ); //(敵B)型2
  let tekipokeStatusBS3 = Math.floor(
    (Math.floor(((tekipokeBaseB * 2 + trainerKota + Math.floor(tekipokedBS3 / 4)) * lvVal) / 100 + 5) * tekipokenBS3) /
      10
  ); //(敵B)型3
  let tekipokeStatusBS4 = Math.floor(
    (Math.floor(((tekipokeBaseB * 2 + trainerKota + Math.floor(tekipokedBS4 / 4)) * lvVal) / 100 + 5) * tekipokenBS4) /
      10
  ); //(敵B)型4

  let tekipokeStatusCS1 = Math.floor(
    (Math.floor(((tekipokeBaseC * 2 + trainerKota + Math.floor(tekipokedCS1 / 4)) * lvVal) / 100 + 5) * tekipokenCS1) /
      10
  ); //(敵C)型1
  let tekipokeStatusCS2 = Math.floor(
    (Math.floor(((tekipokeBaseC * 2 + trainerKota + Math.floor(tekipokedCS2 / 4)) * lvVal) / 100 + 5) * tekipokenCS2) /
      10
  ); //(敵C)型2
  let tekipokeStatusCS3 = Math.floor(
    (Math.floor(((tekipokeBaseC * 2 + trainerKota + Math.floor(tekipokedCS3 / 4)) * lvVal) / 100 + 5) * tekipokenCS3) /
      10
  ); //(敵C)型3
  let tekipokeStatusCS4 = Math.floor(
    (Math.floor(((tekipokeBaseC * 2 + trainerKota + Math.floor(tekipokedCS4 / 4)) * lvVal) / 100 + 5) * tekipokenCS4) /
      10
  ); //(敵C)型4

  let tekipokeStatusDS1 = Math.floor(
    (Math.floor(((tekipokeBaseD * 2 + trainerKota + Math.floor(tekipokedDS1 / 4)) * lvVal) / 100 + 5) * tekipokenDS1) /
      10
  ); //(敵D)型1
  let tekipokeStatusDS2 = Math.floor(
    (Math.floor(((tekipokeBaseD * 2 + trainerKota + Math.floor(tekipokedDS2 / 4)) * lvVal) / 100 + 5) * tekipokenDS2) /
      10
  ); //(敵D)型2
  let tekipokeStatusDS3 = Math.floor(
    (Math.floor(((tekipokeBaseD * 2 + trainerKota + Math.floor(tekipokedDS3 / 4)) * lvVal) / 100 + 5) * tekipokenDS3) /
      10
  ); //(敵D)型3
  let tekipokeStatusDS4 = Math.floor(
    (Math.floor(((tekipokeBaseD * 2 + trainerKota + Math.floor(tekipokedDS4 / 4)) * lvVal) / 100 + 5) * tekipokenDS4) /
      10
  ); //(敵D)型4

  let tekipokeStatusSS1 = Math.floor(
    (Math.floor(((tekipokeBaseS * 2 + trainerKota + Math.floor(tekipokedSS1 / 4)) * lvVal) / 100 + 5) * tekipokenSS1) /
      10
  ); //(敵S)型1
  let tekipokeStatusSS2 = Math.floor(
    (Math.floor(((tekipokeBaseS * 2 + trainerKota + Math.floor(tekipokedSS2 / 4)) * lvVal) / 100 + 5) * tekipokenSS2) /
      10
  ); //(敵S)型2
  let tekipokeStatusSS3 = Math.floor(
    (Math.floor(((tekipokeBaseS * 2 + trainerKota + Math.floor(tekipokedSS3 / 4)) * lvVal) / 100 + 5) * tekipokenSS3) /
      10
  ); //(敵S)型3
  let tekipokeStatusSS4 = Math.floor(
    (Math.floor(((tekipokeBaseS * 2 + trainerKota + Math.floor(tekipokedSS4 / 4)) * lvVal) / 100 + 5) * tekipokenSS4) /
      10
  ); //(敵S)型4

  //      { name: "名前", wtype: "タイプ", power:  威力, powerdisplay: 威力(徹底攻略）, accuracy: 命中(必中100), accuracydisplay: 命中(徹底攻略）, pp: PP, moveClass: "分類", priority: 優先度, contact: "接触", protect: "守", king: "王者補正", subject: "効果対象", effect: "説明", no: 技No value, no51on:昇順並び替え },

  //敵のポケモン型1

  const tekipokeMove1S1 = weaponsdata.find((item) => item.no === tekipokeWeapon1NoS1);
  const tekipokeMove2S1 = weaponsdata.find((item) => item.no === tekipokeWeapon2NoS1);
  const tekipokeMove3S1 = weaponsdata.find((item) => item.no === tekipokeWeapon3NoS1);
  const tekipokeMove4S1 = weaponsdata.find((item) => item.no === tekipokeWeapon4NoS1);

  const name1S1 = tekipokeMove1S1 ? tekipokeMove1S1.name : ""; //型1　わざ1 名称
  const name2S1 = tekipokeMove2S1 ? tekipokeMove2S1.name : ""; //型1　わざ2 名称
  const name3S1 = tekipokeMove3S1 ? tekipokeMove3S1.name : ""; //型1　わざ3 名称
  const name4S1 = tekipokeMove4S1 ? tekipokeMove4S1.name : ""; //型1　わざ4 名称
  const wtype1S1 = tekipokeMove1S1 ? tekipokeMove1S1.wtype : ""; //型1　わざ1 タイプ
  const wtype2S1 = tekipokeMove2S1 ? tekipokeMove2S1.wtype : ""; //型1　わざ2 タイプ
  const wtype3S1 = tekipokeMove3S1 ? tekipokeMove3S1.wtype : ""; //型1　わざ3 タイプ
  const wtype4S1 = tekipokeMove4S1 ? tekipokeMove4S1.wtype : ""; //型1　わざ4 タイプ

  let power1S1 = tekipokeMove1S1 ? tekipokeMove1S1.power : ""; //型1　わざ1 威力
  let power2S1 = tekipokeMove2S1 ? tekipokeMove2S1.power : ""; //型1　わざ2 威力
  let power3S1 = tekipokeMove3S1 ? tekipokeMove3S1.power : ""; //型1　わざ3 威力
  let power4S1 = tekipokeMove4S1 ? tekipokeMove4S1.power : ""; //型1　わざ4 威力
  const powerdisplay1S1 = tekipokeMove1S1 ? tekipokeMove1S1.powerdisplay : ""; //型1　わざ1 威力表示
  const powerdisplay2S1 = tekipokeMove2S1 ? tekipokeMove2S1.powerdisplay : ""; //型1　わざ2 威力表示
  const powerdisplay3S1 = tekipokeMove3S1 ? tekipokeMove3S1.powerdisplay : ""; //型1　わざ3 威力表示
  const powerdisplay4S1 = tekipokeMove4S1 ? tekipokeMove4S1.powerdisplay : ""; //型1　わざ4 威力表示
  const accuracydisplay1S1 = tekipokeMove1S1 ? tekipokeMove1S1.accuracydisplay : ""; //型1　わざ1 命中(徹底攻略）
  const accuracydisplay2S1 = tekipokeMove2S1 ? tekipokeMove2S1.accuracydisplay : ""; //型1　わざ2 命中(徹底攻略）
  const accuracydisplay3S1 = tekipokeMove3S1 ? tekipokeMove3S1.accuracydisplay : ""; //型1　わざ3 命中(徹底攻略）
  const accuracydisplay4S1 = tekipokeMove4S1 ? tekipokeMove4S1.accuracydisplay : ""; //型1　わざ4 命中(徹底攻略）
  const pp1S1 = tekipokeMove1S1 ? tekipokeMove1S1.pp : ""; //型1　わざ1 PP
  const pp2S1 = tekipokeMove2S1 ? tekipokeMove2S1.pp : ""; //型1　わざ2 PP
  const pp3S1 = tekipokeMove3S1 ? tekipokeMove3S1.pp : ""; //型1　わざ3 PP
  const pp4S1 = tekipokeMove4S1 ? tekipokeMove4S1.pp : ""; //型1　わざ4 PP
  const moveClass1S1 = tekipokeMove1S1 ? tekipokeMove1S1.moveClass : ""; //型1　わざ1 分類
  const moveClass2S1 = tekipokeMove2S1 ? tekipokeMove2S1.moveClass : ""; //型1　わざ2 分類
  const moveClass3S1 = tekipokeMove3S1 ? tekipokeMove3S1.moveClass : ""; //型1　わざ3 分類
  const moveClass4S1 = tekipokeMove4S1 ? tekipokeMove4S1.moveClass : ""; //型1　わざ4 分類
  const priority1S1 = tekipokeMove1S1 ? tekipokeMove1S1.priority : ""; //型1　わざ1 優先度
  const priority2S1 = tekipokeMove2S1 ? tekipokeMove2S1.priority : ""; //型1　わざ2 優先度
  const priority3S1 = tekipokeMove3S1 ? tekipokeMove3S1.priority : ""; //型1　わざ3 優先度
  const priority4S1 = tekipokeMove4S1 ? tekipokeMove4S1.priority : ""; //型1　わざ4 優先度
  const contact1S1 = tekipokeMove1S1 ? tekipokeMove1S1.contact : ""; //型1　わざ1 接触
  const contact2S1 = tekipokeMove2S1 ? tekipokeMove2S1.contact : ""; //型1　わざ2 接触
  const contact3S1 = tekipokeMove3S1 ? tekipokeMove3S1.contact : ""; //型1　わざ3 接触
  const contact4S1 = tekipokeMove4S1 ? tekipokeMove4S1.contact : ""; //型1　わざ4 接触
  const king1S1 = tekipokeMove1S1 ? tekipokeMove1S1.king : ""; //型1　わざ1 王者補正
  const king2S1 = tekipokeMove2S1 ? tekipokeMove2S1.king : ""; //型1　わざ2 王者補正
  const king3S1 = tekipokeMove3S1 ? tekipokeMove3S1.king : ""; //型1　わざ3 王者補正
  const king4S1 = tekipokeMove4S1 ? tekipokeMove4S1.king : ""; //型1　わざ4 王者補正
  const no1S1 = tekipokeMove1S1 ? tekipokeMove1S1.no : ""; //型1　わざ1 技ナンバー
  const no2S1 = tekipokeMove2S1 ? tekipokeMove2S1.no : ""; //型1　わざ2 技ナンバー
  const no3S1 = tekipokeMove3S1 ? tekipokeMove3S1.no : ""; //型1　わざ3 技ナンバー
  const no4S1 = tekipokeMove4S1 ? tekipokeMove4S1.no : ""; //型1　わざ4 技ナンバー
  const effect1S1 = tekipokeMove1S1 ? tekipokeMove1S1.effect : ""; //型1　わざ1 技の効果
  const effect2S1 = tekipokeMove2S1 ? tekipokeMove2S1.effect : ""; //型1　わざ2 技の効果
  const effect3S1 = tekipokeMove3S1 ? tekipokeMove3S1.effect : ""; //型1　わざ3 技の効果
  const effect4S1 = tekipokeMove4S1 ? tekipokeMove4S1.effect : ""; //型1　わざ4 技の効果

  ///////////////////////////////////

  //敵のポケモン型2

  const tekipokeMove1S2 = weaponsdata.find((item) => item.no === tekipokeWeapon1NoS2);
  const tekipokeMove2S2 = weaponsdata.find((item) => item.no === tekipokeWeapon2NoS2);
  const tekipokeMove3S2 = weaponsdata.find((item) => item.no === tekipokeWeapon3NoS2);
  const tekipokeMove4S2 = weaponsdata.find((item) => item.no === tekipokeWeapon4NoS2);

  const name1S2 = tekipokeMove1S2 ? tekipokeMove1S2.name : ""; //型2　わざ2 名称
  const name2S2 = tekipokeMove2S2 ? tekipokeMove2S2.name : ""; //型2　わざ2 名称
  const name3S2 = tekipokeMove3S2 ? tekipokeMove3S2.name : ""; //型2　わざ2 名称
  const name4S2 = tekipokeMove4S2 ? tekipokeMove4S2.name : ""; //型2　わざ2 名称

  const wtype1S2 = tekipokeMove1S2 ? tekipokeMove1S2.wtype : ""; //型2　わざ2 タイプ
  const wtype2S2 = tekipokeMove2S2 ? tekipokeMove2S2.wtype : ""; //型2　わざ2 タイプ
  const wtype3S2 = tekipokeMove3S2 ? tekipokeMove3S2.wtype : ""; //型2　わざ2 タイプ
  const wtype4S2 = tekipokeMove4S2 ? tekipokeMove4S2.wtype : ""; //型2　わざ2 タイプ

  let power1S2 = tekipokeMove1S2 ? tekipokeMove1S2.power : ""; //型2　わざ2 威力
  let power2S2 = tekipokeMove2S2 ? tekipokeMove2S2.power : ""; //型2　わざ2 威力
  let power3S2 = tekipokeMove3S2 ? tekipokeMove3S2.power : ""; //型2　わざ2 威力
  let power4S2 = tekipokeMove4S2 ? tekipokeMove4S2.power : ""; //型2　わざ2 威力

  const powerdisplay1S2 = tekipokeMove1S2 ? tekipokeMove1S2.powerdisplay : ""; //型2　わざ2 威力表示
  const powerdisplay2S2 = tekipokeMove2S2 ? tekipokeMove2S2.powerdisplay : ""; //型2　わざ2 威力表示
  const powerdisplay3S2 = tekipokeMove3S2 ? tekipokeMove3S2.powerdisplay : ""; //型2　わざ2 威力表示
  const powerdisplay4S2 = tekipokeMove4S2 ? tekipokeMove4S2.powerdisplay : ""; //型2　わざ2 威力表示
  const accuracydisplay1S2 = tekipokeMove1S2 ? tekipokeMove1S2.accuracydisplay : ""; //型2　わざ2 命中(徹底攻略）
  const accuracydisplay2S2 = tekipokeMove2S2 ? tekipokeMove2S2.accuracydisplay : ""; //型2　わざ2 命中(徹底攻略）
  const accuracydisplay3S2 = tekipokeMove3S2 ? tekipokeMove3S2.accuracydisplay : ""; //型2　わざ2 命中(徹底攻略）
  const accuracydisplay4S2 = tekipokeMove4S2 ? tekipokeMove4S2.accuracydisplay : ""; //型2　わざ2 命中(徹底攻略）
  const pp1S2 = tekipokeMove1S2 ? tekipokeMove1S2.pp : ""; //型2　わざ2 PP
  const pp2S2 = tekipokeMove2S2 ? tekipokeMove2S2.pp : ""; //型2　わざ2 PP
  const pp3S2 = tekipokeMove3S2 ? tekipokeMove3S2.pp : ""; //型2　わざ2 PP
  const pp4S2 = tekipokeMove4S2 ? tekipokeMove4S2.pp : ""; //型2　わざ2 PP
  const moveClass1S2 = tekipokeMove1S2 ? tekipokeMove1S2.moveClass : ""; //型2　わざ2 分類
  const moveClass2S2 = tekipokeMove2S2 ? tekipokeMove2S2.moveClass : ""; //型2　わざ2 分類
  const moveClass3S2 = tekipokeMove3S2 ? tekipokeMove3S2.moveClass : ""; //型2　わざ2 分類
  const moveClass4S2 = tekipokeMove4S2 ? tekipokeMove4S2.moveClass : ""; //型2　わざ2 分類
  const priority1S2 = tekipokeMove1S2 ? tekipokeMove1S2.priority : ""; //型2　わざ2 優先度
  const priority2S2 = tekipokeMove2S2 ? tekipokeMove2S2.priority : ""; //型2　わざ2 優先度
  const priority3S2 = tekipokeMove3S2 ? tekipokeMove3S2.priority : ""; //型2　わざ2 優先度
  const priority4S2 = tekipokeMove4S2 ? tekipokeMove4S2.priority : ""; //型2　わざ2 優先度
  const contact1S2 = tekipokeMove1S2 ? tekipokeMove1S2.contact : ""; //型2　わざ2 接触
  const contact2S2 = tekipokeMove2S2 ? tekipokeMove2S2.contact : ""; //型2　わざ2 接触
  const contact3S2 = tekipokeMove3S2 ? tekipokeMove3S2.contact : ""; //型2　わざ2 接触
  const contact4S2 = tekipokeMove4S2 ? tekipokeMove4S2.contact : ""; //型2　わざ2 接触
  const king1S2 = tekipokeMove1S2 ? tekipokeMove1S2.king : ""; //型2　わざ2 王者補正
  const king2S2 = tekipokeMove2S2 ? tekipokeMove2S2.king : ""; //型2　わざ2 王者補正
  const king3S2 = tekipokeMove3S2 ? tekipokeMove3S2.king : ""; //型2　わざ2 王者補正
  const king4S2 = tekipokeMove4S2 ? tekipokeMove4S2.king : ""; //型2　わざ2 王者補正
  const no1S2 = tekipokeMove1S2 ? tekipokeMove1S2.no : ""; //型2　わざ2 技ナンバー
  const no2S2 = tekipokeMove2S2 ? tekipokeMove2S2.no : ""; //型2　わざ2 技ナンバー
  const no3S2 = tekipokeMove3S2 ? tekipokeMove3S2.no : ""; //型2　わざ2 技ナンバー
  const no4S2 = tekipokeMove4S2 ? tekipokeMove4S2.no : ""; //型2　わざ2 技ナンバー
  const effect1S2 = tekipokeMove1S2 ? tekipokeMove1S2.effect : ""; //型3　わざ3 技の効果
  const effect2S2 = tekipokeMove2S2 ? tekipokeMove2S2.effect : ""; //型3　わざ3 技の効果
  const effect3S2 = tekipokeMove3S2 ? tekipokeMove3S2.effect : ""; //型3　わざ3 技の効果
  const effect4S2 = tekipokeMove4S2 ? tekipokeMove4S2.effect : ""; //型3　わざ3 技の効果

  //敵のポケモン型3
  const tekipokeMove1S3 = weaponsdata.find((item) => item.no === tekipokeWeapon1NoS3);
  const tekipokeMove2S3 = weaponsdata.find((item) => item.no === tekipokeWeapon2NoS3);
  const tekipokeMove3S3 = weaponsdata.find((item) => item.no === tekipokeWeapon3NoS3);
  const tekipokeMove4S3 = weaponsdata.find((item) => item.no === tekipokeWeapon4NoS3);

  const name1S3 = tekipokeMove1S3 ? tekipokeMove1S3.name : ""; //型3　わざ3 名称
  const name2S3 = tekipokeMove2S3 ? tekipokeMove2S3.name : ""; //型3　わざ3 名称
  const name3S3 = tekipokeMove3S3 ? tekipokeMove3S3.name : ""; //型3　わざ3 名称
  const name4S3 = tekipokeMove4S3 ? tekipokeMove4S3.name : ""; //型3　わざ3 名称

  const wtype1S3 = tekipokeMove1S3 ? tekipokeMove1S3.wtype : ""; //型3　わざ3 タイプ
  const wtype2S3 = tekipokeMove2S3 ? tekipokeMove2S3.wtype : ""; //型3　わざ3 タイプ
  const wtype3S3 = tekipokeMove3S3 ? tekipokeMove3S3.wtype : ""; //型3　わざ3 タイプ
  const wtype4S3 = tekipokeMove4S3 ? tekipokeMove4S3.wtype : ""; //型3　わざ3 タイプ

  let power1S3 = tekipokeMove1S3 ? tekipokeMove1S3.power : ""; //型3　わざ3 威力
  let power2S3 = tekipokeMove2S3 ? tekipokeMove2S3.power : ""; //型3　わざ3 威力
  let power3S3 = tekipokeMove3S3 ? tekipokeMove3S3.power : ""; //型3　わざ3 威力
  let power4S3 = tekipokeMove4S3 ? tekipokeMove4S3.power : ""; //型3　わざ3 威力

  const powerdisplay1S3 = tekipokeMove1S3 ? tekipokeMove1S3.powerdisplay : ""; //型3　わざ3 威力表示
  const powerdisplay2S3 = tekipokeMove2S3 ? tekipokeMove2S3.powerdisplay : ""; //型3　わざ3 威力表示
  const powerdisplay3S3 = tekipokeMove3S3 ? tekipokeMove3S3.powerdisplay : ""; //型3　わざ3 威力表示
  const powerdisplay4S3 = tekipokeMove4S3 ? tekipokeMove4S3.powerdisplay : ""; //型3　わざ3 威力表示

  const accuracydisplay1S3 = tekipokeMove1S3 ? tekipokeMove1S3.accuracydisplay : ""; //型3　わざ3 命中(徹底攻略）
  const accuracydisplay2S3 = tekipokeMove2S3 ? tekipokeMove2S3.accuracydisplay : ""; //型3　わざ3 命中(徹底攻略）
  const accuracydisplay3S3 = tekipokeMove3S3 ? tekipokeMove3S3.accuracydisplay : ""; //型3　わざ3 命中(徹底攻略）
  const accuracydisplay4S3 = tekipokeMove4S3 ? tekipokeMove4S3.accuracydisplay : ""; //型3　わざ3 命中(徹底攻略）
  const pp1S3 = tekipokeMove1S3 ? tekipokeMove1S3.pp : ""; //型3　わざ3 PP
  const pp2S3 = tekipokeMove2S3 ? tekipokeMove2S3.pp : ""; //型3　わざ3 PP
  const pp3S3 = tekipokeMove3S3 ? tekipokeMove3S3.pp : ""; //型3　わざ3 PP
  const pp4S3 = tekipokeMove4S3 ? tekipokeMove4S3.pp : ""; //型3　わざ3 PP
  const moveClass1S3 = tekipokeMove1S3 ? tekipokeMove1S3.moveClass : ""; //型3　わざ3 分類
  const moveClass2S3 = tekipokeMove2S3 ? tekipokeMove2S3.moveClass : ""; //型3　わざ3 分類
  const moveClass3S3 = tekipokeMove3S3 ? tekipokeMove3S3.moveClass : ""; //型3　わざ3 分類
  const moveClass4S3 = tekipokeMove4S3 ? tekipokeMove4S3.moveClass : ""; //型3　わざ3 分類
  const priority1S3 = tekipokeMove1S3 ? tekipokeMove1S3.priority : ""; //型3　わざ3 優先度
  const priority2S3 = tekipokeMove2S3 ? tekipokeMove2S3.priority : ""; //型3　わざ3 優先度
  const priority3S3 = tekipokeMove3S3 ? tekipokeMove3S3.priority : ""; //型3　わざ3 優先度
  const priority4S3 = tekipokeMove4S3 ? tekipokeMove4S3.priority : ""; //型3　わざ3 優先度
  const contact1S3 = tekipokeMove1S3 ? tekipokeMove1S3.contact : ""; //型3　わざ3 接触
  const contact2S3 = tekipokeMove2S3 ? tekipokeMove2S3.contact : ""; //型3　わざ3 接触
  const contact3S3 = tekipokeMove3S3 ? tekipokeMove3S3.contact : ""; //型3　わざ3 接触
  const contact4S3 = tekipokeMove4S3 ? tekipokeMove4S3.contact : ""; //型3　わざ3 接触
  const king1S3 = tekipokeMove1S3 ? tekipokeMove1S3.king : ""; //型3　わざ3 王者補正
  const king2S3 = tekipokeMove2S3 ? tekipokeMove2S3.king : ""; //型3　わざ3 王者補正
  const king3S3 = tekipokeMove3S3 ? tekipokeMove3S3.king : ""; //型3　わざ3 王者補正
  const king4S3 = tekipokeMove4S3 ? tekipokeMove4S3.king : ""; //型3　わざ3 王者補正
  const no1S3 = tekipokeMove1S3 ? tekipokeMove1S3.no : ""; //型3　わざ3 技ナンバー
  const no2S3 = tekipokeMove2S3 ? tekipokeMove2S3.no : ""; //型3　わざ3 技ナンバー
  const no3S3 = tekipokeMove3S3 ? tekipokeMove3S3.no : ""; //型3　わざ3 技ナンバー
  const no4S3 = tekipokeMove4S3 ? tekipokeMove4S3.no : ""; //型3　わざ3 技ナンバー
  const effect1S3 = tekipokeMove1S3 ? tekipokeMove1S3.effect : ""; //型3　わざ3 技の効果
  const effect2S3 = tekipokeMove2S3 ? tekipokeMove2S3.effect : ""; //型3　わざ3 技の効果
  const effect3S3 = tekipokeMove3S3 ? tekipokeMove3S3.effect : ""; //型3　わざ3 技の効果
  const effect4S3 = tekipokeMove4S3 ? tekipokeMove4S3.effect : ""; //型3　わざ3 技の効果

  //敵のポケモン型4

  const tekipokeMove1S4 = weaponsdata.find((item) => item.no === tekipokeWeapon1NoS4);
  const tekipokeMove2S4 = weaponsdata.find((item) => item.no === tekipokeWeapon2NoS4);
  const tekipokeMove3S4 = weaponsdata.find((item) => item.no === tekipokeWeapon3NoS4);
  const tekipokeMove4S4 = weaponsdata.find((item) => item.no === tekipokeWeapon4NoS4);

  //name: "名前",
  const name1S4 = tekipokeMove1S4 ? tekipokeMove1S4.name : ""; //型4　わざ4 名称
  const name2S4 = tekipokeMove2S4 ? tekipokeMove2S4.name : ""; //型4　わざ4 名称
  const name3S4 = tekipokeMove3S4 ? tekipokeMove3S4.name : ""; //型4　わざ4 名称
  const name4S4 = tekipokeMove4S4 ? tekipokeMove4S4.name : ""; //型4　わざ4 名称
  //     wtype: "タイプ"
  const wtype1S4 = tekipokeMove1S4 ? tekipokeMove1S4.wtype : ""; //型4　わざ4 タイプ
  const wtype2S4 = tekipokeMove2S4 ? tekipokeMove2S4.wtype : ""; //型4　わざ4 タイプ
  const wtype3S4 = tekipokeMove3S4 ? tekipokeMove3S4.wtype : ""; //型4　わざ4 タイプ
  const wtype4S4 = tekipokeMove4S4 ? tekipokeMove4S4.wtype : ""; //型4　わざ4 タイプ
  // power:  威力,
  let power1S4 = tekipokeMove1S4 ? tekipokeMove1S4.power : ""; //型4　わざ4 威力
  let power2S4 = tekipokeMove2S4 ? tekipokeMove2S4.power : ""; //型4　わざ4 威力
  let power3S4 = tekipokeMove3S4 ? tekipokeMove3S4.power : ""; //型4　わざ4 威力
  let power4S4 = tekipokeMove4S4 ? tekipokeMove4S4.power : ""; //型4　わざ4 威力

  // powerdisplay:  威力表示,
  const powerdisplay1S4 = tekipokeMove1S4 ? tekipokeMove1S4.powerdisplay : ""; //型4　わざ4 威力表示
  const powerdisplay2S4 = tekipokeMove2S4 ? tekipokeMove2S4.powerdisplay : ""; //型4　わざ4 威力表示
  const powerdisplay3S4 = tekipokeMove3S4 ? tekipokeMove3S4.powerdisplay : ""; //型4　わざ4 威力表示
  const powerdisplay4S4 = tekipokeMove4S4 ? tekipokeMove4S4.powerdisplay : ""; //型4　わざ4 威力表示
  //accuracydisplay: 命中(徹底攻略）
  const accuracydisplay1S4 = tekipokeMove1S4 ? tekipokeMove1S4.accuracydisplay : ""; //型4　わざ4 命中(徹底攻略）
  const accuracydisplay2S4 = tekipokeMove2S4 ? tekipokeMove2S4.accuracydisplay : ""; //型4　わざ4 命中(徹底攻略）
  const accuracydisplay3S4 = tekipokeMove3S4 ? tekipokeMove3S4.accuracydisplay : ""; //型4　わざ4 命中(徹底攻略）
  const accuracydisplay4S4 = tekipokeMove4S4 ? tekipokeMove4S4.accuracydisplay : ""; //型4　わざ4 命中(徹底攻略）

  //PP
  const pp1S4 = tekipokeMove1S4 ? tekipokeMove1S4.pp : ""; //型4　わざ4 PP
  const pp2S4 = tekipokeMove2S4 ? tekipokeMove2S4.pp : ""; //型4　わざ4 PP
  const pp3S4 = tekipokeMove3S4 ? tekipokeMove3S4.pp : ""; //型4　わざ4 PP
  const pp4S4 = tekipokeMove4S4 ? tekipokeMove4S4.pp : ""; //型4　わざ4 PP
  //     moveClass: "分類",
  const moveClass1S4 = tekipokeMove1S4 ? tekipokeMove1S4.moveClass : ""; //型4　わざ4 分類
  const moveClass2S4 = tekipokeMove2S4 ? tekipokeMove2S4.moveClass : ""; //型4　わざ4 分類
  const moveClass3S4 = tekipokeMove3S4 ? tekipokeMove3S4.moveClass : ""; //型4　わざ4 分類
  const moveClass4S4 = tekipokeMove4S4 ? tekipokeMove4S4.moveClass : ""; //型4　わざ4 分類
  //     priority: 優先度
  const priority1S4 = tekipokeMove1S4 ? tekipokeMove1S4.priority : ""; //型4　わざ4 優先度
  const priority2S4 = tekipokeMove2S4 ? tekipokeMove2S4.priority : ""; //型4　わざ4 優先度
  const priority3S4 = tekipokeMove3S4 ? tekipokeMove3S4.priority : ""; //型4　わざ4 優先度
  const priority4S4 = tekipokeMove4S4 ? tekipokeMove4S4.priority : ""; //型4　わざ4 優先度

  //      contact: "接触

  const contact1S4 = tekipokeMove1S4 ? tekipokeMove1S4.contact : ""; //型4　わざ4 接触
  const contact2S4 = tekipokeMove2S4 ? tekipokeMove2S4.contact : ""; //型4　わざ4 接触
  const contact3S4 = tekipokeMove3S4 ? tekipokeMove3S4.contact : ""; //型4　わざ4 接触
  const contact4S4 = tekipokeMove4S4 ? tekipokeMove4S4.contact : ""; //型4　わざ4 接触

  //      king: "王者補正

  const king1S4 = tekipokeMove1S4 ? tekipokeMove1S4.king : ""; //型4　わざ4 王者補正
  const king2S4 = tekipokeMove2S4 ? tekipokeMove2S4.king : ""; //型4　わざ4 王者補正
  const king3S4 = tekipokeMove3S4 ? tekipokeMove3S4.king : ""; //型4　わざ4 王者補正
  const king4S4 = tekipokeMove4S4 ? tekipokeMove4S4.king : ""; //型4　わざ4 王者補正
  //      no: "技ナンバー
  const no1S4 = tekipokeMove1S4 ? tekipokeMove1S4.no : ""; //型4　わざ4 技ナンバー
  const no2S4 = tekipokeMove2S4 ? tekipokeMove2S4.no : ""; //型4　わざ4 技ナンバー
  const no3S4 = tekipokeMove3S4 ? tekipokeMove3S4.no : ""; //型4　わざ4 技ナンバー
  const no4S4 = tekipokeMove4S4 ? tekipokeMove4S4.no : ""; //型4　わざ4 技ナンバー
  //      effect: "技の効果
  const effect1S4 = tekipokeMove1S4 ? tekipokeMove1S4.effect : ""; //型4　わざ4 技の効果
  const effect2S4 = tekipokeMove2S4 ? tekipokeMove2S4.effect : ""; //型4　わざ4 技の効果
  const effect3S4 = tekipokeMove3S4 ? tekipokeMove3S4.effect : ""; //型4　わざ4 技の効果
  const effect4S4 = tekipokeMove4S4 ? tekipokeMove4S4.effect : ""; //型4　わざ4 技の効果

  let mySurosutaDisplay = "";
  let tekiSurosutaDisplay = "";

  // スロースタート
  if (selectedAbility === "スロースタート") {
    mypokeStatusA = Math.floor((mypokeStatusA * 50) / 100);
    mypokeStatusS = Math.floor((mypokeStatusS * 50) / 100);
    mySurosutaDisplay = "[スロスタ]";
  }

  if (selectedTekiAbility === "スロースタート") {
    tekipokeStatusAS1 = Math.floor((tekipokeStatusAS1 * 50) / 100);
    tekipokeStatusAS2 = Math.floor((tekipokeStatusAS2 * 50) / 100);
    tekipokeStatusAS3 = Math.floor((tekipokeStatusAS3 * 50) / 100);
    tekipokeStatusAS4 = Math.floor((tekipokeStatusAS4 * 50) / 100);

    tekipokeStatusSS1 = Math.floor((tekipokeStatusSS1 * 50) / 100);
    tekipokeStatusSS2 = Math.floor((tekipokeStatusSS2 * 50) / 100);
    tekipokeStatusSS3 = Math.floor((tekipokeStatusSS3 * 50) / 100);
    tekipokeStatusSS4 = Math.floor((tekipokeStatusSS4 * 50) / 100);
    tekiSurosutaDisplay = "[スロスタ]";
  }

  let myYogaDisplay = "";
  let tekiYogaDisplay = "";

  // ヨガパワー
  if (selectedAbility === "ヨガパワー") {
    mypokeStatusA = Math.floor((mypokeStatusA * 200) / 100);
    myYogaDisplay = "[ヨガ]";
  }

  if (selectedTekiAbility === "ヨガパワー") {
    tekipokeStatusAS1 = Math.floor((tekipokeStatusAS1 * 200) / 100);
    tekipokeStatusAS2 = Math.floor((tekipokeStatusAS2 * 200) / 100);
    tekipokeStatusAS3 = Math.floor((tekipokeStatusAS3 * 200) / 100);
    tekipokeStatusAS4 = Math.floor((tekipokeStatusAS4 * 200) / 100);
    tekiYogaDisplay = "[ヨガ]";
  }

  let myKodahachiDisplay = "";
  let tekiKodahachiDisplay1 = "";
  let tekiKodahachiDisplay2 = "";
  let tekiKodahachiDisplay3 = "";
  let tekiKodahachiDisplay4 = "";

  // こだわりハチマキ
  if (myItem_tab3 === "こだわりハチマキ") {
    mypokeStatusA = Math.floor((mypokeStatusA * 150) / 100);
    myKodahachiDisplay = "[こだハチ]";
  }

  if (tekiItem1_tab3 === "こだわりハチマキ") {
    tekipokeStatusAS1 = Math.floor((tekipokeStatusAS1 * 150) / 100);
    tekiKodahachiDisplay1 = "[こだハチマキ]ハチマキ";
  }
  if (tekiItem2_tab3 === "こだわりハチマキ") {
    tekipokeStatusAS2 = Math.floor((tekipokeStatusAS2 * 150) / 100);
    tekiKodahachiDisplay2 = "[こだハチ]";
  }
  if (tekiItem3_tab3 === "こだわりハチマキ") {
    tekipokeStatusAS3 = Math.floor((tekipokeStatusAS3 * 150) / 100);
    tekiKodahachiDisplay3 = "[こだハチ]";
  }
  if (tekiItem4_tab3 === "こだわりハチマキ") {
    tekipokeStatusAS4 = Math.floor((tekipokeStatusAS4 * 150) / 100);
    tekiKodahachiDisplay4 = "[こだハチ]";
  }

  let myKodamegaDisplay = "";
  let tekiKodamegaDisplay1 = "";
  let tekiKodamegaDisplay2 = "";
  let tekiKodamegaDisplay3 = "";
  let tekiKodamegaDisplay4 = "";

  // こだわりメガネ
  if (myItem_tab3 === "こだわりメガネ") {
    mypokeStatusC = Math.floor((mypokeStatusC * 150) / 100);
    myKodamegaDisplay = "[こだメガ]";
  }

  if (tekiItem1_tab3 === "こだわりメガネ") {
    tekipokeStatusCS1 = Math.floor((tekipokeStatusCS1 * 150) / 100);
    tekiKodamegaDisplay1 = "[こだメガ]";
  }
  if (tekiItem2_tab3 === "こだわりメガネ") {
    tekipokeStatusCS2 = Math.floor((tekipokeStatusCS2 * 150) / 100);
    tekiKodamegaDisplay2 = "[こだメガ]";
  }
  if (tekiItem3_tab3 === "こだわりメガネ") {
    tekipokeStatusCS3 = Math.floor((tekipokeStatusCS3 * 150) / 100);
    tekiKodamegaDisplay3 = "[こだメガ]";
  }
  if (tekiItem4_tab3 === "こだわりメガネ") {
    tekipokeStatusCS4 = Math.floor((tekipokeStatusCS4 * 150) / 100);
    tekiKodamegaDisplay4 = "[こだメガ]";
  }

  let myHoneDisplay = "";
  let tekiHoneDisplay1 = "";
  let tekiHoneDisplay2 = "";
  let tekiHoneDisplay3 = "";
  let tekiHoneDisplay4 = "";
  //  ふといホネ
  if (myItem_tab3 === "ふといホネ" && mypokeNameVal === 105) {
    mypokeStatusA = Math.floor((mypokeStatusA * 200) / 100);
    myHoneDisplay = "[ホネ]";
  }

  if (tekiItem1_tab3 === "ふといホネ" && tekipokeNameVal === 105) {
    tekipokeStatusAS1 = Math.floor((tekipokeStatusAS1 * 200) / 100);
    tekiHoneDisplay1 = "[ホネ]";
  }
  if (tekiItem2_tab3 === "ふといホネ" && tekipokeNameVal === 105) {
    tekipokeStatusAS2 = Math.floor((tekipokeStatusAS2 * 200) / 100);
    tekiHoneDisplay2 = "[ホネ]";
  }
  if (tekiItem3_tab3 === "ふといホネ" && tekipokeNameVal === 105) {
    tekipokeStatusAS3 = Math.floor((tekipokeStatusAS3 * 200) / 100);
    tekiHoneDisplay3 = "[ホネ]";
  }
  if (tekiItem4_tab3 === "ふといホネ" && tekipokeNameVal === 105) {
    tekipokeStatusAS4 = Math.floor((tekipokeStatusAS4 * 200) / 100);
    tekiHoneDisplay4 = "[ホネ]";
  }
  let myKonjouDisplay = "";
  let tekiKonjouDisplay = "";

  // こんじょう  //はりきり
  if (selectedAbility === "こんじょう" || selectedAbility === "はりきり") {
    mypokeStatusA = Math.floor((mypokeStatusA * 150) / 100);
    myKonjouDisplay = "[根性/張切]";
  }
  if (selectedTekiAbility === "こんじょう" || selectedTekiAbility === "はりきり") {
    tekipokeStatusAS1 = Math.floor((tekipokeStatusAS1 * 150) / 100);
    tekipokeStatusAS2 = Math.floor((tekipokeStatusAS2 * 150) / 100);
    tekipokeStatusAS3 = Math.floor((tekipokeStatusAS3 * 150) / 100);
    tekipokeStatusAS4 = Math.floor((tekipokeStatusAS4 * 150) / 100);
    tekiKonjouDisplay = "[根性/張切]";
  }

  let myShinkaiDisplay = "";
  let tekiShinkaiDisplay1 = "";
  let tekiShinkaiDisplay2 = "";
  let tekiShinkaiDisplay3 = "";
  let tekiShinkaiDisplay4 = "";
  // しんかいのウロコ
  if (myItem_tab3 === "しんかいのウロコ" && mypokeNameVal === 366) {
    mypokeStatusD = Math.floor((mypokeStatusD * 200) / 100);
    myShinkaiDisplay = "[深海鱗]";
  }

  if (tekiItem1_tab3 === "しんかいのウロコ" && tekipokeNameVal === 366) {
    tekipokeStatusDS1 = Math.floor((tekipokeStatusDS1 * 200) / 100);
    tekiShinkaiDisplay1 = "[深海鱗]";
  }
  if (tekiItem2_tab3 === "しんかいのウロコ" && tekipokeNameVal === 366) {
    tekipokeStatusDS2 = Math.floor((tekipokeStatusDS2 * 200) / 100);
    tekiShinkaiDisplay2 = "[深海鱗]";
  }
  if (tekiItem3_tab3 === "しんかいのウロコ" && tekipokeNameVal === 366) {
    tekipokeStatusDS3 = Math.floor((tekipokeStatusDS3 * 200) / 100);
    tekiShinkaiDisplay3 = "[深海鱗]";
  }
  if (tekiItem4_tab3 === "しんかいのウロコ" && tekipokeNameVal === 366) {
    tekipokeStatusDS4 = Math.floor((tekipokeStatusDS4 * 200) / 100);
    tekiShinkaiDisplay4 = "[深海鱗]";
  }
  let myFusiginaurokoDisplay = "";
  let tekiFusiginaurokoDisplay = "";
  // ふしぎなうろこ
  if (selectedAbility === "ふしぎなうろこ") {
    mypokeStatusB = Math.floor((mypokeStatusB * 150) / 100);
    myFusiginaurokoDisplay = "[不鱗]";
  }
  if (selectedTekiAbility === "ふしぎなうろこ") {
    tekipokeStatusBS1 = Math.floor((tekipokeStatusBS1 * 150) / 100);
    tekipokeStatusBS2 = Math.floor((tekipokeStatusBS2 * 150) / 100);
    tekipokeStatusBS3 = Math.floor((tekipokeStatusBS3 * 150) / 100);
    tekipokeStatusBS4 = Math.floor((tekipokeStatusBS4 * 150) / 100);
    tekiFusiginaurokoDisplay = "[不鱗]";
  }

  let mySunaarashiDisplay = "";
  let tekiSunaarashiDisplay = "";
  // すなあらし
  if (
    (selectedWhether === "すなあらし" && mypokeType1 === "いわ") ||
    (selectedWhether === "すなあらし" && mypokeType2 === "いわ")
  ) {
    mypokeStatusD = Math.floor((mypokeStatusD * 150) / 100);
    mySunaarashiDisplay = "[砂嵐]";
  }
  if (
    (selectedWhether === "すなあらし" && tekipokeType1 === "いわ") ||
    (selectedWhether === "すなあらし" && tekipokeType2 === "いわ")
  ) {
    tekipokeStatusDS1 = Math.floor((tekipokeStatusDS1 * 150) / 100);
    tekipokeStatusDS2 = Math.floor((tekipokeStatusDS2 * 150) / 100);
    tekipokeStatusDS3 = Math.floor((tekipokeStatusDS3 * 150) / 100);
    tekipokeStatusDS4 = Math.floor((tekipokeStatusDS4 * 150) / 100);
    tekiSunaarashiDisplay = "[砂嵐]";
  }

  // ランクに応じて変化する値をオブジェクトにまとめる
  const rankValues = {
    "+6": 8 / 2,
    "+5": 7 / 2,
    "+4": 6 / 2,
    "+3": 5 / 2,
    "+2": 4 / 2,
    "+1": 3 / 2,
    "+0": 2 / 2,
    "-1": 2 / 3,
    "-2": 2 / 4,
    "-3": 2 / 5,
    "-4": 2 / 6,
    "-5": 2 / 7,
    "-6": 2 / 8,
  };

  // ランクの値を取得し、オブジェクトから値を参照する
  function getRankValue(elementId) {
    const rankValue = document.getElementById(elementId).textContent;
    const formattedRankValue = rankValue.includes("+") || rankValue.includes("-") ? rankValue : "+" + rankValue;
    return rankValues[formattedRankValue];
  }

  // 自分ランクに応じた変数を計算する
  const myRankAVariable = getRankValue("myRankA_tab3");
  const myRankBVariable = getRankValue("myRankB_tab3");
  const myRankCVariable = getRankValue("myRankC_tab3");
  const myRankDVariable = getRankValue("myRankD_tab3");
  const myRankSVariable = getRankValue("myRankS_tab3");

  // 敵のランクに応じた変数を計算する
  const tekiRankAVariable = getRankValue("tekiRankA_tab3");
  const tekiRankBVariable = getRankValue("tekiRankB_tab3");
  const tekiRankCVariable = getRankValue("tekiRankC_tab3");
  const tekiRankDVariable = getRankValue("tekiRankD_tab3");
  const tekiRankSVariable = getRankValue("tekiRankS_tab3");

  let myRankADisplay;
  let myRankBDisplay;
  let myRankCDisplay;
  let myRankDDisplay;
  let myRankSDisplay;

  let tekiRankADisplay;
  let tekiRankBDisplay;
  let tekiRankCDisplay;
  let tekiRankDDisplay;
  let tekiRankSDisplay;

  switch (myRankAVariable) {
    case 8 / 2:
      myRankADisplay = "[ラ＋6]";
      break;
    case 7 / 2:
      myRankADisplay = "[ラ＋5]";
      break;
    case 6 / 2:
      myRankADisplay = "[ラ＋4]";
      break;
    case 5 / 2:
      myRankADisplay = "[ラ＋3]";
      break;
    case 4 / 2:
      myRankADisplay = "[ラ＋2]";
      break;
    case 3 / 2:
      myRankADisplay = "[ラ＋1]";
      break;
    case 2 / 2:
      myRankADisplay = "";
      break;
    case 2 / 3:
      myRankADisplay = "[ラ－1]";
      break;
    case 2 / 4:
      myRankADisplay = "[ラ－2]";
      break;
    case 2 / 5:
      myRankADisplay = "[ラ－3]";
      break;
    case 2 / 6:
      myRankADisplay = "[ラ－4]";
      break;
    case 2 / 7:
      myRankADisplay = "[ラ－5]";
      break;
    case 2 / 8:
      myRankADisplay = "[ラ－6]";
      break;
    default:
      myRankADisplay = "無効な値";
  }
  switch (myRankBVariable) {
    case 8 / 2:
      myRankBDisplay = "[ラ＋6]";
      break;
    case 7 / 2:
      myRankBDisplay = "[ラ＋5]";
      break;
    case 6 / 2:
      myRankBDisplay = "[ラ＋4]";
      break;
    case 5 / 2:
      myRankBDisplay = "[ラ＋3]";
      break;
    case 4 / 2:
      myRankBDisplay = "[ラ＋2]";
      break;
    case 3 / 2:
      myRankBDisplay = "[ラ＋1]";
      break;
    case 2 / 2:
      myRankBDisplay = "";
      break;
    case 2 / 3:
      myRankBDisplay = "[ラ－1]";
      break;
    case 2 / 4:
      myRankBDisplay = "[ラ－2]";
      break;
    case 2 / 5:
      myRankBDisplay = "[ラ－3]";
      break;
    case 2 / 6:
      myRankBDisplay = "[ラ－4]";
      break;
    case 2 / 7:
      myRankBDisplay = "[ラ－5]";
      break;
    case 2 / 8:
      myRankBDisplay = "[ラ－6]";
      break;
    default:
      myRankBDisplay = "無効な値";
  }
  switch (myRankCVariable) {
    case 8 / 2:
      myRankCDisplay = "[ラ＋6]";
      break;
    case 7 / 2:
      myRankCDisplay = "[ラ＋5]";
      break;
    case 6 / 2:
      myRankCDisplay = "[ラ＋4]";
      break;
    case 5 / 2:
      myRankCDisplay = "[ラ＋3]";
      break;
    case 4 / 2:
      myRankCDisplay = "[ラ＋2]";
      break;
    case 3 / 2:
      myRankCDisplay = "[ラ＋1]";
      break;
    case 2 / 2:
      myRankCDisplay = "";
      break;
    case 2 / 3:
      myRankCDisplay = "[ラ－1]";
      break;
    case 2 / 4:
      myRankCDisplay = "[ラ－2]";
      break;
    case 2 / 5:
      myRankCDisplay = "[ラ－3]";
      break;
    case 2 / 6:
      myRankCDisplay = "[ラ－4]";
      break;
    case 2 / 7:
      myRankCDisplay = "[ラ－5]";
      break;
    case 2 / 8:
      myRankCDisplay = "[ラ－6]";
      break;
    default:
      myRankCDisplay = "無効な値";
  }
  switch (myRankDVariable) {
    case 8 / 2:
      myRankDDisplay = "[ラ＋6]";
      break;
    case 7 / 2:
      myRankDDisplay = "[ラ＋5]";
      break;
    case 6 / 2:
      myRankDDisplay = "[ラ＋4]";
      break;
    case 5 / 2:
      myRankDDisplay = "[ラ＋3]";
      break;
    case 4 / 2:
      myRankDDisplay = "[ラ＋2]";
      break;
    case 3 / 2:
      myRankDDisplay = "[ラ＋1]";
      break;
    case 2 / 2:
      myRankDDisplay = "";
      break;
    case 2 / 3:
      myRankDDisplay = "[ラ－1]";
      break;
    case 2 / 4:
      myRankDDisplay = "[ラ－2]";
      break;
    case 2 / 5:
      myRankDDisplay = "[ラ－3]";
      break;
    case 2 / 6:
      myRankDDisplay = "[ラ－4]";
      break;
    case 2 / 7:
      myRankDDisplay = "[ラ－5]";
      break;
    case 2 / 8:
      myRankDDisplay = "[ラ－6]";
      break;
    default:
      myRankDDisplay = "無効な値";
  }
  switch (myRankSVariable) {
    case 8 / 2:
      myRankSDisplay = "[ラ＋6]";
      break;
    case 7 / 2:
      myRankSDisplay = "[ラ＋5]";
      break;
    case 6 / 2:
      myRankSDisplay = "[ラ＋4]";
      break;
    case 5 / 2:
      myRankSDisplay = "[ラ＋3]";
      break;
    case 4 / 2:
      myRankSDisplay = "[ラ＋2]";
      break;
    case 3 / 2:
      myRankSDisplay = "[ラ＋1]";
      break;
    case 2 / 2:
      myRankSDisplay = "";
      break;
    case 2 / 3:
      myRankSDisplay = "[ラ－1]";
      break;
    case 2 / 4:
      myRankSDisplay = "[ラ－2]";
      break;
    case 2 / 5:
      myRankSDisplay = "[ラ－3]";
      break;
    case 2 / 6:
      myRankSDisplay = "[ラ－4]";
      break;
    case 2 / 7:
      myRankSDisplay = "[ラ－5]";
      break;
    case 2 / 8:
      myRankSDisplay = "[ラ－6]";
      break;
    default:
      myRankSDisplay = "無効な値";
  }

  switch (tekiRankAVariable) {
    case 8 / 2:
      tekiRankADisplay = "[ラ＋6]";
      break;
    case 7 / 2:
      tekiRankADisplay = "[ラ＋5]";
      break;
    case 6 / 2:
      tekiRankADisplay = "[ラ＋4]";
      break;
    case 5 / 2:
      tekiRankADisplay = "[ラ＋3]";
      break;
    case 4 / 2:
      tekiRankADisplay = "[ラ＋2]";
      break;
    case 3 / 2:
      tekiRankADisplay = "[ラ＋1]";
      break;
    case 2 / 2:
      tekiRankADisplay = "";
      break;
    case 2 / 3:
      tekiRankADisplay = "[ラ－1]";
      break;
    case 2 / 4:
      tekiRankADisplay = "[ラ－2]";
      break;
    case 2 / 5:
      tekiRankADisplay = "[ラ－3]";
      break;
    case 2 / 6:
      tekiRankADisplay = "[ラ－4]";
      break;
    case 2 / 7:
      tekiRankADisplay = "[ラ－5]";
      break;
    case 2 / 8:
      tekiRankADisplay = "[ラ－6]";
      break;
    default:
      tekiRankADisplay = "無効な値";
  }
  switch (tekiRankBVariable) {
    case 8 / 2:
      tekiRankBDisplay = "[ラ＋6]";
      break;
    case 7 / 2:
      tekiRankBDisplay = "[ラ＋5]";
      break;
    case 6 / 2:
      tekiRankBDisplay = "[ラ＋4]";
      break;
    case 5 / 2:
      tekiRankBDisplay = "[ラ＋3]";
      break;
    case 4 / 2:
      tekiRankBDisplay = "[ラ＋2]";
      break;
    case 3 / 2:
      tekiRankBDisplay = "[ラ＋1]";
      break;
    case 2 / 2:
      tekiRankBDisplay = "";
      break;
    case 2 / 3:
      tekiRankBDisplay = "[ラ－1]";
      break;
    case 2 / 4:
      tekiRankBDisplay = "[ラ－2]";
      break;
    case 2 / 5:
      tekiRankBDisplay = "[ラ－3]";
      break;
    case 2 / 6:
      tekiRankBDisplay = "[ラ－4]";
      break;
    case 2 / 7:
      tekiRankBDisplay = "[ラ－5]";
      break;
    case 2 / 8:
      tekiRankBDisplay = "[ラ－6]";
      break;
    default:
      tekiRankBDisplay = "無効な値";
  }
  switch (tekiRankCVariable) {
    case 8 / 2:
      tekiRankCDisplay = "[ラ＋6]";
      break;
    case 7 / 2:
      tekiRankCDisplay = "[ラ＋5]";
      break;
    case 6 / 2:
      tekiRankCDisplay = "[ラ＋4]";
      break;
    case 5 / 2:
      tekiRankCDisplay = "[ラ＋3]";
      break;
    case 4 / 2:
      tekiRankCDisplay = "[ラ＋2]";
      break;
    case 3 / 2:
      tekiRankCDisplay = "[ラ＋1]";
      break;
    case 2 / 2:
      tekiRankCDisplay = "";
      break;
    case 2 / 3:
      tekiRankCDisplay = "[ラ－1]";
      break;
    case 2 / 4:
      tekiRankCDisplay = "[ラ－2]";
      break;
    case 2 / 5:
      tekiRankCDisplay = "[ラ－3]";
      break;
    case 2 / 6:
      tekiRankCDisplay = "[ラ－4]";
      break;
    case 2 / 7:
      tekiRankCDisplay = "[ラ－5]";
      break;
    case 2 / 8:
      tekiRankCDisplay = "[ラ－6]";
      break;
    default:
      tekiRankCDisplay = "無効な値";
  }
  switch (tekiRankDVariable) {
    case 8 / 2:
      tekiRankDDisplay = "[ラ＋6]";
      break;
    case 7 / 2:
      tekiRankDDisplay = "[ラ＋5]";
      break;
    case 6 / 2:
      tekiRankDDisplay = "[ラ＋4]";
      break;
    case 5 / 2:
      tekiRankDDisplay = "[ラ＋3]";
      break;
    case 4 / 2:
      tekiRankDDisplay = "[ラ＋2]";
      break;
    case 3 / 2:
      tekiRankDDisplay = "[ラ＋1]";
      break;
    case 2 / 2:
      tekiRankDDisplay = "";
      break;
    case 2 / 3:
      tekiRankDDisplay = "[ラ－1]";
      break;
    case 2 / 4:
      tekiRankDDisplay = "[ラ－2]";
      break;
    case 2 / 5:
      tekiRankDDisplay = "[ラ－3]";
      break;
    case 2 / 6:
      tekiRankDDisplay = "[ラ－4]";
      break;
    case 2 / 7:
      tekiRankDDisplay = "[ラ－5]";
      break;
    case 2 / 8:
      tekiRankDDisplay = "[ラ－6]";
      break;
    default:
      tekiRankDDisplay = "無効な値";
  }
  switch (tekiRankSVariable) {
    case 8 / 2:
      tekiRankSDisplay = "[ラ＋6]";
      break;
    case 7 / 2:
      tekiRankSDisplay = "[ラ＋5]";
      break;
    case 6 / 2:
      tekiRankSDisplay = "[ラ＋4]";
      break;
    case 5 / 2:
      tekiRankSDisplay = "[ラ＋3]";
      break;
    case 4 / 2:
      tekiRankSDisplay = "[ラ＋2]";
      break;
    case 3 / 2:
      tekiRankSDisplay = "[ラ＋1]";
      break;
    case 2 / 2:
      tekiRankSDisplay = "";
      break;
    case 2 / 3:
      tekiRankSDisplay = "[ラ－1]";
      break;
    case 2 / 4:
      tekiRankSDisplay = "[ラ－2]";
      break;
    case 2 / 5:
      tekiRankSDisplay = "[ラ－3]";
      break;
    case 2 / 6:
      tekiRankSDisplay = "[ラ－4]";
      break;
    case 2 / 7:
      tekiRankSDisplay = "[ラ－5]";
      break;
    case 2 / 8:
      tekiRankSDisplay = "[ラ－6]";
      break;
    default:
      tekiRanSADisplay = "無効な値";
  }

  // ランク補正後のステ
  const mypokeStatusARanked = Math.floor(mypokeStatusA * myRankAVariable);
  const mypokeStatusBRanked = Math.floor(mypokeStatusB * myRankBVariable);
  const mypokeStatusCRanked = Math.floor(mypokeStatusC * myRankCVariable);
  const mypokeStatusDRanked = Math.floor(mypokeStatusD * myRankDVariable);
  let mypokeStatusSRanked = Math.floor(mypokeStatusS * myRankSVariable);

  const tekipokeStatusAS1Ranked = Math.floor(tekipokeStatusAS1 * tekiRankAVariable);
  const tekipokeStatusAS2Ranked = Math.floor(tekipokeStatusAS2 * tekiRankAVariable);
  const tekipokeStatusAS3Ranked = Math.floor(tekipokeStatusAS3 * tekiRankAVariable);
  const tekipokeStatusAS4Ranked = Math.floor(tekipokeStatusAS4 * tekiRankAVariable);

  const tekipokeStatusBS1Ranked = Math.floor(tekipokeStatusBS1 * tekiRankBVariable);
  const tekipokeStatusBS2Ranked = Math.floor(tekipokeStatusBS2 * tekiRankBVariable);
  const tekipokeStatusBS3Ranked = Math.floor(tekipokeStatusBS3 * tekiRankBVariable);
  const tekipokeStatusBS4Ranked = Math.floor(tekipokeStatusBS4 * tekiRankBVariable);

  const tekipokeStatusCS1Ranked = Math.floor(tekipokeStatusCS1 * tekiRankCVariable);
  const tekipokeStatusCS2Ranked = Math.floor(tekipokeStatusCS2 * tekiRankCVariable);
  const tekipokeStatusCS3Ranked = Math.floor(tekipokeStatusCS3 * tekiRankCVariable);
  const tekipokeStatusCS4Ranked = Math.floor(tekipokeStatusCS4 * tekiRankCVariable);

  const tekipokeStatusDS1Ranked = Math.floor(tekipokeStatusDS1 * tekiRankDVariable);
  const tekipokeStatusDS2Ranked = Math.floor(tekipokeStatusDS2 * tekiRankDVariable);
  const tekipokeStatusDS3Ranked = Math.floor(tekipokeStatusDS3 * tekiRankDVariable);
  const tekipokeStatusDS4Ranked = Math.floor(tekipokeStatusDS4 * tekiRankDVariable);

  let tekipokeStatusSS1Ranked = Math.floor(tekipokeStatusSS1 * tekiRankSVariable);
  let tekipokeStatusSS2Ranked = Math.floor(tekipokeStatusSS2 * tekiRankSVariable);
  let tekipokeStatusSS3Ranked = Math.floor(tekipokeStatusSS3 * tekiRankSVariable);
  let tekipokeStatusSS4Ranked = Math.floor(tekipokeStatusSS4 * tekiRankSVariable);

  let myKodascarfDisplay = "";
  let tekiKodascarfDisplay1 = "";
  let tekiKodascarfDisplay2 = "";
  let tekiKodascarfDisplay3 = "";
  let tekiKodascarfDisplay4 = "";
  // こだわりスカーフ
  if (myItem_tab3 === "こだわりスカーフ") {
    mypokeStatusSRanked = Math.floor((mypokeStatusSRanked * 150) / 100);
    myKodascarfDisplay = "[こだスカ]";
  }

  if (tekiItem1_tab3 === "こだわりスカーフ") {
    tekipokeStatusSS1Ranked = Math.floor((tekipokeStatusSS1Ranked * 150) / 100);
    tekiKodascarfDisplay1 = "[こだスカ]";
  }
  if (tekiItem2_tab3 === "こだわりスカーフ") {
    tekipokeStatusSS2Ranked = Math.floor((tekipokeStatusSS2Ranked * 150) / 100);
    tekiKodascarfDisplay2 = "[こだスカ]";
  }
  if (tekiItem3_tab3 === "こだわりスカーフ") {
    tekipokeStatusSS3Ranked = Math.floor((tekipokeStatusSS3Ranked * 150) / 100);
    tekiKodascarfDisplay3 = "[こだスカ]";
  }
  if (tekiItem4_tab3 === "こだわりスカーフ") {
    tekipokeStatusSS4Ranked = Math.floor((tekipokeStatusSS4Ranked * 150) / 100);
    tekiKodascarfDisplay4 = "[こだスカ]";
  }

  let myTekkyuDisplay = "";
  let tekiTekkyuDisplay1 = "";
  let tekiTekkyuDisplay2 = "";
  let tekiTekkyuDisplay3 = "";
  let tekiTekkyuDisplay4 = "";
  // くろいてっきゅう
  if (myItem_tab3 === "くろいてっきゅう") {
    mypokeStatusSRanked = Math.floor((mypokeStatusSRanked * 50) / 100);
    myTekkyuDisplay = "[鉄球]";
  }

  if (tekiItem1_tab3 === "くろいてっきゅう") {
    tekipokeStatusSS1Ranked = Math.floor((tekipokeStatusSS1Ranked * 50) / 100);
    tekiTekkyuDisplay1 = "[鉄球]";
  }
  if (tekiItem2_tab3 === "くろいてっきゅう") {
    tekipokeStatusSS2Ranked = Math.floor((tekipokeStatusSS2Ranked * 50) / 100);
    tekiTekkyuDisplay2 = "[鉄球]";
  }
  if (tekiItem3_tab3 === "くろいてっきゅう") {
    tekipokeStatusSS3Ranked = Math.floor((tekipokeStatusSS3Ranked * 50) / 100);
    tekiTekkyuDisplay3 = "[鉄球]";
  }
  if (tekiItem4_tab3 === "くろいてっきゅう") {
    tekipokeStatusSS4Ranked = Math.floor((tekipokeStatusSS4Ranked * 50) / 100);
    tekiTekkyuDisplay4 = "[鉄球]";
  }

  //まひ
  if (myParalysis_tab3) {
    mypokeStatusSRanked = Math.floor((mypokeStatusSRanked * 25) / 100);
  }

  if (tekiParalysis_tab3) {
    tekipokeStatusSS1Ranked = Math.floor((tekipokeStatusSS1Ranked * 25) / 100);
    tekipokeStatusSS2Ranked = Math.floor((tekipokeStatusSS2Ranked * 25) / 100);
    tekipokeStatusSS3Ranked = Math.floor((tekipokeStatusSS3Ranked * 25) / 100);
    tekipokeStatusSS4Ranked = Math.floor((tekipokeStatusSS4Ranked * 25) / 100);
  }

  // 自分のポケ急所当ててランクマイナス無効
  const mypokeStatusARankedCritical = Math.floor(mypokeStatusA * (myRankAVariable > 1 ? myRankAVariable : 1));
  const mypokeStatusCRankedCritical = Math.floor(mypokeStatusC * (myRankCVariable > 1 ? myRankCVariable : 1));
  // 自分のポケ急所くらってランクプラス無効
  const mypokeStatusBRankedCritical = Math.floor(mypokeStatusB * (myRankBVariable > 1 ? 1 : myRankBVariable));
  const mypokeStatusDRankedCritical = Math.floor(mypokeStatusD * (myRankDVariable > 1 ? 1 : myRankDVariable));

  //敵のポケ急所当ててAランクマイナス無効
  const tekipokeStatusAS1RankedCritical = Math.floor(
    tekipokeStatusAS1 * (tekiRankAVariable > 1 ? tekiRankAVariable : 1)
  );
  const tekipokeStatusAS2RankedCritical = Math.floor(
    tekipokeStatusAS2 * (tekiRankAVariable > 1 ? tekiRankAVariable : 1)
  );
  const tekipokeStatusAS3RankedCritical = Math.floor(
    tekipokeStatusAS3 * (tekiRankAVariable > 1 ? tekiRankAVariable : 1)
  );
  const tekipokeStatusAS4RankedCritical = Math.floor(
    tekipokeStatusAS4 * (tekiRankAVariable > 1 ? tekiRankAVariable : 1)
  );
  //敵のポケ急所くらってBランクプラス無効
  const tekipokeStatusBS1RankedCritical = Math.floor(
    tekipokeStatusBS1 * (tekiRankBVariable > 1 ? 1 : tekiRankBVariable)
  );
  const tekipokeStatusBS2RankedCritical = Math.floor(
    tekipokeStatusBS2 * (tekiRankBVariable > 1 ? 1 : tekiRankBVariable)
  );
  const tekipokeStatusBS3RankedCritical = Math.floor(
    tekipokeStatusBS3 * (tekiRankBVariable > 1 ? 1 : tekiRankBVariable)
  );
  const tekipokeStatusBS4RankedCritical = Math.floor(
    tekipokeStatusBS4 * (tekiRankBVariable > 1 ? 1 : tekiRankBVariable)
  );

  //敵のポケ急所当ててCランクマイナス無効
  const tekipokeStatusCS1RankedCritical = Math.floor(
    tekipokeStatusCS1 * (tekiRankCVariable > 1 ? tekiRankCVariable : 1)
  );
  const tekipokeStatusCS2RankedCritical = Math.floor(
    tekipokeStatusCS2 * (tekiRankCVariable > 1 ? tekiRankCVariable : 1)
  );
  const tekipokeStatusCS3RankedCritical = Math.floor(
    tekipokeStatusCS3 * (tekiRankCVariable > 1 ? tekiRankCVariable : 1)
  );
  const tekipokeStatusCS4RankedCritical = Math.floor(
    tekipokeStatusCS4 * (tekiRankCVariable > 1 ? tekiRankCVariable : 1)
  );

  //敵のポケ急所くらってDランクプラス無効
  const tekipokeStatusDS1RankedCritical = Math.floor(
    tekipokeStatusDS1 * (tekiRankDVariable > 1 ? 1 : tekiRankDVariable)
  );
  const tekipokeStatusDS2RankedCritical = Math.floor(
    tekipokeStatusDS2 * (tekiRankDVariable > 1 ? 1 : tekiRankDVariable)
  );
  const tekipokeStatusDS3RankedCritical = Math.floor(
    tekipokeStatusDS3 * (tekiRankDVariable > 1 ? 1 : tekiRankDVariable)
  );
  const tekipokeStatusDS4RankedCritical = Math.floor(
    tekipokeStatusDS4 * (tekiRankDVariable > 1 ? 1 : tekiRankDVariable)
  );

  // かっこ内の計算ごとに小数点は切り捨てる。計算の結果0になった場合は1にする。

  // ダメージ =
  // (((  [○レベル×○2/○5+○2]  )×○威力×○AorC/○BorD)/○50×Ma+○2)
  //=[calc1]

  // ×Ma=やけど補正×壁補正×範囲補正×天気補正×もらいび補正
  // +2
  // ×Mb=急所補正×いのちのたま補正×メトロノーム補正×さきどり補正
  // ×乱数補正
  // ×タイプ一致補正
  // ×相性補正
  // ×McMc=Mfilter（ハードロック、フィルター）×たつじんのおび補正×いろめがね補正×半減の実補正

  //(○レベル×○2/○5+○2)
  const calc1 = Math.floor((lvVal * 2) / 5 + 2);

  let kisoS1Power1 = power1; //自分ポケ技1が敵型1への威力
  let kisoS1Power2 = power2; //自分ポケ技2が敵型1への威力
  let kisoS1Power3 = power3; //自分ポケ技3が敵型1への威力
  let kisoS1Power4 = power4; //自分ポケ技4が敵型1への威力

  //※ほとんどのケースはkisoS1Power1と同じだが相手依存で威力が変わる`握り潰す`などは変動する
  let kisoS2Power1 = power1; //自分ポケ技1が敵型2への威力
  let kisoS2Power2 = power2; //自分ポケ技2が敵型2への威力
  let kisoS2Power3 = power3; //自分ポケ技3が敵型2への威力
  let kisoS2Power4 = power4; //自分ポケ技4が敵型2への威力

  let kisoS3Power1 = power1; //自分ポケ技1が敵型3への威力
  let kisoS3Power2 = power2; //自分ポケ技2が敵型3への威力
  let kisoS3Power3 = power3; //自分ポケ技3が敵型3への威力
  let kisoS3Power4 = power4; //自分ポケ技4が敵型3への威力

  let kisoS4Power1 = power1; //自分ポケ技1が敵型4への威力
  let kisoS4Power2 = power2; //自分ポケ技2が敵型4への威力
  let kisoS4Power3 = power3; //自分ポケ技3が敵型4への威力
  let kisoS4Power4 = power4; //自分ポケ技4が敵型4への威力

  let kisoPower1S1 = power1S1; //敵1ポケ技1威力
  let kisoPower2S1 = power2S1; //敵1ポケ技2威力
  let kisoPower3S1 = power3S1; //敵1ポケ技3威力
  let kisoPower4S1 = power4S1; //敵1ポケ技4威力
  let kisoPower1S2 = power1S2; //敵2ポケ技1威力
  let kisoPower2S2 = power2S2; //敵2ポケ技2威力
  let kisoPower3S2 = power3S2; //敵2ポケ技3威力
  let kisoPower4S2 = power4S2; //敵2ポケ技4威力
  let kisoPower1S3 = power1S3; //敵3ポケ技1威力
  let kisoPower2S3 = power2S3; //敵3ポケ技2威力
  let kisoPower3S3 = power3S3; //敵3ポケ技3威力
  let kisoPower4S3 = power4S3; //敵3ポケ技4威力
  let kisoPower1S4 = power1S4; //敵4ポケ技1威力
  let kisoPower2S4 = power2S4; //敵4ポケ技2威力
  let kisoPower3S4 = power3S4; //敵4ポケ技3威力
  let kisoPower4S4 = power4S4; //敵4ポケ技4威力

  //!×基礎威力
  //! 基礎威力が変わるわざ
  const zanHP_tab3 = Number(document.getElementById("zanHP_tab3").value);
  //!きしかいせい/じたばた
  let myKishijita;
  let teki1Kishijita;
  let teki2Kishijita;
  let teki3Kishijita;
  let teki4Kishijita;

  //自分きしかいせい/じたばた威力の計算
  if (zanHP_tab3 / mypokeStatusH < 2 / 64) {
    myKishijita = 200;
  } else if (zanHP_tab3 / mypokeStatusH >= 2 / 64 && zanHP_tab3 / mypokeStatusH < 6 / 64) {
    myKishijita = 150;
  } else if (zanHP_tab3 / mypokeStatusH >= 6 / 64 && zanHP_tab3 / mypokeStatusH < 13 / 64) {
    myKishijita = 100;
  } else if (zanHP_tab3 / mypokeStatusH >= 13 / 64 && zanHP_tab3 / mypokeStatusH < 22 / 64) {
    myKishijita = 80;
  } else if (zanHP_tab3 / mypokeStatusH >= 22 / 64 && zanHP_tab3 / mypokeStatusH < 43 / 64) {
    myKishijita = 40;
  } else {
    myKishijita = 20;
  }

  if (name1 === "きしかいせい" || name1 === "じたばた") {
    kisoS1Power1 = myKishijita;
    kisoS2Power1 = myKishijita;
    kisoS3Power1 = myKishijita;
    kisoS4Power1 = myKishijita;
  }

  if (name2 === "きしかいせい" || name2 === "じたばた") {
    kisoS1Power2 = myKishijita;
    kisoS2Power2 = myKishijita;
    kisoS3Power2 = myKishijita;
    kisoS4Power2 = myKishijita;
  }

  if (name3 === "きしかいせい" || name3 === "じたばた") {
    kisoS1Power3 = myKishijita;
    kisoS2Power3 = myKishijita;
    kisoS3Power3 = myKishijita;
    kisoS4Power3 = myKishijita;
  }

  if (name4 === "きしかいせい" || name4 === "じたばた") {
    kisoS1Power4 = myKishijita;
    kisoS2Power4 = myKishijita;
    kisoS3Power4 = myKishijita;
    kisoS4Power4 = myKishijita;
  }

  //敵型1 きしかいせい/じたばた威力の計算
  if (zanHP_tab3 / tekipokeStatusHS1 < 2 / 64) {
    teki1Kishijita = 200;
  } else if (zanHP_tab3 / tekipokeStatusHS1 >= 2 / 64 && zanHP_tab3 / tekipokeStatusHS1 < 6 / 64) {
    teki1Kishijita = 150;
  } else if (zanHP_tab3 / tekipokeStatusHS1 >= 6 / 64 && zanHP_tab3 / tekipokeStatusHS1 < 13 / 64) {
    teki1Kishijita = 100;
  } else if (zanHP_tab3 / tekipokeStatusHS1 >= 13 / 64 && zanHP_tab3 / tekipokeStatusHS1 < 22 / 64) {
    teki1Kishijita = 80;
  } else if (zanHP_tab3 / tekipokeStatusHS1 >= 22 / 64 && zanHP_tab3 / tekipokeStatusHS1 < 43 / 64) {
    teki1Kishijita = 40;
  } else {
    teki1Kishijita = 20;
  }

  if (name1S1 === "きしかいせい" || name1S1 === "じたばた") {
    kisoPower1S1 = teki1Kishijita;
  }

  if (name2S1 === "きしかいせい" || name2S1 === "じたばた") {
    kisoPower2S1 = teki1Kishijita;
  }

  if (name3S1 === "きしかいせい" || name3S1 === "じたばた") {
    kisoPower3S1 = teki1Kishijita;
  }

  if (name4S1 === "きしかいせい" || name4S1 === "じたばた") {
    kisoPower4S1 = teki1Kishijita;
  }

  //敵型2 きしかいせい/じたばた威力の計算
  if (zanHP_tab3 / tekipokeStatusHS2 < 2 / 64) {
    teki2Kishijita = 200;
  } else if (zanHP_tab3 / tekipokeStatusHS2 >= 2 / 64 && zanHP_tab3 / tekipokeStatusHS2 < 6 / 64) {
    teki2Kishijita = 150;
  } else if (zanHP_tab3 / tekipokeStatusHS2 >= 6 / 64 && zanHP_tab3 / tekipokeStatusHS2 < 13 / 64) {
    teki2Kishijita = 100;
  } else if (zanHP_tab3 / tekipokeStatusHS2 >= 13 / 64 && zanHP_tab3 / tekipokeStatusHS2 < 22 / 64) {
    teki2Kishijita = 80;
  } else if (zanHP_tab3 / tekipokeStatusHS2 >= 22 / 64 && zanHP_tab3 / tekipokeStatusHS2 < 43 / 64) {
    teki2Kishijita = 40;
  } else {
    teki2Kishijita = 20;
  }

  if (name1S2 === "きしかいせい" || name1S2 === "じたばた") {
    kisoPower1S2 = teki2Kishijita;
  }

  if (name2S2 === "きしかいせい" || name2S2 === "じたばた") {
    kisoPower2S2 = teki2Kishijita;
  }

  if (name3S2 === "きしかいせい" || name3S2 === "じたばた") {
    kisoPower3S2 = teki2Kishijita;
  }

  if (name4S2 === "きしかいせい" || name4S2 === "じたばた") {
    kisoPower4S2 = teki2Kishijita;
  }

  //敵型3 きしかいせい/じたばた威力の計算
  if (zanHP_tab3 / tekipokeStatusHS3 < 2 / 64) {
    teki3Kishijita = 200;
  } else if (zanHP_tab3 / tekipokeStatusHS3 >= 2 / 64 && zanHP_tab3 / tekipokeStatusHS3 < 6 / 64) {
    teki3Kishijita = 150;
  } else if (zanHP_tab3 / tekipokeStatusHS3 >= 6 / 64 && zanHP_tab3 / tekipokeStatusHS3 < 13 / 64) {
    teki3Kishijita = 100;
  } else if (zanHP_tab3 / tekipokeStatusHS3 >= 13 / 64 && zanHP_tab3 / tekipokeStatusHS3 < 22 / 64) {
    teki3Kishijita = 80;
  } else if (zanHP_tab3 / tekipokeStatusHS3 >= 22 / 64 && zanHP_tab3 / tekipokeStatusHS3 < 43 / 64) {
    teki3Kishijita = 40;
  } else {
    teki3Kishijita = 20;
  }

  if (name1S3 === "きしかいせい" || name1S3 === "じたばた") {
    kisoPower1S3 = teki3Kishijita;
  }

  if (name2S3 === "きしかいせい" || name2S3 === "じたばた") {
    kisoPower2S3 = teki3Kishijita;
  }

  if (name3S3 === "きしかいせい" || name3S3 === "じたばた") {
    kisoPower3S3 = teki3Kishijita;
  }

  if (name4S3 === "きしかいせい" || name4S3 === "じたばた") {
    kisoPower4S3 = teki3Kishijita;
  }

  //敵型4 きしかいせい/じたばた威力の計算
  if (zanHP_tab3 / tekipokeStatusHS4 < 2 / 64) {
    teki4Kishijita = 200;
  } else if (zanHP_tab3 / tekipokeStatusHS4 >= 2 / 64 && zanHP_tab3 / tekipokeStatusHS4 < 6 / 64) {
    teki4Kishijita = 150;
  } else if (zanHP_tab3 / tekipokeStatusHS4 >= 6 / 64 && zanHP_tab3 / tekipokeStatusHS4 < 13 / 64) {
    teki4Kishijita = 100;
  } else if (zanHP_tab3 / tekipokeStatusHS4 >= 13 / 64 && zanHP_tab3 / tekipokeStatusHS4 < 22 / 64) {
    teki4Kishijita = 80;
  } else if (zanHP_tab3 / tekipokeStatusHS4 >= 22 / 64 && zanHP_tab3 / tekipokeStatusHS4 < 43 / 64) {
    teki4Kishijita = 40;
  } else {
    teki4Kishijita = 20;
  }

  if (name1S4 === "きしかいせい" || name1S4 === "じたばた") {
    kisoPower1S4 = teki4Kishijita;
  }

  if (name2S4 === "きしかいせい" || name2S4 === "じたばた") {
    kisoPower2S4 = teki4Kishijita;
  }

  if (name3S4 === "きしかいせい" || name3S4 === "じたばた") {
    kisoPower3S4 = teki4Kishijita;
  }

  if (name4S4 === "きしかいせい" || name4S4 === "じたばた") {
    kisoPower4S4 = teki4Kishijita;
  }

  //!しぼりとる/にぎりつぶす
  // 威力=1+120×相手の残りHP÷相手の最大HP (小数点以下切捨て)。威力1～121。
  let myShibonigiS1 = 1 + Math.floor((120 * zanHP_tab3) / tekipokeStatusHS1); //自分が敵1へ当てる威力
  let myShibonigiS2 = 1 + Math.floor((120 * zanHP_tab3) / tekipokeStatusHS2); //自分が敵2へ当てる威力
  let myShibonigiS3 = 1 + Math.floor((120 * zanHP_tab3) / tekipokeStatusHS3); //自分が敵3へ当てる威力
  let myShibonigiS4 = 1 + Math.floor((120 * zanHP_tab3) / tekipokeStatusHS4); //自分が敵4へ当てる威力
  let tekiShibonigi = 1 + Math.floor((120 * zanHP_tab3) / mypokeStatusH); //自分被ダメ

  if (name1 === "しぼりとる" || name1 === "にぎりつぶす") {
    kisoS1Power1 = myShibonigiS1;
    kisoS2Power1 = myShibonigiS2;
    kisoS3Power1 = myShibonigiS3;
    kisoS4Power1 = myShibonigiS4;
  }

  if (name2 === "しぼりとる" || name2 === "にぎりつぶす") {
    kisoS1Power2 = myShibonigiS1;
    kisoS2Power2 = myShibonigiS2;
    kisoS3Power2 = myShibonigiS3;
    kisoS4Power2 = myShibonigiS4;
  }

  if (name3 === "しぼりとる" || name3 === "にぎりつぶす") {
    kisoS1Power3 = myShibonigiS1;
    kisoS2Power3 = myShibonigiS2;
    kisoS3Power3 = myShibonigiS3;
    kisoS4Power3 = myShibonigiS4;
  }

  if (name4 === "しぼりとる" || name4 === "にぎりつぶす") {
    kisoS1Power4 = myShibonigiS1;
    kisoS2Power4 = myShibonigiS2;
    kisoS3Power4 = myShibonigiS3;
    kisoS4Power4 = myShibonigiS4;
  }

  if (name1S1 === "しぼりとる" || name1S1 === "にぎりつぶす") {
    kisoPower1S1 = tekiShibonigi;
  }

  if (name2S1 === "しぼりとる" || name2S1 === "にぎりつぶす") {
    kisoPower2S1 = tekiShibonigi;
  }

  if (name3S1 === "しぼりとる" || name3S1 === "にぎりつぶす") {
    kisoPower3S1 = tekiShibonigi;
  }

  if (name4S1 === "しぼりとる" || name4S1 === "にぎりつぶす") {
    kisoPower4S1 = tekiShibonigi;
  }

  if (name1S2 === "しぼりとる" || name1S2 === "にぎりつぶす") {
    kisoPower1S2 = tekiShibonigi;
  }

  if (name2S2 === "しぼりとる" || name2S2 === "にぎりつぶす") {
    kisoPower2S2 = tekiShibonigi;
  }

  if (name3S2 === "しぼりとる" || name3S2 === "にぎりつぶす") {
    kisoPower3S2 = tekiShibonigi;
  }

  if (name4S2 === "しぼりとる" || name4S2 === "にぎりつぶす") {
    kisoPower4S2 = tekiShibonigi;
  }

  if (name1S3 === "しぼりとる" || name1S3 === "にぎりつぶす") {
    kisoPower1S3 = tekiShibonigi;
  }

  if (name2S3 === "しぼりとる" || name2S3 === "にぎりつぶす") {
    kisoPower2S3 = tekiShibonigi;
  }

  if (name3S3 === "しぼりとる" || name3S3 === "にぎりつぶす") {
    kisoPower3S3 = tekiShibonigi;
  }

  if (name4S3 === "しぼりとる" || name4S3 === "にぎりつぶす") {
    kisoPower4S3 = tekiShibonigi;
  }

  if (name1S4 === "しぼりとる" || name1S4 === "にぎりつぶす") {
    kisoPower1S4 = tekiShibonigi;
  }

  if (name2S4 === "しぼりとる" || name2S4 === "にぎりつぶす") {
    kisoPower2S4 = tekiShibonigi;
  }

  if (name3S4 === "しぼりとる" || name3S4 === "にぎりつぶす") {
    kisoPower3S4 = tekiShibonigi;
  }

  if (name4S4 === "しぼりとる" || name4S4 === "にぎりつぶす") {
    kisoPower4S4 = tekiShibonigi;
  }

  //// おしおき
  //!ジャイロボール
  // 威力=(25×相手の素早さ÷自分の素早さ)+1ただし、最大威力150。最後に切り捨て
  // mypokeStatusSRanked//ランク補正後自分S
  // tekipokeStatusSS1Ranked //ランク補正後敵型1S
  // tekipokeStatusSS2Ranked //ランク補正後敵型2S
  // tekipokeStatusSS3Ranked //ランク補正後敵型3S
  // tekipokeStatusSS4Ranked //ランク補正後敵型4S
  let my_teki1Gyro = Math.min(Math.floor((25 * tekipokeStatusSS1Ranked) / mypokeStatusSRanked + 1), 150); //自分が敵型1に撃つ威力
  let my_teki2Gyro = Math.min(Math.floor((25 * tekipokeStatusSS2Ranked) / mypokeStatusSRanked + 1), 150); //自分が敵型2に撃つ威力
  let my_teki3Gyro = Math.min(Math.floor((25 * tekipokeStatusSS3Ranked) / mypokeStatusSRanked + 1), 150); //自分が敵型3に撃つ威力
  let my_teki4Gyro = Math.min(Math.floor((25 * tekipokeStatusSS4Ranked) / mypokeStatusSRanked + 1), 150); //自分が敵型4に撃つ威力
  let teki1_myGyro = Math.min(Math.floor((25 * mypokeStatusSRanked) / tekipokeStatusSS1Ranked + 1), 150); //敵型1が自分に撃つ威力
  let teki2_myGyro = Math.min(Math.floor((25 * mypokeStatusSRanked) / tekipokeStatusSS2Ranked + 1), 150); //敵型2が自分に撃つ威力
  let teki3_myGyro = Math.min(Math.floor((25 * mypokeStatusSRanked) / tekipokeStatusSS3Ranked + 1), 150); //敵型3が自分に撃つ威力
  let teki4_myGyro = Math.min(Math.floor((25 * mypokeStatusSRanked) / tekipokeStatusSS4Ranked + 1), 150); //敵型4が自分に撃つ威力

  if (name1 === "ジャイロボール") {
    kisoS1Power1 = my_teki1Gyro;
    kisoS2Power1 = my_teki2Gyro;
    kisoS3Power1 = my_teki3Gyro;
    kisoS4Power1 = my_teki4Gyro;
  }

  if (name2 === "ジャイロボール") {
    kisoS1Power2 = my_teki1Gyro;
    kisoS2Power2 = my_teki2Gyro;
    kisoS3Power2 = my_teki3Gyro;
    kisoS4Power2 = my_teki4Gyro;
  }

  if (name3 === "ジャイロボール") {
    kisoS1Power3 = my_teki1Gyro;
    kisoS2Power3 = my_teki2Gyro;
    kisoS3Power3 = my_teki3Gyro;
    kisoS4Power3 = my_teki4Gyro;
  }

  if (name4 === "ジャイロボール") {
    kisoS1Power4 = my_teki1Gyro;
    kisoS2Power4 = my_teki2Gyro;
    kisoS3Power4 = my_teki3Gyro;
    kisoS4Power4 = my_teki4Gyro;
  }

  if (name1S1 === "ジャイロボール") {
    kisoPower1S1 = teki1_myGyro;
  }

  if (name2S1 === "ジャイロボール") {
    kisoPower2S1 = teki1_myGyro;
  }

  if (name3S1 === "ジャイロボール") {
    kisoPower3S1 = teki1_myGyro;
  }

  if (name4S1 === "ジャイロボール") {
    kisoPower4S1 = teki1_myGyro;
  }

  if (name1S2 === "ジャイロボール") {
    kisoPower1S2 = teki2_myGyro;
  }

  if (name2S2 === "ジャイロボール") {
    kisoPower2S2 = teki2_myGyro;
  }

  if (name3S2 === "ジャイロボール") {
    kisoPower3S2 = teki2_myGyro;
  }

  if (name4S2 === "ジャイロボール") {
    kisoPower4S2 = teki2_myGyro;
  }

  if (name1S3 === "ジャイロボール") {
    kisoPower1S3 = teki3_myGyro;
  }

  if (name2S3 === "ジャイロボール") {
    kisoPower2S3 = teki3_myGyro;
  }

  if (name3S3 === "ジャイロボール") {
    kisoPower3S3 = teki3_myGyro;
  }

  if (name4S3 === "ジャイロボール") {
    kisoPower4S3 = teki3_myGyro;
  }

  if (name1S4 === "ジャイロボール") {
    kisoPower1S4 = teki4_myGyro;
  }

  if (name2S4 === "ジャイロボール") {
    kisoPower2S4 = teki4_myGyro;
  }

  if (name3S4 === "ジャイロボール") {
    kisoPower3S4 = teki4_myGyro;
  }

  if (name4S4 === "ジャイロボール") {
    kisoPower4S4 = teki4_myGyro;
  }

  // //きりふだ
  //!くさむすび/けたぐり
  const my_tekiKusaketa = tekipokeKusamusubiDamage; //自分が敵に撃つ威力
  const teki_myKusaketa = mypokeKusamusubiDamage; //敵が自分に撃つ威力

  if (name1 === "くさむすび" || name1 === "けたぐり") {
    kisoS1Power1 = my_tekiKusaketa;
    kisoS2Power1 = my_tekiKusaketa;
    kisoS3Power1 = my_tekiKusaketa;
    kisoS4Power1 = my_tekiKusaketa;
  }

  if (name2 === "くさむすび" || name2 === "けたぐり") {
    kisoS1Power2 = my_tekiKusaketa;
    kisoS2Power2 = my_tekiKusaketa;
    kisoS3Power2 = my_tekiKusaketa;
    kisoS4Power2 = my_tekiKusaketa;
  }

  if (name3 === "くさむすび" || name3 === "けたぐり") {
    kisoS1Power3 = my_tekiKusaketa;
    kisoS2Power3 = my_tekiKusaketa;
    kisoS3Power3 = my_tekiKusaketa;
    kisoS4Power3 = my_tekiKusaketa;
  }

  if (name4 === "くさむすび" || name4 === "けたぐり") {
    kisoS1Power4 = my_tekiKusaketa;
    kisoS2Power4 = my_tekiKusaketa;
    kisoS3Power4 = my_tekiKusaketa;
    kisoS4Power4 = my_tekiKusaketa;
  }

  if (name1S1 === "くさむすび" || name1S1 === "けたぐり") {
    kisoPower1S1 = teki_myKusaketa;
  }

  if (name2S1 === "くさむすび" || name2S1 === "けたぐり") {
    kisoPower2S1 = teki_myKusaketa;
  }

  if (name3S1 === "くさむすび" || name3S1 === "けたぐり") {
    kisoPower3S1 = teki_myKusaketa;
  }

  if (name4S1 === "くさむすび" || name4S1 === "けたぐり") {
    kisoPower4S1 = teki_myKusaketa;
  }

  if (name1S2 === "くさむすび" || name1S2 === "けたぐり") {
    kisoPower1S2 = teki_myKusaketa;
  }

  if (name2S2 === "くさむすび" || name2S2 === "けたぐり") {
    kisoPower2S2 = teki_myKusaketa;
  }

  if (name3S2 === "くさむすび" || name3S2 === "けたぐり") {
    kisoPower3S2 = teki_myKusaketa;
  }

  if (name4S2 === "くさむすび" || name4S2 === "けたぐり") {
    kisoPower4S2 = teki_myKusaketa;
  }

  if (name1S3 === "くさむすび" || name1S3 === "けたぐり") {
    kisoPower1S3 = teki_myKusaketa;
  }

  if (name2S3 === "くさむすび" || name2S3 === "けたぐり") {
    kisoPower2S3 = teki_myKusaketa;
  }

  if (name3S3 === "くさむすび" || name3S3 === "けたぐり") {
    kisoPower3S3 = teki_myKusaketa;
  }

  if (name4S3 === "くさむすび" || name4S3 === "けたぐり") {
    kisoPower4S3 = teki_myKusaketa;
  }

  if (name1S4 === "くさむすび" || name1S4 === "けたぐり") {
    kisoPower1S4 = teki_myKusaketa;
  }

  if (name2S4 === "くさむすび" || name2S4 === "けたぐり") {
    kisoPower2S4 = teki_myKusaketa;
  }

  if (name3S4 === "くさむすび" || name3S4 === "けたぐり") {
    kisoPower3S4 = teki_myKusaketa;
  }

  if (name4S4 === "くさむすび" || name4S4 === "けたぐり") {
    kisoPower4S4 = teki_myKusaketa;
  }

  //!きつけ/めざましビンタ
  if (name1 === "きつけ" || name1 === "めざましビンタ") {
    kisoS1Power1 = 120;
    kisoS2Power1 = 120;
    kisoS3Power1 = 120;
    kisoS4Power1 = 120;
  }

  if (name2 === "きつけ" || name2 === "めざましビンタ") {
    kisoS1Power2 = 120;
    kisoS2Power2 = 120;
    kisoS3Power2 = 120;
    kisoS4Power2 = 120;
  }

  if (name3 === "きつけ" || name3 === "めざましビンタ") {
    kisoS1Power3 = 120;
    kisoS2Power3 = 120;
    kisoS3Power3 = 120;
    kisoS4Power3 = 120;
  }

  if (name4 === "きつけ" || name4 === "めざましビンタ") {
    kisoS1Power4 = 120;
    kisoS2Power4 = 120;
    kisoS3Power4 = 120;
    kisoS4Power4 = 120;
  }

  if (name1S1 === "きつけ" || name1S1 === "めざましビンタ") {
    kisoPower1S1 = 120;
  }

  if (name2S1 === "きつけ" || name2S1 === "めざましビンタ") {
    kisoPower2S1 = 120;
  }

  if (name3S1 === "きつけ" || name3S1 === "めざましビンタ") {
    kisoPower3S1 = 120;
  }

  if (name4S1 === "きつけ" || name4S1 === "めざましビンタ") {
    kisoPower4S1 = 120;
  }

  if (name1S2 === "きつけ" || name1S2 === "めざましビンタ") {
    kisoPower1S2 = 120;
  }

  if (name2S2 === "きつけ" || name2S2 === "めざましビンタ") {
    kisoPower2S2 = 120;
  }

  if (name3S2 === "きつけ" || name3S2 === "めざましビンタ") {
    kisoPower3S2 = 120;
  }

  if (name4S2 === "きつけ" || name4S2 === "めざましビンタ") {
    kisoPower4S2 = 120;
  }

  if (name1S3 === "きつけ" || name1S3 === "めざましビンタ") {
    kisoPower1S3 = 120;
  }

  if (name2S3 === "きつけ" || name2S3 === "めざましビンタ") {
    kisoPower2S3 = 120;
  }

  if (name3S3 === "きつけ" || name3S3 === "めざましビンタ") {
    kisoPower3S3 = 120;
  }

  if (name4S3 === "きつけ" || name4S3 === "めざましビンタ") {
    kisoPower4S3 = 120;
  }

  if (name1S4 === "きつけ" || name1S4 === "めざましビンタ") {
    kisoPower1S4 = 120;
  }

  if (name2S4 === "きつけ" || name2S4 === "めざましビンタ") {
    kisoPower2S4 = 120;
  }

  if (name3S4 === "きつけ" || name3S4 === "めざましビンタ") {
    kisoPower3S4 = 120;
  }

  if (name4S4 === "きつけ" || name4S4 === "めざましビンタ") {
    kisoPower4S4 = 120;
  }

  //!かぜおこし/たつまき(第三世代以降)
  if (name1 === "かぜおこし" || name1 === "たつまき") {
    kisoS1Power1 = 80;
    kisoS2Power1 = 80;
    kisoS3Power1 = 80;
    kisoS4Power1 = 80;
  }

  if (name2 === "かぜおこし" || name2 === "たつまき") {
    kisoS1Power2 = 80;
    kisoS2Power2 = 80;
    kisoS3Power2 = 80;
    kisoS4Power2 = 80;
  }

  if (name3 === "かぜおこし" || name3 === "たつまき") {
    kisoS1Power3 = 80;
    kisoS2Power3 = 80;
    kisoS3Power3 = 80;
    kisoS4Power3 = 80;
  }

  if (name4 === "かぜおこし" || name4 === "たつまき") {
    kisoS1Power4 = 80;
    kisoS2Power4 = 80;
    kisoS3Power4 = 80;
    kisoS4Power4 = 80;
  }

  if (name1S1 === "かぜおこし" || name1S1 === "たつまき") {
    kisoPower1S1 = 80;
  }

  if (name2S1 === "かぜおこし" || name2S1 === "たつまき") {
    kisoPower2S1 = 80;
  }

  if (name3S1 === "かぜおこし" || name3S1 === "たつまき") {
    kisoPower3S1 = 80;
  }

  if (name4S1 === "かぜおこし" || name4S1 === "たつまき") {
    kisoPower4S1 = 80;
  }

  if (name1S2 === "かぜおこし" || name1S2 === "たつまき") {
    kisoPower1S2 = 80;
  }

  if (name2S2 === "かぜおこし" || name2S2 === "たつまき") {
    kisoPower2S2 = 80;
  }

  if (name3S2 === "かぜおこし" || name3S2 === "たつまき") {
    kisoPower3S2 = 80;
  }

  if (name4S2 === "かぜおこし" || name4S2 === "たつまき") {
    kisoPower4S2 = 80;
  }

  if (name1S3 === "かぜおこし" || name1S3 === "たつまき") {
    kisoPower1S3 = 80;
  }

  if (name2S3 === "かぜおこし" || name2S3 === "たつまき") {
    kisoPower2S3 = 80;
  }

  if (name3S3 === "かぜおこし" || name3S3 === "たつまき") {
    kisoPower3S3 = 80;
  }

  if (name4S3 === "かぜおこし" || name4S3 === "たつまき") {
    kisoPower4S3 = 80;
  }

  if (name1S4 === "かぜおこし" || name1S4 === "たつまき") {
    kisoPower1S4 = 80;
  }

  if (name2S4 === "かぜおこし" || name2S4 === "たつまき") {
    kisoPower2S4 = 80;
  }

  if (name3S4 === "かぜおこし" || name3S4 === "たつまき") {
    kisoPower3S4 = 80;
  }

  if (name4S4 === "かぜおこし" || name4S4 === "たつまき") {
    kisoPower4S4 = 80;
  }

  //!じしん(第三世代・第四世代)
  if (name1 === "じしん") {
    kisoS1Power1 = 200;
    kisoS2Power1 = 200;
    kisoS3Power1 = 200;
    kisoS4Power1 = 200;
  }

  if (name2 === "じしん") {
    kisoS1Power2 = 200;
    kisoS2Power2 = 200;
    kisoS3Power2 = 200;
    kisoS4Power2 = 200;
  }

  if (name3 === "じしん") {
    kisoS1Power3 = 200;
    kisoS2Power3 = 200;
    kisoS3Power3 = 200;
    kisoS4Power3 = 200;
  }

  if (name4 === "じしん") {
    kisoS1Power4 = 200;
    kisoS2Power4 = 200;
    kisoS3Power4 = 200;
    kisoS4Power4 = 200;
  }

  if (name1S1 === "じしん") {
    kisoPower1S1 = 200;
  }

  if (name2S1 === "じしん") {
    kisoPower2S1 = 200;
  }

  if (name3S1 === "じしん") {
    kisoPower3S1 = 200;
  }

  if (name4S1 === "じしん") {
    kisoPower4S1 = 200;
  }

  if (name1S2 === "じしん") {
    kisoPower1S2 = 200;
  }

  if (name2S2 === "じしん") {
    kisoPower2S2 = 200;
  }

  if (name3S2 === "じしん") {
    kisoPower3S2 = 200;
  }

  if (name4S2 === "じしん") {
    kisoPower4S2 = 200;
  }

  if (name1S3 === "じしん") {
    kisoPower1S3 = 200;
  }

  if (name2S3 === "じしん") {
    kisoPower2S3 = 200;
  }

  if (name3S3 === "じしん") {
    kisoPower3S3 = 200;
  }

  if (name4S3 === "じしん") {
    kisoPower4S3 = 200;
  }

  if (name1S4 === "じしん") {
    kisoPower1S4 = 200;
  }

  if (name2S4 === "じしん") {
    kisoPower2S4 = 200;
  }

  if (name3S4 === "じしん") {
    kisoPower3S4 = 200;
  }

  if (name4S4 === "じしん") {
    kisoPower4S4 = 200;
  }

  ////マグニチュード(第三世代・第四世代)
  //!うずしお(第三世代・第四世代)
  if (name1 === "うずしお") {
    kisoS1Power1 = 30;
    kisoS2Power1 = 30;
    kisoS3Power1 = 30;
    kisoS4Power1 = 30;
  }

  if (name2 === "うずしお") {
    kisoS1Power2 = 30;
    kisoS2Power2 = 30;
    kisoS3Power2 = 30;
    kisoS4Power2 = 30;
  }

  if (name3 === "うずしお") {
    kisoS1Power3 = 30;
    kisoS2Power3 = 30;
    kisoS3Power3 = 30;
    kisoS4Power3 = 30;
  }

  if (name4 === "うずしお") {
    kisoS1Power4 = 30;
    kisoS2Power4 = 30;
    kisoS3Power4 = 30;
    kisoS4Power4 = 30;
  }

  if (name1S1 === "うずしお") {
    kisoPower1S1 = 30;
  }

  if (name2S1 === "うずしお") {
    kisoPower2S1 = 30;
  }

  if (name3S1 === "うずしお") {
    kisoPower3S1 = 30;
  }

  if (name4S1 === "うずしお") {
    kisoPower4S1 = 30;
  }

  if (name1S2 === "うずしお") {
    kisoPower1S2 = 30;
  }

  if (name2S2 === "うずしお") {
    kisoPower2S2 = 30;
  }

  if (name3S2 === "うずしお") {
    kisoPower3S2 = 30;
  }

  if (name4S2 === "うずしお") {
    kisoPower4S2 = 30;
  }

  if (name1S3 === "うずしお") {
    kisoPower1S3 = 30;
  }

  if (name2S3 === "うずしお") {
    kisoPower2S3 = 30;
  }

  if (name3S3 === "うずしお") {
    kisoPower3S3 = 30;
  }

  if (name4S3 === "うずしお") {
    kisoPower4S3 = 30;
  }

  if (name1S4 === "うずしお") {
    kisoPower1S4 = 30;
  }

  if (name2S4 === "うずしお") {
    kisoPower2S4 = 30;
  }

  if (name3S4 === "うずしお") {
    kisoPower3S4 = 30;
  }

  if (name4S4 === "うずしお") {
    kisoPower4S4 = 30;
  }
  //!なみのり(第三世代・第四世代)
  if (name1 === "なみのり") {
    kisoS1Power1 = 190;
    kisoS2Power1 = 190;
    kisoS3Power1 = 190;
    kisoS4Power1 = 190;
  }

  if (name2 === "なみのり") {
    kisoS1Power2 = 190;
    kisoS2Power2 = 190;
    kisoS3Power2 = 190;
    kisoS4Power2 = 190;
  }

  if (name3 === "なみのり") {
    kisoS1Power3 = 190;
    kisoS2Power3 = 190;
    kisoS3Power3 = 190;
    kisoS4Power3 = 190;
  }

  if (name4 === "なみのり") {
    kisoS1Power4 = 190;
    kisoS2Power4 = 190;
    kisoS3Power4 = 190;
    kisoS4Power4 = 190;
  }

  if (name1S1 === "なみのり") {
    kisoPower1S1 = 190;
  }

  if (name2S1 === "なみのり") {
    kisoPower2S1 = 190;
  }

  if (name3S1 === "なみのり") {
    kisoPower3S1 = 190;
  }

  if (name4S1 === "なみのり") {
    kisoPower4S1 = 190;
  }

  if (name1S2 === "なみのり") {
    kisoPower1S2 = 190;
  }

  if (name2S2 === "なみのり") {
    kisoPower2S2 = 190;
  }

  if (name3S2 === "なみのり") {
    kisoPower3S2 = 190;
  }

  if (name4S2 === "なみのり") {
    kisoPower4S2 = 190;
  }

  if (name1S3 === "なみのり") {
    kisoPower1S3 = 190;
  }

  if (name2S3 === "なみのり") {
    kisoPower2S3 = 190;
  }

  if (name3S3 === "なみのり") {
    kisoPower3S3 = 190;
  }

  if (name4S3 === "なみのり") {
    kisoPower4S3 = 190;
  }

  if (name1S4 === "なみのり") {
    kisoPower1S4 = 190;
  }

  if (name2S4 === "なみのり") {
    kisoPower2S4 = 190;
  }

  if (name3S4 === "なみのり") {
    kisoPower3S4 = 190;
  }

  if (name4S4 === "なみのり") {
    kisoPower4S4 = 190;
  }
  //! ふみつけ(第四世代のみ)
  if (name1 === "ふみつけ") {
    kisoS1Power1 = 130;
    kisoS2Power1 = 130;
    kisoS3Power1 = 130;
    kisoS4Power1 = 130;
  }

  if (name2 === "ふみつけ") {
    kisoS1Power2 = 130;
    kisoS2Power2 = 130;
    kisoS3Power2 = 130;
    kisoS4Power2 = 130;
  }

  if (name3 === "ふみつけ") {
    kisoS1Power3 = 130;
    kisoS2Power3 = 130;
    kisoS3Power3 = 130;
    kisoS4Power3 = 130;
  }

  if (name4 === "ふみつけ") {
    kisoS1Power4 = 130;
    kisoS2Power4 = 130;
    kisoS3Power4 = 130;
    kisoS4Power4 = 130;
  }

  if (name1S1 === "ふみつけ") {
    kisoPower1S1 = 130;
  }

  if (name2S1 === "ふみつけ") {
    kisoPower2S1 = 130;
  }

  if (name3S1 === "ふみつけ") {
    kisoPower3S1 = 130;
  }

  if (name4S1 === "ふみつけ") {
    kisoPower4S1 = 130;
  }

  if (name1S2 === "ふみつけ") {
    kisoPower1S2 = 130;
  }

  if (name2S2 === "ふみつけ") {
    kisoPower2S2 = 130;
  }

  if (name3S2 === "ふみつけ") {
    kisoPower3S2 = 130;
  }

  if (name4S2 === "ふみつけ") {
    kisoPower4S2 = 130;
  }

  if (name1S3 === "ふみつけ") {
    kisoPower1S3 = 130;
  }

  if (name2S3 === "ふみつけ") {
    kisoPower2S3 = 130;
  }

  if (name3S3 === "ふみつけ") {
    kisoPower3S3 = 130;
  }

  if (name4S3 === "ふみつけ") {
    kisoPower4S3 = 130;
  }

  if (name1S4 === "ふみつけ") {
    kisoPower1S4 = 130;
  }

  if (name2S4 === "ふみつけ") {
    kisoPower2S4 = 130;
  }

  if (name3S4 === "ふみつけ") {
    kisoPower3S4 = 130;
  }

  if (name4S4 === "ふみつけ") {
    kisoPower4S4 = 130;
  }

  ////ウェザーボール
  //// なげつける→鉄球固定
  ////アイスボール/ころがる
  ////トリプルキック/トリプルアクセル
  ////はきだす(第四世代以降)
  ////れんぞくぎり
  ////おいうち
  //!しっぺがえし
  if (name1 === "しっぺがえし") {
    kisoS1Power1 = 100;
    kisoS2Power1 = 100;
    kisoS3Power1 = 100;
    kisoS4Power1 = 100;
  }

  if (name2 === "しっぺがえし") {
    kisoS1Power2 = 100;
    kisoS2Power2 = 100;
    kisoS3Power2 = 100;
    kisoS4Power2 = 100;
  }

  if (name3 === "しっぺがえし") {
    kisoS1Power3 = 100;
    kisoS2Power3 = 100;
    kisoS3Power3 = 100;
    kisoS4Power3 = 100;
  }

  if (name4 === "しっぺがえし") {
    kisoS1Power4 = 100;
    kisoS2Power4 = 100;
    kisoS3Power4 = 100;
    kisoS4Power4 = 100;
  }

  if (name1S1 === "しっぺがえし") {
    kisoPower1S1 = 100;
  }

  if (name2S1 === "しっぺがえし") {
    kisoPower2S1 = 100;
  }

  if (name3S1 === "しっぺがえし") {
    kisoPower3S1 = 100;
  }

  if (name4S1 === "しっぺがえし") {
    kisoPower4S1 = 100;
  }

  if (name1S2 === "しっぺがえし") {
    kisoPower1S2 = 100;
  }

  if (name2S2 === "しっぺがえし") {
    kisoPower2S2 = 100;
  }

  if (name3S2 === "しっぺがえし") {
    kisoPower3S2 = 100;
  }

  if (name4S2 === "しっぺがえし") {
    kisoPower4S2 = 100;
  }

  if (name1S3 === "しっぺがえし") {
    kisoPower1S3 = 100;
  }

  if (name2S3 === "しっぺがえし") {
    kisoPower2S3 = 100;
  }

  if (name3S3 === "しっぺがえし") {
    kisoPower3S3 = 100;
  }

  if (name4S3 === "しっぺがえし") {
    kisoPower4S3 = 100;
  }

  if (name1S4 === "しっぺがえし") {
    kisoPower1S4 = 100;
  }

  if (name2S4 === "しっぺがえし") {
    kisoPower2S4 = 100;
  }

  if (name3S4 === "しっぺがえし") {
    kisoPower3S4 = 100;
  }

  if (name4S4 === "しっぺがえし") {
    kisoPower4S4 = 100;
  }

  //! ゆきなだれ/リベンジ
  if (name1 === "ゆきなだれ" || name1 === "リベンジ") {
    kisoS1Power1 = 120;
    kisoS2Power1 = 120;
    kisoS3Power1 = 120;
    kisoS4Power1 = 120;
  }

  if (name2 === "ゆきなだれ" || name2 === "リベンジ") {
    kisoS1Power2 = 120;
    kisoS2Power2 = 120;
    kisoS3Power2 = 120;
    kisoS4Power2 = 120;
  }

  if (name3 === "ゆきなだれ" || name3 === "リベンジ") {
    kisoS1Power3 = 120;
    kisoS2Power3 = 120;
    kisoS3Power3 = 120;
    kisoS4Power3 = 120;
  }

  if (name4 === "ゆきなだれ" || name4 === "リベンジ") {
    kisoS1Power4 = 120;
    kisoS2Power4 = 120;
    kisoS3Power4 = 120;
    kisoS4Power4 = 120;
  }

  if (name1S1 === "ゆきなだれ" || name1S1 === "リベンジ") {
    kisoPower1S1 = 120;
  }

  if (name2S1 === "ゆきなだれ" || name2S1 === "リベンジ") {
    kisoPower2S1 = 120;
  }

  if (name3S1 === "ゆきなだれ" || name3S1 === "リベンジ") {
    kisoPower3S1 = 120;
  }

  if (name4S1 === "ゆきなだれ" || name4S1 === "リベンジ") {
    kisoPower4S1 = 120;
  }

  if (name1S2 === "ゆきなだれ" || name1S2 === "リベンジ") {
    kisoPower1S2 = 120;
  }

  if (name2S2 === "ゆきなだれ" || name2S2 === "リベンジ") {
    kisoPower2S2 = 120;
  }

  if (name3S2 === "ゆきなだれ" || name3S2 === "リベンジ") {
    kisoPower3S2 = 120;
  }

  if (name4S2 === "ゆきなだれ" || name4S2 === "リベンジ") {
    kisoPower4S2 = 120;
  }

  if (name1S3 === "ゆきなだれ" || name1S3 === "リベンジ") {
    kisoPower1S3 = 120;
  }

  if (name2S3 === "ゆきなだれ" || name2S3 === "リベンジ") {
    kisoPower2S3 = 120;
  }

  if (name3S3 === "ゆきなだれ" || name3S3 === "リベンジ") {
    kisoPower3S3 = 120;
  }

  if (name4S3 === "ゆきなだれ" || name4S3 === "リベンジ") {
    kisoPower4S3 = 120;
  }

  if (name1S4 === "ゆきなだれ" || name1S4 === "リベンジ") {
    kisoPower1S4 = 120;
  }

  if (name2S4 === "ゆきなだれ" || name2S4 === "リベンジ") {
    kisoPower2S4 = 120;
  }

  if (name3S4 === "ゆきなだれ" || name3S4 === "リベンジ") {
    kisoPower3S4 = 120;
  }

  if (name4S4 === "ゆきなだれ" || name4S4 === "リベンジ") {
    kisoPower4S4 = 120;
  }

  //! からげんき//4世代はやけどのA減少無効果がない。根性の無効果はある
  if (name1 === "からげんき") {
    kisoS1Power1 = 140;
    kisoS2Power1 = 140;
    kisoS3Power1 = 140;
    kisoS4Power1 = 140;
  }

  if (name2 === "からげんき") {
    kisoS1Power2 = 140;
    kisoS2Power2 = 140;
    kisoS3Power2 = 140;
    kisoS4Power2 = 140;
  }

  if (name3 === "からげんき") {
    kisoS1Power3 = 140;
    kisoS2Power3 = 140;
    kisoS3Power3 = 140;
    kisoS4Power3 = 140;
  }

  if (name4 === "からげんき") {
    kisoS1Power4 = 140;
    kisoS2Power4 = 140;
    kisoS3Power4 = 140;
    kisoS4Power4 = 140;
  }

  if (name1S1 === "からげんき") {
    kisoPower1S1 = 140;
  }

  if (name2S1 === "からげんき") {
    kisoPower2S1 = 140;
  }

  if (name3S1 === "からげんき") {
    kisoPower3S1 = 140;
  }

  if (name4S1 === "からげんき") {
    kisoPower4S1 = 140;
  }

  if (name1S2 === "からげんき") {
    kisoPower1S2 = 140;
  }

  if (name2S2 === "からげんき") {
    kisoPower2S2 = 140;
  }

  if (name3S2 === "からげんき") {
    kisoPower3S2 = 140;
  }

  if (name4S2 === "からげんき") {
    kisoPower4S2 = 140;
  }

  if (name1S3 === "からげんき") {
    kisoPower1S3 = 140;
  }

  if (name2S3 === "からげんき") {
    kisoPower2S3 = 140;
  }

  if (name3S3 === "からげんき") {
    kisoPower3S3 = 140;
  }

  if (name4S3 === "からげんき") {
    kisoPower4S3 = 140;
  }

  if (name1S4 === "からげんき") {
    kisoPower1S4 = 140;
  }

  if (name2S4 === "からげんき") {
    kisoPower2S4 = 140;
  }

  if (name3S4 === "からげんき") {
    kisoPower3S4 = 140;
  }

  if (name4S4 === "からげんき") {
    kisoPower4S4 = 140;
  }

  //! だいばくはつ※本来はBが半減だが計算面倒臭いので便宜上威力を上げる。
  if (name1 === "だいばくはつ") {
    kisoS1Power1 = 500;
    kisoS2Power1 = 500;
    kisoS3Power1 = 500;
    kisoS4Power1 = 500;
  }

  if (name2 === "だいばくはつ") {
    kisoS1Power2 = 500;
    kisoS2Power2 = 500;
    kisoS3Power2 = 500;
    kisoS4Power2 = 500;
  }

  if (name3 === "だいばくはつ") {
    kisoS1Power3 = 500;
    kisoS2Power3 = 500;
    kisoS3Power3 = 500;
    kisoS4Power3 = 500;
  }

  if (name4 === "だいばくはつ") {
    kisoS1Power4 = 500;
    kisoS2Power4 = 500;
    kisoS3Power4 = 500;
    kisoS4Power4 = 500;
  }

  if (name1S1 === "だいばくはつ") {
    kisoPower1S1 = 500;
  }

  if (name2S1 === "だいばくはつ") {
    kisoPower2S1 = 500;
  }

  if (name3S1 === "だいばくはつ") {
    kisoPower3S1 = 500;
  }

  if (name4S1 === "だいばくはつ") {
    kisoPower4S1 = 500;
  }

  if (name1S2 === "だいばくはつ") {
    kisoPower1S2 = 500;
  }

  if (name2S2 === "だいばくはつ") {
    kisoPower2S2 = 500;
  }

  if (name3S2 === "だいばくはつ") {
    kisoPower3S2 = 500;
  }

  if (name4S2 === "だいばくはつ") {
    kisoPower4S2 = 500;
  }

  if (name1S3 === "だいばくはつ") {
    kisoPower1S3 = 500;
  }

  if (name2S3 === "だいばくはつ") {
    kisoPower2S3 = 500;
  }

  if (name3S3 === "だいばくはつ") {
    kisoPower3S3 = 500;
  }

  if (name4S3 === "だいばくはつ") {
    kisoPower4S3 = 500;
  }

  if (name1S4 === "だいばくはつ") {
    kisoPower1S4 = 500;
  }

  if (name2S4 === "だいばくはつ") {
    kisoPower2S4 = 500;
  }

  if (name3S4 === "だいばくはつ") {
    kisoPower3S4 = 500;
  }

  if (name4S4 === "だいばくはつ") {
    kisoPower4S4 = 500;
  }

  //! じばく※本来はBが半減だが計算面倒臭いので便宜上威力を上げる。
  if (name1 === "じばく") {
    kisoS1Power1 = 400;
    kisoS2Power1 = 400;
    kisoS3Power1 = 400;
    kisoS4Power1 = 400;
  }

  if (name2 === "じばく") {
    kisoS1Power2 = 400;
    kisoS2Power2 = 400;
    kisoS3Power2 = 400;
    kisoS4Power2 = 400;
  }

  if (name3 === "じばく") {
    kisoS1Power3 = 400;
    kisoS2Power3 = 400;
    kisoS3Power3 = 400;
    kisoS4Power3 = 400;
  }

  if (name4 === "じばく") {
    kisoS1Power4 = 400;
    kisoS2Power4 = 400;
    kisoS3Power4 = 400;
    kisoS4Power4 = 400;
  }

  if (name1S1 === "じばく") {
    kisoPower1S1 = 400;
  }

  if (name2S1 === "じばく") {
    kisoPower2S1 = 400;
  }

  if (name3S1 === "じばく") {
    kisoPower3S1 = 400;
  }

  if (name4S1 === "じばく") {
    kisoPower4S1 = 400;
  }

  if (name1S2 === "じばく") {
    kisoPower1S2 = 400;
  }

  if (name2S2 === "じばく") {
    kisoPower2S2 = 400;
  }

  if (name3S2 === "じばく") {
    kisoPower3S2 = 400;
  }

  if (name4S2 === "じばく") {
    kisoPower4S2 = 400;
  }

  if (name1S3 === "じばく") {
    kisoPower1S3 = 400;
  }

  if (name2S3 === "じばく") {
    kisoPower2S3 = 400;
  }

  if (name3S3 === "じばく") {
    kisoPower3S3 = 400;
  }

  if (name4S3 === "じばく") {
    kisoPower4S3 = 400;
  }

  if (name1S4 === "じばく") {
    kisoPower1S4 = 400;
  }

  if (name2S4 === "じばく") {
    kisoPower2S4 = 400;
  }

  if (name3S4 === "じばく") {
    kisoPower3S4 = 400;
  }

  if (name4S4 === "じばく") {
    kisoPower4S4 = 400;
  }

  ///! しおみず
  if (name1 === "しおみず") {
    kisoS1Power1 = 130;
    kisoS2Power1 = 130;
    kisoS3Power1 = 130;
    kisoS4Power1 = 130;
  }

  if (name2 === "しおみず") {
    kisoS1Power2 = 130;
    kisoS2Power2 = 130;
    kisoS3Power2 = 130;
    kisoS4Power2 = 130;
  }

  if (name3 === "しおみず") {
    kisoS1Power3 = 130;
    kisoS2Power3 = 130;
    kisoS3Power3 = 130;
    kisoS4Power3 = 130;
  }

  if (name4 === "しおみず") {
    kisoS1Power4 = 130;
    kisoS2Power4 = 130;
    kisoS3Power4 = 130;
    kisoS4Power4 = 130;
  }

  if (name1S1 === "しおみず") {
    kisoPower1S1 = 130;
  }

  if (name2S1 === "しおみず") {
    kisoPower2S1 = 130;
  }

  if (name3S1 === "しおみず") {
    kisoPower3S1 = 130;
  }

  if (name4S1 === "しおみず") {
    kisoPower4S1 = 130;
  }

  if (name1S2 === "しおみず") {
    kisoPower1S2 = 130;
  }

  if (name2S2 === "しおみず") {
    kisoPower2S2 = 130;
  }

  if (name3S2 === "しおみず") {
    kisoPower3S2 = 130;
  }

  if (name4S2 === "しおみず") {
    kisoPower4S2 = 130;
  }

  if (name1S3 === "しおみず") {
    kisoPower1S3 = 130;
  }

  if (name2S3 === "しおみず") {
    kisoPower2S3 = 130;
  }

  if (name3S3 === "しおみず") {
    kisoPower3S3 = 130;
  }

  if (name4S3 === "しおみず") {
    kisoPower4S3 = 130;
  }

  if (name1S4 === "しおみず") {
    kisoPower1S4 = 130;
  }

  if (name2S4 === "しおみず") {
    kisoPower2S4 = 130;
  }

  if (name3S4 === "しおみず") {
    kisoPower3S4 = 130;
  }

  if (name4S4 === "しおみず") {
    kisoPower4S4 = 130;
  }

  //// じゅうでん(第四世代以降)

  //! ソーラービーム/
  if (
    (name1 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name1 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name1 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoS1Power1 = 60;
    kisoS2Power1 = 60;
    kisoS3Power1 = 60;
    kisoS4Power1 = 60;
  }

  if (
    (name2 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name2 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name2 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoS1Power2 = 60;
    kisoS2Power2 = 60;
    kisoS3Power2 = 60;
    kisoS4Power2 = 60;
  }

  if (
    (name3 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name3 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name3 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoS1Power3 = 60;
    kisoS2Power3 = 60;
    kisoS3Power3 = 60;
    kisoS4Power3 = 60;
  }

  if (
    (name4 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name4 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name4 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoS1Power4 = 60;
    kisoS2Power4 = 60;
    kisoS3Power4 = 60;
    kisoS4Power4 = 60;
  }

  if (
    (name1S1 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name1S1 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name1S1 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoPower1S1 = 60;
  }

  if (
    (name2S1 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name2S1 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name2S1 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoPower2S1 = 60;
  }

  if (
    (name3S1 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name3S1 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name3S1 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoPower3S1 = 60;
  }

  if (
    (name4S1 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name4S1 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name4S1 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoPower4S1 = 60;
  }

  if (
    (name1S2 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name1S2 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name1S2 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoPower1S2 = 60;
  }

  if (
    (name2S2 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name2S2 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name2S2 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoPower2S2 = 60;
  }

  if (
    (name3S2 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name3S2 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name3S2 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoPower3S2 = 60;
  }

  if (
    (name4S2 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name4S2 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name4S2 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoPower4S2 = 60;
  }

  if (
    (name1S3 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name1S3 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name1S3 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoPower1S3 = 60;
  }

  if (
    (name2S3 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name2S3 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name2S3 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoPower2S3 = 60;
  }

  if (
    (name3S3 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name3S3 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name3S3 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoPower3S3 = 60;
  }

  if (
    (name4S3 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name4S3 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name4S3 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoPower4S3 = 60;
  }

  if (
    (name1S4 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name1S4 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name1S4 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoPower1S4 = 60;
  }

  if (
    (name2S4 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name2S4 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name2S4 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoPower2S4 = 60;
  }

  if (
    (name3S4 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name3S4 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name3S4 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoPower3S4 = 60;
  }

  if (
    (name4S4 === "ソーラービーム" && selectedWhether === "おおあめ") ||
    (name4S4 === "ソーラービーム" && selectedWhether === "すなあらし") ||
    (name4S4 === "ソーラービーム" && selectedWhether === "あられ")
  ) {
    kisoPower4S4 = 60;
  }
  //// どろあそび/みずあそび
  let myAbiIryokuDisplay1 = "";
  let myAbiIryokuDisplay2 = "";
  let myAbiIryokuDisplay3 = "";
  let myAbiIryokuDisplay4 = "";

  let tekiAbiIryokuDisplayS1W1 = "";
  let tekiAbiIryokuDisplayS1W2 = "";
  let tekiAbiIryokuDisplayS1W3 = "";
  let tekiAbiIryokuDisplayS1W4 = "";

  let tekiAbiIryokuDisplayS2W1 = "";
  let tekiAbiIryokuDisplayS2W2 = "";
  let tekiAbiIryokuDisplayS2W3 = "";
  let tekiAbiIryokuDisplayS2W4 = "";

  let tekiAbiIryokuDisplayS3W1 = "";
  let tekiAbiIryokuDisplayS3W2 = "";
  let tekiAbiIryokuDisplayS3W3 = "";
  let tekiAbiIryokuDisplayS3W4 = "";

  let tekiAbiIryokuDisplayS4W1 = "";
  let tekiAbiIryokuDisplayS4W2 = "";
  let tekiAbiIryokuDisplayS4W3 = "";
  let tekiAbiIryokuDisplayS4W4 = "";

  //! テクニシャン	1.5	使用する基礎威力60以下の技の威力が上がる。
  if (selectedAbility === "テクニシャン") {
    if (kisoS1Power1 <= 60) {
      kisoS1Power1 = Math.floor((kisoS1Power1 * 150) / 100);
      myAbiIryokuDisplay1 = "[テクニ]";
    }
    if (kisoS2Power1 <= 60) {
      kisoS2Power1 = Math.floor((kisoS2Power1 * 150) / 100);
      myAbiIryokuDisplay1 = "[テクニ]";
    }
    if (kisoS3Power1 <= 60) {
      kisoS3Power1 = Math.floor((kisoS3Power1 * 150) / 100);
      myAbiIryokuDisplay1 = "[テクニ]";
    }
    if (kisoS4Power1 <= 60) {
      kisoS4Power1 = Math.floor((kisoS4Power1 * 150) / 100);
      myAbiIryokuDisplay1 = "[テクニ]";
    }
    if (power1 <= 60) {
      power1 = Math.floor((power1 * 150) / 100);
      myAbiIryokuDisplay1 = "[テクニ]";
    }
  }

  if (selectedAbility === "テクニシャン") {
    if (kisoS1Power2 <= 60) {
      kisoS1Power2 = Math.floor((kisoS1Power2 * 150) / 100);
      myAbiIryokuDisplay2 = "[テクニ]";
    }
    if (kisoS2Power2 <= 60) {
      kisoS2Power2 = Math.floor((kisoS2Power2 * 150) / 100);
      myAbiIryokuDisplay2 = "[テクニ]";
    }
    if (kisoS3Power2 <= 60) {
      kisoS3Power2 = Math.floor((kisoS3Power2 * 150) / 100);
      myAbiIryokuDisplay2 = "[テクニ]";
    }
    if (kisoS4Power2 <= 60) {
      kisoS4Power2 = Math.floor((kisoS4Power2 * 150) / 100);
      myAbiIryokuDisplay2 = "[テクニ]";
    }
    if (power2 <= 60) {
      power2 = Math.floor((power2 * 150) / 100);
      myAbiIryokuDisplay2 = "[テクニ]";
    }
  }

  if (selectedAbility === "テクニシャン") {
    if (kisoS1Power3 <= 60) {
      kisoS1Power3 = Math.floor((kisoS1Power3 * 150) / 100);
      myAbiIryokuDisplay3 = "[テクニ]";
    }
    if (kisoS2Power3 <= 60) {
      kisoS2Power3 = Math.floor((kisoS2Power3 * 150) / 100);
      myAbiIryokuDisplay3 = "[テクニ]";
    }
    if (kisoS3Power3 <= 60) {
      kisoS3Power3 = Math.floor((kisoS3Power3 * 150) / 100);
      myAbiIryokuDisplay3 = "[テクニ]";
    }
    if (kisoS4Power3 <= 60) {
      kisoS4Power3 = Math.floor((kisoS4Power3 * 150) / 100);
      myAbiIryokuDisplay3 = "[テクニ]";
    }
    if (power3 <= 60) {
      power3 = Math.floor((power3 * 150) / 100);
      myAbiIryokuDisplay3 = "[テクニ]";
    }
  }

  if (selectedAbility === "テクニシャン") {
    if (kisoS1Power4 <= 60) {
      kisoS1Power4 = Math.floor((kisoS1Power4 * 150) / 100);
      myAbiIryokuDisplay4 = "[テクニ]";
    }
    if (kisoS2Power4 <= 60) {
      kisoS2Power4 = Math.floor((kisoS2Power4 * 150) / 100);
      myAbiIryokuDisplay4 = "[テクニ]";
    }
    if (kisoS3Power4 <= 60) {
      kisoS3Power4 = Math.floor((kisoS3Power4 * 150) / 100);
      myAbiIryokuDisplay4 = "[テクニ]";
    }
    if (kisoS4Power4 <= 60) {
      kisoS4Power4 = Math.floor((kisoS4Power4 * 150) / 100);
      myAbiIryokuDisplay4 = "[テクニ]";
    }
    if (power4 <= 60) {
      power4 = Math.floor((power4 * 150) / 100);
      myAbiIryokuDisplay4 = "[テクニ]";
    }
  }

  if (selectedTekiAbility === "テクニシャン") {
    if (kisoPower1S1 <= 60) {
      kisoPower1S1 = Math.floor((kisoPower1S1 * 150) / 100);
      tekiAbiIryokuDisplayS1W1 = "[テクニ]";
    }
    if (power1S1 <= 60) {
      power1S1 = Math.floor((power1S1 * 150) / 100);
      tekiAbiIryokuDisplayS1W1 = "[テクニ]";
    }
  }

  if (selectedTekiAbility === "テクニシャン") {
    if (kisoPower2S1 <= 60) {
      kisoPower2S1 = Math.floor((kisoPower2S1 * 150) / 100);
      tekiAbiIryokuDisplayS1W2 = "[テクニ]";
    }
    if (power2S1 <= 60) {
      power2S1 = Math.floor((power2S1 * 150) / 100);
      tekiAbiIryokuDisplayS1W2 = "[テクニ]";
    }
  }

  if (selectedTekiAbility === "テクニシャン") {
    if (kisoPower3S1 <= 60) {
      kisoPower3S1 = Math.floor((kisoPower3S1 * 150) / 100);
      tekiAbiIryokuDisplayS1W3 = "[テクニ]";
    }
    if (power3S1 <= 60) {
      power3S1 = Math.floor((power3S1 * 150) / 100);
      tekiAbiIryokuDisplayS1W3 = "[テクニ]";
    }
  }

  if (selectedTekiAbility === "テクニシャン") {
    if (kisoPower4S1 <= 60) {
      kisoPower4S1 = Math.floor((kisoPower4S1 * 150) / 100);
      tekiAbiIryokuDisplayS1W4 = "[テクニ]";
    }
    if (power4S1 <= 60) {
      power4S1 = Math.floor((power4S1 * 150) / 100);
      tekiAbiIryokuDisplayS1W4 = "[テクニ]";
    }
  }

  if (selectedTekiAbility === "テクニシャン") {
    if (kisoPower1S2 <= 60) {
      kisoPower1S2 = Math.floor((kisoPower1S2 * 150) / 100);
      tekiAbiIryokuDisplayS2W1 = "[テクニ]";
    }
    if (power1S2 <= 60) {
      power1S2 = Math.floor((power1S2 * 150) / 100);
      tekiAbiIryokuDisplayS2W1 = "[テクニ]";
    }
  }

  if (selectedTekiAbility === "テクニシャン") {
    if (kisoPower2S2 <= 60) {
      kisoPower2S2 = Math.floor((kisoPower2S2 * 150) / 100);
      tekiAbiIryokuDisplayS2W2 = "[テクニ]";
    }
    if (power2S2 <= 60) {
      power2S2 = Math.floor((power2S2 * 150) / 100);
      tekiAbiIryokuDisplayS2W2 = "[テクニ]";
    }
  }

  if (selectedTekiAbility === "テクニシャン") {
    if (kisoPower3S2 <= 60) {
      kisoPower3S2 = Math.floor((kisoPower3S2 * 150) / 100);
      tekiAbiIryokuDisplayS2W3 = "[テクニ]";
    }
    if (power3S2 <= 60) {
      power3S2 = Math.floor((power3S2 * 150) / 100);
      tekiAbiIryokuDisplayS2W3 = "[テクニ]";
    }
  }

  if (selectedTekiAbility === "テクニシャン") {
    if (kisoPower4S2 <= 60) {
      kisoPower4S2 = Math.floor((kisoPower4S2 * 150) / 100);
      tekiAbiIryokuDisplayS2W4 = "[テクニ]";
    }
    if (power4S2 <= 60) {
      power4S2 = Math.floor((power4S2 * 150) / 100);
      tekiAbiIryokuDisplayS2W4 = "[テクニ]";
    }
  }

  if (selectedTekiAbility === "テクニシャン") {
    if (kisoPower1S3 <= 60) {
      kisoPower1S3 = Math.floor((kisoPower1S3 * 150) / 100);
      tekiAbiIryokuDisplayS3W1 = "[テクニ]";
    }
    if (power1S3 <= 60) {
      power1S3 = Math.floor((power1S3 * 150) / 100);
      tekiAbiIryokuDisplayS3W1 = "[テクニ]";
    }
  }

  if (selectedTekiAbility === "テクニシャン") {
    if (kisoPower2S3 <= 60) {
      kisoPower2S3 = Math.floor((kisoPower2S3 * 150) / 100);
      tekiAbiIryokuDisplayS3W2 = "[テクニ]";
    }
    if (power2S3 <= 60) {
      power2S3 = Math.floor((power2S3 * 150) / 100);
      tekiAbiIryokuDisplayS3W2 = "[テクニ]";
    }
  }

  if (selectedTekiAbility === "テクニシャン") {
    if (kisoPower3S3 <= 60) {
      kisoPower3S3 = Math.floor((kisoPower3S3 * 150) / 100);
      tekiAbiIryokuDisplayS3W3 = "[テクニ]";
    }
    if (power3S3 <= 60) {
      power3S3 = Math.floor((power3S3 * 150) / 100);
      tekiAbiIryokuDisplayS3W3 = "[テクニ]";
    }
  }

  if (selectedTekiAbility === "テクニシャン") {
    if (kisoPower4S3 <= 60) {
      kisoPower4S3 = Math.floor((kisoPower4S3 * 150) / 100);
      tekiAbiIryokuDisplayS3W4 = "[テクニ]";
    }
    if (power4S3 <= 60) {
      power4S3 = Math.floor((power4S3 * 150) / 100);
      tekiAbiIryokuDisplayS3W4 = "[テクニ]";
    }
  }

  if (selectedTekiAbility === "テクニシャン") {
    if (kisoPower1S4 <= 60) {
      kisoPower1S4 = Math.floor((kisoPower1S4 * 150) / 100);
      tekiAbiIryokuDisplayS4W1 = "[テクニ]";
    }
    if (power1S4 <= 60) {
      power1S4 = Math.floor((power1S4 * 150) / 100);
      tekiAbiIryokuDisplayS4W1 = "[テクニ]";
    }
  }

  if (selectedTekiAbility === "テクニシャン") {
    if (kisoPower2S4 <= 60) {
      kisoPower2S4 = Math.floor((kisoPower2S4 * 150) / 100);
      tekiAbiIryokuDisplayS4W2 = "[テクニ]";
    }
    if (power2S4 <= 60) {
      power2S4 = Math.floor((power2S4 * 150) / 100);
      tekiAbiIryokuDisplayS4W2 = "[テクニ]";
    }
  }

  if (selectedTekiAbility === "テクニシャン") {
    if (kisoPower3S4 <= 60) {
      kisoPower3S4 = Math.floor((kisoPower3S4 * 150) / 100);
      tekiAbiIryokuDisplayS4W3 = "[テクニ]";
    }
    if (power3S4 <= 60) {
      power3S4 = Math.floor((power3S4 * 150) / 100);
      tekiAbiIryokuDisplayS4W3 = "[テクニ]";
    }
  }

  if (selectedTekiAbility === "テクニシャン") {
    if (kisoPower4S4 <= 60) {
      kisoPower4S4 = Math.floor((kisoPower4S4 * 150) / 100);
      tekiAbiIryokuDisplayS4W4 = "[テクニ]";
    }
    if (power4S4 <= 60) {
      power4S4 = Math.floor((power4S4 * 150) / 100);
      tekiAbiIryokuDisplayS4W4 = "[テクニ]";
    }
  }

  ///////////////////////////////////////////////////

  //! もちもの補正
  let myIryokuDisplay1 = "";
  let myIryokuDisplay2 = "";
  let myIryokuDisplay3 = "";
  let myIryokuDisplay4 = "";
  let teki1IryokuDisplay1 = "";
  let teki1IryokuDisplay2 = "";
  let teki1IryokuDisplay3 = "";
  let teki1IryokuDisplay4 = "";
  let teki2IryokuDisplay1 = "";
  let teki2IryokuDisplay2 = "";
  let teki2IryokuDisplay3 = "";
  let teki2IryokuDisplay4 = "";
  let teki3IryokuDisplay1 = "";
  let teki3IryokuDisplay2 = "";
  let teki3IryokuDisplay3 = "";
  let teki3IryokuDisplay4 = "";
  let teki4IryokuDisplay1 = "";
  let teki4IryokuDisplay2 = "";
  let teki4IryokuDisplay3 = "";
  let teki4IryokuDisplay4 = "";

  // ちからのハチマキ1.1
  if (myItem_tab3 === "ちからのハチマキ" && moveClass1 === "物理") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 110) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 110) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 110) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 110) / 100);
    power1 = Math.floor((power1 * 110) / 100);
    myIryokuDisplay1 = "[力の鉢巻]";
  }

  if (myItem_tab3 === "ちからのハチマキ" && moveClass2 === "物理") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 110) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 110) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 110) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 110) / 100);
    power2 = Math.floor((power2 * 110) / 100);
    myIryokuDisplay2 = "[力の鉢巻]";
  }

  if (myItem_tab3 === "ちからのハチマキ" && moveClass3 === "物理") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 110) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 110) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 110) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 110) / 100);
    power3 = Math.floor((power3 * 110) / 100);
    myIryokuDisplay3 = "[力の鉢巻]";
  }

  if (myItem_tab3 === "ちからのハチマキ" && moveClass4 === "物理") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 110) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 110) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 110) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 110) / 100);
    power4 = Math.floor((power4 * 110) / 100);
    myIryokuDisplay4 = "[力の鉢巻]";
  }

  if (tekiItem1_tab3 === "ちからのハチマキ" && moveClass1S1 === "物理") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 110) / 100);
    power1S1 = Math.floor((power1S1 * 110) / 100);
    teki1IryokuDisplay1 = "[力の鉢巻]";
  }

  if (tekiItem1_tab3 === "ちからのハチマキ" && moveClass2S1 === "物理") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 110) / 100);
    power2S1 = Math.floor((power2S1 * 110) / 100);
    teki1IryokuDisplay2 = "[力の鉢巻]";
  }

  if (tekiItem1_tab3 === "ちからのハチマキ" && moveClass3S1 === "物理") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 110) / 100);
    power3S1 = Math.floor((power3S1 * 110) / 100);
    teki1IryokuDisplay3 = "[力の鉢巻]";
  }

  if (tekiItem1_tab3 === "ちからのハチマキ" && moveClass4S1 === "物理") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 110) / 100);
    power4S1 = Math.floor((power4S1 * 110) / 100);
    teki1IryokuDisplay4 = "[力の鉢巻]";
  }

  if (tekiItem2_tab3 === "ちからのハチマキ" && moveClass1S2 === "物理") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 110) / 100);
    power1S2 = Math.floor((power1S2 * 110) / 100);
    teki2IryokuDisplay1 = "[力の鉢巻]";
  }

  if (tekiItem2_tab3 === "ちからのハチマキ" && moveClass2S2 === "物理") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 110) / 100);
    power2S2 = Math.floor((power2S2 * 110) / 100);
    teki2IryokuDisplay2 = "[力の鉢巻]";
  }

  if (tekiItem2_tab3 === "ちからのハチマキ" && moveClass3S2 === "物理") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 110) / 100);
    power3S2 = Math.floor((power3S2 * 110) / 100);
    teki2IryokuDisplay3 = "[力の鉢巻]";
  }

  if (tekiItem2_tab3 === "ちからのハチマキ" && moveClass4S2 === "物理") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 110) / 100);
    power4S2 = Math.floor((power4S2 * 110) / 100);
    teki2IryokuDisplay4 = "[力の鉢巻]";
  }

  if (tekiItem3_tab3 === "ちからのハチマキ" && moveClass1S3 === "物理") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 110) / 100);
    power1S3 = Math.floor((power1S3 * 110) / 100);
    teki3IryokuDisplay1 = "[力の鉢巻]";
  }

  if (tekiItem3_tab3 === "ちからのハチマキ" && moveClass2S3 === "物理") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 110) / 100);
    power2S3 = Math.floor((power2S3 * 110) / 100);
    teki3IryokuDisplay2 = "[力の鉢巻]";
  }

  if (tekiItem3_tab3 === "ちからのハチマキ" && moveClass3S3 === "物理") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 110) / 100);
    power3S3 = Math.floor((power3S3 * 110) / 100);
    teki3IryokuDisplay3 = "[力の鉢巻]";
  }

  if (tekiItem3_tab3 === "ちからのハチマキ" && moveClass4S3 === "物理") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 110) / 100);
    power4S3 = Math.floor((power4S3 * 110) / 100);
    teki3IryokuDisplay4 = "[力の鉢巻]";
  }

  if (tekiItem4_tab3 === "ちからのハチマキ" && moveClass1S4 === "物理") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 110) / 100);
    power1S4 = Math.floor((power1S4 * 110) / 100);
    teki4IryokuDisplay1 = "[力の鉢巻]";
  }

  if (tekiItem4_tab3 === "ちからのハチマキ" && moveClass2S4 === "物理") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 110) / 100);
    power2S4 = Math.floor((power2S4 * 110) / 100);
    teki4IryokuDisplay2 = "[力の鉢巻]";
  }

  if (tekiItem4_tab3 === "ちからのハチマキ" && moveClass3S4 === "物理") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 110) / 100);
    power3S4 = Math.floor((power3S4 * 110) / 100);
    teki4IryokuDisplay3 = "[力の鉢巻]";
  }

  if (tekiItem4_tab3 === "ちからのハチマキ" && moveClass4S4 === "物理") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 110) / 100);
    power4S4 = Math.floor((power4S4 * 110) / 100);
    teki4IryokuDisplay4 = "[力の鉢巻]";
  }

  // ものしりメガネ1.1
  if (myItem_tab3 === "ものしりメガネ" && moveClass1 === "特殊") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 110) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 110) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 110) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 110) / 100);
    power1 = Math.floor((power1 * 110) / 100);
    myIryokuDisplay1 = "[物知り眼鏡]";
  }

  if (myItem_tab3 === "ものしりメガネ" && moveClass2 === "特殊") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 110) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 110) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 110) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 110) / 100);
    power2 = Math.floor((power2 * 110) / 100);
    myIryokuDisplay2 = "[物知り眼鏡]";
  }

  if (myItem_tab3 === "ものしりメガネ" && moveClass3 === "特殊") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 110) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 110) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 110) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 110) / 100);
    power3 = Math.floor((power3 * 110) / 100);
    myIryokuDisplay3 = "[物知り眼鏡]";
  }

  if (myItem_tab3 === "ものしりメガネ" && moveClass4 === "特殊") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 110) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 110) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 110) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 110) / 100);
    power4 = Math.floor((power4 * 110) / 100);
    myIryokuDisplay4 = "[物知り眼鏡]";
  }

  if (tekiItem1_tab3 === "ものしりメガネ" && moveClass1S1 === "特殊") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 110) / 100);
    power1S1 = Math.floor((power1S1 * 110) / 100);
    teki1IryokuDisplay1 = "[物知り眼鏡]";
  }

  if (tekiItem1_tab3 === "ものしりメガネ" && moveClass2S1 === "特殊") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 110) / 100);
    power2S1 = Math.floor((power2S1 * 110) / 100);
    teki1IryokuDisplay2 = "[物知り眼鏡]";
  }

  if (tekiItem1_tab3 === "ものしりメガネ" && moveClass3S1 === "特殊") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 110) / 100);
    power3S1 = Math.floor((power3S1 * 110) / 100);
    teki1IryokuDisplay3 = "[物知り眼鏡]";
  }

  if (tekiItem1_tab3 === "ものしりメガネ" && moveClass4S1 === "特殊") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 110) / 100);
    power4S1 = Math.floor((power4S1 * 110) / 100);
    teki1IryokuDisplay4 = "[物知り眼鏡]";
  }

  if (tekiItem2_tab3 === "ものしりメガネ" && moveClass1S2 === "特殊") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 110) / 100);
    power1S2 = Math.floor((power1S2 * 110) / 100);
    teki2IryokuDisplay1 = "[物知り眼鏡]";
  }

  if (tekiItem2_tab3 === "ものしりメガネ" && moveClass2S2 === "特殊") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 110) / 100);
    power2S2 = Math.floor((power2S2 * 110) / 100);
    teki2IryokuDisplay2 = "[物知り眼鏡]";
  }

  if (tekiItem2_tab3 === "ものしりメガネ" && moveClass3S2 === "特殊") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 110) / 100);
    power3S2 = Math.floor((power3S2 * 110) / 100);
    teki2IryokuDisplay3 = "[物知り眼鏡]";
  }

  if (tekiItem2_tab3 === "ものしりメガネ" && moveClass4S2 === "特殊") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 110) / 100);
    power4S2 = Math.floor((power4S2 * 110) / 100);
    teki2IryokuDisplay4 = "[物知り眼鏡]";
  }

  if (tekiItem3_tab3 === "ものしりメガネ" && moveClass1S3 === "特殊") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 110) / 100);
    power1S3 = Math.floor((power1S3 * 110) / 100);
    teki3IryokuDisplay1 = "[物知り眼鏡]";
  }

  if (tekiItem3_tab3 === "ものしりメガネ" && moveClass2S3 === "特殊") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 110) / 100);
    power2S3 = Math.floor((power2S3 * 110) / 100);
    teki3IryokuDisplay2 = "[物知り眼鏡]";
  }

  if (tekiItem3_tab3 === "ものしりメガネ" && moveClass3S3 === "特殊") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 110) / 100);
    power3S3 = Math.floor((power3S3 * 110) / 100);
    teki3IryokuDisplay3 = "[物知り眼鏡]";
  }

  if (tekiItem3_tab3 === "ものしりメガネ" && moveClass4S3 === "特殊") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 110) / 100);
    power4S3 = Math.floor((power4S3 * 110) / 100);
    teki3IryokuDisplay4 = "[物知り眼鏡]";
  }

  if (tekiItem4_tab3 === "ものしりメガネ" && moveClass1S4 === "特殊") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 110) / 100);
    power1S4 = Math.floor((power1S4 * 110) / 100);
    teki4IryokuDisplay1 = "[物知り眼鏡]";
  }

  if (tekiItem4_tab3 === "ものしりメガネ" && moveClass2S4 === "特殊") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 110) / 100);
    power2S4 = Math.floor((power2S4 * 110) / 100);
    teki4IryokuDisplay2 = "[物知り眼鏡]";
  }

  if (tekiItem4_tab3 === "ものしりメガネ" && moveClass3S4 === "特殊") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 110) / 100);
    power3S4 = Math.floor((power3S4 * 110) / 100);
    teki4IryokuDisplay3 = "[物知り眼鏡]";
  }

  if (tekiItem4_tab3 === "ものしりメガネ" && moveClass4S4 === "特殊") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 110) / 100);
    power4S4 = Math.floor((power4S4 * 110) / 100);
    teki4IryokuDisplay4 = "[物知り眼鏡]";
  }

  // あやしいおこう1.2
  if (myItem_tab3 === "あやしいおこう" && wtype1 === "ゴースト") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[怪しいお香]";
  }

  if (myItem_tab3 === "あやしいおこう" && wtype2 === "ゴースト") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[怪しいお香]";
  }

  if (myItem_tab3 === "あやしいおこう" && wtype3 === "ゴースト") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[怪しいお香]";
  }

  if (myItem_tab3 === "あやしいおこう" && wtype4 === "ゴースト") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[怪しいお香]";
  }

  if (tekiItem1_tab3 === "あやしいおこう" && wtype1S1 === "ゴースト") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[怪しいお香]";
  }

  if (tekiItem1_tab3 === "あやしいおこう" && wtype2S1 === "ゴースト") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[怪しいお香]";
  }

  if (tekiItem1_tab3 === "あやしいおこう" && wtype3S1 === "ゴースト") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[怪しいお香]";
  }

  if (tekiItem1_tab3 === "あやしいおこう" && wtype4S1 === "ゴースト") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[怪しいお香]";
  }

  if (tekiItem2_tab3 === "あやしいおこう" && wtype1S2 === "ゴースト") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[怪しいお香]";
  }

  if (tekiItem2_tab3 === "あやしいおこう" && wtype2S2 === "ゴースト") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[怪しいお香]";
  }

  if (tekiItem2_tab3 === "あやしいおこう" && wtype3S2 === "ゴースト") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[怪しいお香]";
  }

  if (tekiItem2_tab3 === "あやしいおこう" && wtype4S2 === "ゴースト") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[怪しいお香]";
  }

  if (tekiItem3_tab3 === "あやしいおこう" && wtype1S3 === "ゴースト") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[怪しいお香]";
  }

  if (tekiItem3_tab3 === "あやしいおこう" && wtype2S3 === "ゴースト") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[怪しいお香]";
  }

  if (tekiItem3_tab3 === "あやしいおこう" && wtype3S3 === "ゴースト") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[怪しいお香]";
  }

  if (tekiItem3_tab3 === "あやしいおこう" && wtype4S3 === "ゴースト") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[怪しいお香]";
  }

  if (tekiItem4_tab3 === "あやしいおこう" && wtype1S4 === "ゴースト") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[怪しいお香]";
  }

  if (tekiItem4_tab3 === "あやしいおこう" && wtype2S4 === "ゴースト") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[怪しいお香]";
  }

  if (tekiItem4_tab3 === "あやしいおこう" && wtype3S4 === "ゴースト") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[怪しいお香]";
  }

  if (tekiItem4_tab3 === "あやしいおこう" && wtype4S4 === "ゴースト") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[怪しいお香]";
  }

  // うしおのおこう1.2
  if (myItem_tab3 === "うしおのおこう" && wtype1 === "みず") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[潮のお香]";
  }

  if (myItem_tab3 === "うしおのおこう" && wtype2 === "みず") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[潮のお香]";
  }

  if (myItem_tab3 === "うしおのおこう" && wtype3 === "みず") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[潮のお香]";
  }

  if (myItem_tab3 === "うしおのおこう" && wtype4 === "みず") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[潮のお香]";
  }

  if (tekiItem1_tab3 === "うしおのおこう" && wtype1S1 === "みず") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[潮のお香]";
  }

  if (tekiItem1_tab3 === "うしおのおこう" && wtype2S1 === "みず") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[潮のお香]";
  }

  if (tekiItem1_tab3 === "うしおのおこう" && wtype3S1 === "みず") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[潮のお香]";
  }

  if (tekiItem1_tab3 === "うしおのおこう" && wtype4S1 === "みず") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[潮のお香]";
  }

  if (tekiItem2_tab3 === "うしおのおこう" && wtype1S2 === "みず") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[潮のお香]";
  }

  if (tekiItem2_tab3 === "うしおのおこう" && wtype2S2 === "みず") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[潮のお香]";
  }

  if (tekiItem2_tab3 === "うしおのおこう" && wtype3S2 === "みず") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[潮のお香]";
  }

  if (tekiItem2_tab3 === "うしおのおこう" && wtype4S2 === "みず") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[潮のお香]";
  }

  if (tekiItem3_tab3 === "うしおのおこう" && wtype1S3 === "みず") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[潮のお香]";
  }

  if (tekiItem3_tab3 === "うしおのおこう" && wtype2S3 === "みず") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[潮のお香]";
  }

  if (tekiItem3_tab3 === "うしおのおこう" && wtype3S3 === "みず") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[潮のお香]";
  }

  if (tekiItem3_tab3 === "うしおのおこう" && wtype4S3 === "みず") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[潮のお香]";
  }

  if (tekiItem4_tab3 === "うしおのおこう" && wtype1S4 === "みず") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[潮のお香]";
  }

  if (tekiItem4_tab3 === "うしおのおこう" && wtype2S4 === "みず") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[潮のお香]";
  }

  if (tekiItem4_tab3 === "うしおのおこう" && wtype3S4 === "みず") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[潮のお香]";
  }

  if (tekiItem4_tab3 === "うしおのおこう" && wtype4S4 === "みず") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[潮のお香]";
  }

  // おはなのおこう1.2
  if (myItem_tab3 === "おはなのおこう" && wtype1 === "くさ") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[お花のお香]";
  }

  if (myItem_tab3 === "おはなのおこう" && wtype2 === "くさ") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[お花のお香]";
  }

  if (myItem_tab3 === "おはなのおこう" && wtype3 === "くさ") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[お花のお香]";
  }

  if (myItem_tab3 === "おはなのおこう" && wtype4 === "くさ") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[お花のお香]";
  }

  if (tekiItem1_tab3 === "おはなのおこう" && wtype1S1 === "くさ") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[お花のお香]";
  }

  if (tekiItem1_tab3 === "おはなのおこう" && wtype2S1 === "くさ") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[お花のお香]";
  }

  if (tekiItem1_tab3 === "おはなのおこう" && wtype3S1 === "くさ") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[お花のお香]";
  }

  if (tekiItem1_tab3 === "おはなのおこう" && wtype4S1 === "くさ") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[お花のお香]";
  }

  if (tekiItem2_tab3 === "おはなのおこう" && wtype1S2 === "くさ") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[お花のお香]";
  }

  if (tekiItem2_tab3 === "おはなのおこう" && wtype2S2 === "くさ") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[お花のお香]";
  }

  if (tekiItem2_tab3 === "おはなのおこう" && wtype3S2 === "くさ") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[お花のお香]";
  }

  if (tekiItem2_tab3 === "おはなのおこう" && wtype4S2 === "くさ") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[お花のお香]";
  }

  if (tekiItem3_tab3 === "おはなのおこう" && wtype1S3 === "くさ") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[お花のお香]";
  }

  if (tekiItem3_tab3 === "おはなのおこう" && wtype2S3 === "くさ") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[お花のお香]";
  }

  if (tekiItem3_tab3 === "おはなのおこう" && wtype3S3 === "くさ") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[お花のお香]";
  }

  if (tekiItem3_tab3 === "おはなのおこう" && wtype4S3 === "くさ") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[お花のお香]";
  }

  if (tekiItem4_tab3 === "おはなのおこう" && wtype1S4 === "くさ") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[お花のお香]";
  }

  if (tekiItem4_tab3 === "おはなのおこう" && wtype2S4 === "くさ") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[お花のお香]";
  }

  if (tekiItem4_tab3 === "おはなのおこう" && wtype3S4 === "くさ") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[お花のお香]";
  }

  if (tekiItem4_tab3 === "おはなのおこう" && wtype4S4 === "くさ") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[お花のお香]";
  }

  // かたいいし1.2
  if (myItem_tab3 === "かたいいし" && wtype1 === "いわ") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[硬い石]";
  }

  if (myItem_tab3 === "かたいいし" && wtype2 === "いわ") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[硬い石]";
  }

  if (myItem_tab3 === "かたいいし" && wtype3 === "いわ") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[硬い石]";
  }

  if (myItem_tab3 === "かたいいし" && wtype4 === "いわ") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[硬い石]";
  }

  if (tekiItem1_tab3 === "かたいいし" && wtype1S1 === "いわ") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[硬い石]";
  }

  if (tekiItem1_tab3 === "かたいいし" && wtype2S1 === "いわ") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[硬い石]";
  }

  if (tekiItem1_tab3 === "かたいいし" && wtype3S1 === "いわ") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[硬い石]";
  }

  if (tekiItem1_tab3 === "かたいいし" && wtype4S1 === "いわ") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[硬い石]";
  }

  if (tekiItem2_tab3 === "かたいいし" && wtype1S2 === "いわ") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[硬い石]";
  }

  if (tekiItem2_tab3 === "かたいいし" && wtype2S2 === "いわ") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[硬い石]";
  }

  if (tekiItem2_tab3 === "かたいいし" && wtype3S2 === "いわ") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[硬い石]";
  }

  if (tekiItem2_tab3 === "かたいいし" && wtype4S2 === "いわ") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[硬い石]";
  }

  if (tekiItem3_tab3 === "かたいいし" && wtype1S3 === "いわ") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[硬い石]";
  }

  if (tekiItem3_tab3 === "かたいいし" && wtype2S3 === "いわ") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[硬い石]";
  }

  if (tekiItem3_tab3 === "かたいいし" && wtype3S3 === "いわ") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[硬い石]";
  }

  if (tekiItem3_tab3 === "かたいいし" && wtype4S3 === "いわ") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[硬い石]";
  }

  if (tekiItem4_tab3 === "かたいいし" && wtype1S4 === "いわ") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[硬い石]";
  }

  if (tekiItem4_tab3 === "かたいいし" && wtype2S4 === "いわ") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[硬い石]";
  }

  if (tekiItem4_tab3 === "かたいいし" && wtype3S4 === "いわ") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[硬い石]";
  }

  if (tekiItem4_tab3 === "かたいいし" && wtype4S4 === "いわ") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[硬い石]";
  }

  // がんせきおこう1.2
  if (myItem_tab3 === "がんせきおこう" && wtype1 === "いわ") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[岩石お香]";
  }

  if (myItem_tab3 === "がんせきおこう" && wtype2 === "いわ") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[岩石お香]";
  }

  if (myItem_tab3 === "がんせきおこう" && wtype3 === "いわ") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[岩石お香]";
  }

  if (myItem_tab3 === "がんせきおこう" && wtype4 === "いわ") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[岩石お香]";
  }

  if (tekiItem1_tab3 === "がんせきおこう" && wtype1S1 === "いわ") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[岩石お香]";
  }

  if (tekiItem1_tab3 === "がんせきおこう" && wtype2S1 === "いわ") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[岩石お香]";
  }

  if (tekiItem1_tab3 === "がんせきおこう" && wtype3S1 === "いわ") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[岩石お香]";
  }

  if (tekiItem1_tab3 === "がんせきおこう" && wtype4S1 === "いわ") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[岩石お香]";
  }

  if (tekiItem2_tab3 === "がんせきおこう" && wtype1S2 === "いわ") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[岩石お香]";
  }

  if (tekiItem2_tab3 === "がんせきおこう" && wtype2S2 === "いわ") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[岩石お香]";
  }

  if (tekiItem2_tab3 === "がんせきおこう" && wtype3S2 === "いわ") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[岩石お香]";
  }

  if (tekiItem2_tab3 === "がんせきおこう" && wtype4S2 === "いわ") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[岩石お香]";
  }

  if (tekiItem3_tab3 === "がんせきおこう" && wtype1S3 === "いわ") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[岩石お香]";
  }

  if (tekiItem3_tab3 === "がんせきおこう" && wtype2S3 === "いわ") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[岩石お香]";
  }

  if (tekiItem3_tab3 === "がんせきおこう" && wtype3S3 === "いわ") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[岩石お香]";
  }

  if (tekiItem3_tab3 === "がんせきおこう" && wtype4S3 === "いわ") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[岩石お香]";
  }

  if (tekiItem4_tab3 === "がんせきおこう" && wtype1S4 === "いわ") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[岩石お香]";
  }

  if (tekiItem4_tab3 === "がんせきおこう" && wtype2S4 === "いわ") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[岩石お香]";
  }

  if (tekiItem4_tab3 === "がんせきおこう" && wtype3S4 === "いわ") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[岩石お香]";
  }

  if (tekiItem4_tab3 === "がんせきおこう" && wtype4S4 === "いわ") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[岩石お香]";
  }

  //! きせきのタネ1.2
  if (myItem_tab3 === "きせきのタネ" && wtype1 === "くさ") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[奇跡の種]";
  }

  if (myItem_tab3 === "きせきのタネ" && wtype2 === "くさ") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[奇跡の種]";
  }

  if (myItem_tab3 === "きせきのタネ" && wtype3 === "くさ") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[奇跡の種]";
  }

  if (myItem_tab3 === "きせきのタネ" && wtype4 === "くさ") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[奇跡の種]";
  }

  if (tekiItem1_tab3 === "きせきのタネ" && wtype1S1 === "くさ") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[奇跡の種]";
  }

  if (tekiItem1_tab3 === "きせきのタネ" && wtype2S1 === "くさ") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[奇跡の種]";
  }

  if (tekiItem1_tab3 === "きせきのタネ" && wtype3S1 === "くさ") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[奇跡の種]";
  }

  if (tekiItem1_tab3 === "きせきのタネ" && wtype4S1 === "くさ") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[奇跡の種]";
  }

  if (tekiItem2_tab3 === "きせきのタネ" && wtype1S2 === "くさ") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[奇跡の種]";
  }

  if (tekiItem2_tab3 === "きせきのタネ" && wtype2S2 === "くさ") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[奇跡の種]";
  }

  if (tekiItem2_tab3 === "きせきのタネ" && wtype3S2 === "くさ") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[奇跡の種]";
  }

  if (tekiItem2_tab3 === "きせきのタネ" && wtype4S2 === "くさ") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[奇跡の種]";
  }

  if (tekiItem3_tab3 === "きせきのタネ" && wtype1S3 === "くさ") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[奇跡の種]";
  }

  if (tekiItem3_tab3 === "きせきのタネ" && wtype2S3 === "くさ") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[奇跡の種]";
  }

  if (tekiItem3_tab3 === "きせきのタネ" && wtype3S3 === "くさ") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[奇跡の種]";
  }

  if (tekiItem3_tab3 === "きせきのタネ" && wtype4S3 === "くさ") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[奇跡の種]";
  }

  if (tekiItem4_tab3 === "きせきのタネ" && wtype1S4 === "くさ") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[奇跡の種]";
  }

  if (tekiItem4_tab3 === "きせきのタネ" && wtype2S4 === "くさ") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[奇跡の種]";
  }

  if (tekiItem4_tab3 === "きせきのタネ" && wtype3S4 === "くさ") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[奇跡の種]";
  }

  if (tekiItem4_tab3 === "きせきのタネ" && wtype4S4 === "くさ") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[奇跡の種]";
  }

  //! ぎんのこな1.2
  if (myItem_tab3 === "ぎんのこな" && wtype1 === "むし") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[銀の粉]";
  }

  if (myItem_tab3 === "ぎんのこな" && wtype2 === "むし") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[銀の粉]";
  }

  if (myItem_tab3 === "ぎんのこな" && wtype3 === "むし") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[銀の粉]";
  }

  if (myItem_tab3 === "ぎんのこな" && wtype4 === "むし") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[銀の粉]";
  }

  if (tekiItem1_tab3 === "ぎんのこな" && wtype1S1 === "むし") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[銀の粉]";
  }

  if (tekiItem1_tab3 === "ぎんのこな" && wtype2S1 === "むし") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[銀の粉]";
  }

  if (tekiItem1_tab3 === "ぎんのこな" && wtype3S1 === "むし") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[銀の粉]";
  }

  if (tekiItem1_tab3 === "ぎんのこな" && wtype4S1 === "むし") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[銀の粉]";
  }

  if (tekiItem2_tab3 === "ぎんのこな" && wtype1S2 === "むし") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[銀の粉]";
  }

  if (tekiItem2_tab3 === "ぎんのこな" && wtype2S2 === "むし") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[銀の粉]";
  }

  if (tekiItem2_tab3 === "ぎんのこな" && wtype3S2 === "むし") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[銀の粉]";
  }

  if (tekiItem2_tab3 === "ぎんのこな" && wtype4S2 === "むし") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[銀の粉]";
  }

  if (tekiItem3_tab3 === "ぎんのこな" && wtype1S3 === "むし") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[銀の粉]";
  }

  if (tekiItem3_tab3 === "ぎんのこな" && wtype2S3 === "むし") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[銀の粉]";
  }

  if (tekiItem3_tab3 === "ぎんのこな" && wtype3S3 === "むし") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[銀の粉]";
  }

  if (tekiItem3_tab3 === "ぎんのこな" && wtype4S3 === "むし") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[銀の粉]";
  }

  if (tekiItem4_tab3 === "ぎんのこな" && wtype1S4 === "むし") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[銀の粉]";
  }

  if (tekiItem4_tab3 === "ぎんのこな" && wtype2S4 === "むし") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[銀の粉]";
  }

  if (tekiItem4_tab3 === "ぎんのこな" && wtype3S4 === "むし") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[銀の粉]";
  }

  if (tekiItem4_tab3 === "ぎんのこな" && wtype4S4 === "むし") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[銀の粉]";
  }

  //! くろいメガネ1.2
  if (myItem_tab3 === "くろいメガネ" && wtype1 === "あく") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[黒い眼鏡]";
  }

  if (myItem_tab3 === "くろいメガネ" && wtype2 === "あく") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[黒い眼鏡]";
  }

  if (myItem_tab3 === "くろいメガネ" && wtype3 === "あく") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[黒い眼鏡]";
  }

  if (myItem_tab3 === "くろいメガネ" && wtype4 === "あく") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[黒い眼鏡]";
  }

  if (tekiItem1_tab3 === "くろいメガネ" && wtype1S1 === "あく") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[黒い眼鏡]";
  }

  if (tekiItem1_tab3 === "くろいメガネ" && wtype2S1 === "あく") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[黒い眼鏡]";
  }

  if (tekiItem1_tab3 === "くろいメガネ" && wtype3S1 === "あく") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[黒い眼鏡]";
  }

  if (tekiItem1_tab3 === "くろいメガネ" && wtype4S1 === "あく") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[黒い眼鏡]";
  }

  if (tekiItem2_tab3 === "くろいメガネ" && wtype1S2 === "あく") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[黒い眼鏡]";
  }

  if (tekiItem2_tab3 === "くろいメガネ" && wtype2S2 === "あく") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[黒い眼鏡]";
  }

  if (tekiItem2_tab3 === "くろいメガネ" && wtype3S2 === "あく") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[黒い眼鏡]";
  }

  if (tekiItem2_tab3 === "くろいメガネ" && wtype4S2 === "あく") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[黒い眼鏡]";
  }

  if (tekiItem3_tab3 === "くろいメガネ" && wtype1S3 === "あく") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[黒い眼鏡]";
  }

  if (tekiItem3_tab3 === "くろいメガネ" && wtype2S3 === "あく") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[黒い眼鏡]";
  }

  if (tekiItem3_tab3 === "くろいメガネ" && wtype3S3 === "あく") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[黒い眼鏡]";
  }

  if (tekiItem3_tab3 === "くろいメガネ" && wtype4S3 === "あく") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[黒い眼鏡]";
  }

  if (tekiItem4_tab3 === "くろいメガネ" && wtype1S4 === "あく") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[黒い眼鏡]";
  }

  if (tekiItem4_tab3 === "くろいメガネ" && wtype2S4 === "あく") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[黒い眼鏡]";
  }

  if (tekiItem4_tab3 === "くろいメガネ" && wtype3S4 === "あく") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[黒い眼鏡]";
  }

  if (tekiItem4_tab3 === "くろいメガネ" && wtype4S4 === "あく") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[黒い眼鏡]";
  }

  //! くろおび1.2
  if (myItem_tab3 === "くろおび" && wtype1 === "かくとう") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[黒帯]";
  }

  if (myItem_tab3 === "くろおび" && wtype2 === "かくとう") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[黒帯]";
  }

  if (myItem_tab3 === "くろおび" && wtype3 === "かくとう") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[黒帯]";
  }

  if (myItem_tab3 === "くろおび" && wtype4 === "かくとう") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[黒帯]";
  }

  if (tekiItem1_tab3 === "くろおび" && wtype1S1 === "かくとう") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[黒帯]";
  }

  if (tekiItem1_tab3 === "くろおび" && wtype2S1 === "かくとう") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[黒帯]";
  }

  if (tekiItem1_tab3 === "くろおび" && wtype3S1 === "かくとう") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[黒帯]";
  }

  if (tekiItem1_tab3 === "くろおび" && wtype4S1 === "かくとう") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[黒帯]";
  }

  if (tekiItem2_tab3 === "くろおび" && wtype1S2 === "かくとう") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[黒帯]";
  }

  if (tekiItem2_tab3 === "くろおび" && wtype2S2 === "かくとう") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[黒帯]";
  }

  if (tekiItem2_tab3 === "くろおび" && wtype3S2 === "かくとう") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[黒帯]";
  }

  if (tekiItem2_tab3 === "くろおび" && wtype4S2 === "かくとう") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[黒帯]";
  }

  if (tekiItem3_tab3 === "くろおび" && wtype1S3 === "かくとう") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[黒帯]";
  }

  if (tekiItem3_tab3 === "くろおび" && wtype2S3 === "かくとう") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[黒帯]";
  }

  if (tekiItem3_tab3 === "くろおび" && wtype3S3 === "かくとう") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[黒帯]";
  }

  if (tekiItem3_tab3 === "くろおび" && wtype4S3 === "かくとう") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[黒帯]";
  }

  if (tekiItem4_tab3 === "くろおび" && wtype1S4 === "かくとう") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[黒帯]";
  }

  if (tekiItem4_tab3 === "くろおび" && wtype2S4 === "かくとう") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[黒帯]";
  }

  if (tekiItem4_tab3 === "くろおび" && wtype3S4 === "かくとう") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[黒帯]";
  }

  if (tekiItem4_tab3 === "くろおび" && wtype4S4 === "かくとう") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[黒帯]";
  }

  //! さざなみのおこう1.2
  if (myItem_tab3 === "さざなみのおこう" && wtype1 === "みず") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[さざなみのお香]";
  }

  if (myItem_tab3 === "さざなみのおこう" && wtype2 === "みず") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[さざなみのお香]";
  }

  if (myItem_tab3 === "さざなみのおこう" && wtype3 === "みず") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[さざなみのお香]";
  }

  if (myItem_tab3 === "さざなみのおこう" && wtype4 === "みず") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[さざなみのお香]";
  }

  if (tekiItem1_tab3 === "さざなみのおこう" && wtype1S1 === "みず") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[さざなみのお香]";
  }

  if (tekiItem1_tab3 === "さざなみのおこう" && wtype2S1 === "みず") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[さざなみのお香]";
  }

  if (tekiItem1_tab3 === "さざなみのおこう" && wtype3S1 === "みず") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[さざなみのお香]";
  }

  if (tekiItem1_tab3 === "さざなみのおこう" && wtype4S1 === "みず") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[さざなみのお香]";
  }

  if (tekiItem2_tab3 === "さざなみのおこう" && wtype1S2 === "みず") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[さざなみのお香]";
  }

  if (tekiItem2_tab3 === "さざなみのおこう" && wtype2S2 === "みず") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[さざなみのお香]";
  }

  if (tekiItem2_tab3 === "さざなみのおこう" && wtype3S2 === "みず") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[さざなみのお香]";
  }

  if (tekiItem2_tab3 === "さざなみのおこう" && wtype4S2 === "みず") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[さざなみのお香]";
  }

  if (tekiItem3_tab3 === "さざなみのおこう" && wtype1S3 === "みず") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[さざなみのお香]";
  }

  if (tekiItem3_tab3 === "さざなみのおこう" && wtype2S3 === "みず") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[さざなみのお香]";
  }

  if (tekiItem3_tab3 === "さざなみのおこう" && wtype3S3 === "みず") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[さざなみのお香]";
  }

  if (tekiItem3_tab3 === "さざなみのおこう" && wtype4S3 === "みず") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[さざなみのお香]";
  }

  if (tekiItem4_tab3 === "さざなみのおこう" && wtype1S4 === "みず") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[さざなみのお香]";
  }

  if (tekiItem4_tab3 === "さざなみのおこう" && wtype2S4 === "みず") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[さざなみのお香]";
  }

  if (tekiItem4_tab3 === "さざなみのおこう" && wtype3S4 === "みず") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[さざなみのお香]";
  }

  if (tekiItem4_tab3 === "さざなみのおこう" && wtype4S4 === "みず") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[さざなみのお香]";
  }

  //! じしゃく1.2
  if (myItem_tab3 === "じしゃく" && wtype1 === "でんき") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[磁石]";
  }

  if (myItem_tab3 === "じしゃく" && wtype2 === "でんき") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[磁石]";
  }

  if (myItem_tab3 === "じしゃく" && wtype3 === "でんき") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[磁石]";
  }

  if (myItem_tab3 === "じしゃく" && wtype4 === "でんき") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[磁石]";
  }

  if (tekiItem1_tab3 === "じしゃく" && wtype1S1 === "でんき") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[磁石]";
  }

  if (tekiItem1_tab3 === "じしゃく" && wtype2S1 === "でんき") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[磁石]";
  }

  if (tekiItem1_tab3 === "じしゃく" && wtype3S1 === "でんき") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[磁石]";
  }

  if (tekiItem1_tab3 === "じしゃく" && wtype4S1 === "でんき") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[磁石]";
  }

  if (tekiItem2_tab3 === "じしゃく" && wtype1S2 === "でんき") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[磁石]";
  }

  if (tekiItem2_tab3 === "じしゃく" && wtype2S2 === "でんき") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[磁石]";
  }

  if (tekiItem2_tab3 === "じしゃく" && wtype3S2 === "でんき") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[磁石]";
  }

  if (tekiItem2_tab3 === "じしゃく" && wtype4S2 === "でんき") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[磁石]";
  }

  if (tekiItem3_tab3 === "じしゃく" && wtype1S3 === "でんき") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[磁石]";
  }

  if (tekiItem3_tab3 === "じしゃく" && wtype2S3 === "でんき") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[磁石]";
  }

  if (tekiItem3_tab3 === "じしゃく" && wtype3S3 === "でんき") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[磁石]";
  }

  if (tekiItem3_tab3 === "じしゃく" && wtype4S3 === "でんき") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[磁石]";
  }

  if (tekiItem4_tab3 === "じしゃく" && wtype1S4 === "でんき") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[磁石]";
  }

  if (tekiItem4_tab3 === "じしゃく" && wtype2S4 === "でんき") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[磁石]";
  }

  if (tekiItem4_tab3 === "じしゃく" && wtype3S4 === "でんき") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[磁石]";
  }

  if (tekiItem4_tab3 === "じしゃく" && wtype4S4 === "でんき") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[磁石]";
  }

  //! シルクのスカーフ1.2
  if (myItem_tab3 === "シルクのスカーフ" && wtype1 === "ノーマル") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[シルク]";
  }

  if (myItem_tab3 === "シルクのスカーフ" && wtype2 === "ノーマル") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[シルク]";
  }

  if (myItem_tab3 === "シルクのスカーフ" && wtype3 === "ノーマル") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[シルク]";
  }

  if (myItem_tab3 === "シルクのスカーフ" && wtype4 === "ノーマル") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[シルク]";
  }

  if (tekiItem1_tab3 === "シルクのスカーフ" && wtype1S1 === "ノーマル") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[シルク]";
  }

  if (tekiItem1_tab3 === "シルクのスカーフ" && wtype2S1 === "ノーマル") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[シルク]";
  }

  if (tekiItem1_tab3 === "シルクのスカーフ" && wtype3S1 === "ノーマル") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[シルク]";
  }

  if (tekiItem1_tab3 === "シルクのスカーフ" && wtype4S1 === "ノーマル") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[シルク]";
  }

  if (tekiItem2_tab3 === "シルクのスカーフ" && wtype1S2 === "ノーマル") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[シルク]";
  }

  if (tekiItem2_tab3 === "シルクのスカーフ" && wtype2S2 === "ノーマル") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[シルク]";
  }

  if (tekiItem2_tab3 === "シルクのスカーフ" && wtype3S2 === "ノーマル") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[シルク]";
  }

  if (tekiItem2_tab3 === "シルクのスカーフ" && wtype4S2 === "ノーマル") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[シルク]";
  }

  if (tekiItem3_tab3 === "シルクのスカーフ" && wtype1S3 === "ノーマル") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[シルク]";
  }

  if (tekiItem3_tab3 === "シルクのスカーフ" && wtype2S3 === "ノーマル") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[シルク]";
  }

  if (tekiItem3_tab3 === "シルクのスカーフ" && wtype3S3 === "ノーマル") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[シルク]";
  }

  if (tekiItem3_tab3 === "シルクのスカーフ" && wtype4S3 === "ノーマル") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[シルク]";
  }

  if (tekiItem4_tab3 === "シルクのスカーフ" && wtype1S4 === "ノーマル") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[シルク]";
  }

  if (tekiItem4_tab3 === "シルクのスカーフ" && wtype2S4 === "ノーマル") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[シルク]";
  }

  if (tekiItem4_tab3 === "シルクのスカーフ" && wtype3S4 === "ノーマル") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[シルク]";
  }

  if (tekiItem4_tab3 === "シルクのスカーフ" && wtype4S4 === "ノーマル") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[シルク]";
  }
  //! しんぴのしずく1.2
  if (myItem_tab3 === "しんぴのしずく" && wtype1 === "みず") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[神秘の雫]";
  }

  if (myItem_tab3 === "しんぴのしずく" && wtype2 === "みず") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[神秘の雫]";
  }

  if (myItem_tab3 === "しんぴのしずく" && wtype3 === "みず") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[神秘の雫]";
  }

  if (myItem_tab3 === "しんぴのしずく" && wtype4 === "みず") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[神秘の雫]";
  }

  if (tekiItem1_tab3 === "しんぴのしずく" && wtype1S1 === "みず") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[神秘の雫]";
  }

  if (tekiItem1_tab3 === "しんぴのしずく" && wtype2S1 === "みず") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[神秘の雫]";
  }

  if (tekiItem1_tab3 === "しんぴのしずく" && wtype3S1 === "みず") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[神秘の雫]";
  }

  if (tekiItem1_tab3 === "しんぴのしずく" && wtype4S1 === "みず") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[神秘の雫]";
  }

  if (tekiItem2_tab3 === "しんぴのしずく" && wtype1S2 === "みず") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[神秘の雫]";
  }

  if (tekiItem2_tab3 === "しんぴのしずく" && wtype2S2 === "みず") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[神秘の雫]";
  }

  if (tekiItem2_tab3 === "しんぴのしずく" && wtype3S2 === "みず") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[神秘の雫]";
  }

  if (tekiItem2_tab3 === "しんぴのしずく" && wtype4S2 === "みず") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[神秘の雫]";
  }

  if (tekiItem3_tab3 === "しんぴのしずく" && wtype1S3 === "みず") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[神秘の雫]";
  }

  if (tekiItem3_tab3 === "しんぴのしずく" && wtype2S3 === "みず") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[神秘の雫]";
  }

  if (tekiItem3_tab3 === "しんぴのしずく" && wtype3S3 === "みず") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[神秘の雫]";
  }

  if (tekiItem3_tab3 === "しんぴのしずく" && wtype4S3 === "みず") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[神秘の雫]";
  }

  if (tekiItem4_tab3 === "しんぴのしずく" && wtype1S4 === "みず") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[神秘の雫]";
  }

  if (tekiItem4_tab3 === "しんぴのしずく" && wtype2S4 === "みず") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[神秘の雫]";
  }

  if (tekiItem4_tab3 === "しんぴのしずく" && wtype3S4 === "みず") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[神秘の雫]";
  }

  if (tekiItem4_tab3 === "しんぴのしずく" && wtype4S4 === "みず") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[神秘の雫]";
  }
  //! するどいくちばし1.2
  if (myItem_tab3 === "するどいくちばし" && wtype1 === "ひこう") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[鋭い嘴]";
  }

  if (myItem_tab3 === "するどいくちばし" && wtype2 === "ひこう") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[鋭い嘴]";
  }

  if (myItem_tab3 === "するどいくちばし" && wtype3 === "ひこう") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[鋭い嘴]";
  }

  if (myItem_tab3 === "するどいくちばし" && wtype4 === "ひこう") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[鋭い嘴]";
  }

  if (tekiItem1_tab3 === "するどいくちばし" && wtype1S1 === "ひこう") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[鋭い嘴]";
  }

  if (tekiItem1_tab3 === "するどいくちばし" && wtype2S1 === "ひこう") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[鋭い嘴]";
  }

  if (tekiItem1_tab3 === "するどいくちばし" && wtype3S1 === "ひこう") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[鋭い嘴]";
  }

  if (tekiItem1_tab3 === "するどいくちばし" && wtype4S1 === "ひこう") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[鋭い嘴]";
  }

  if (tekiItem2_tab3 === "するどいくちばし" && wtype1S2 === "ひこう") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[鋭い嘴]";
  }

  if (tekiItem2_tab3 === "するどいくちばし" && wtype2S2 === "ひこう") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[鋭い嘴]";
  }

  if (tekiItem2_tab3 === "するどいくちばし" && wtype3S2 === "ひこう") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[鋭い嘴]";
  }

  if (tekiItem2_tab3 === "するどいくちばし" && wtype4S2 === "ひこう") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[鋭い嘴]";
  }

  if (tekiItem3_tab3 === "するどいくちばし" && wtype1S3 === "ひこう") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[鋭い嘴]";
  }

  if (tekiItem3_tab3 === "するどいくちばし" && wtype2S3 === "ひこう") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[鋭い嘴]";
  }

  if (tekiItem3_tab3 === "するどいくちばし" && wtype3S3 === "ひこう") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[鋭い嘴]";
  }

  if (tekiItem3_tab3 === "するどいくちばし" && wtype4S3 === "ひこう") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[鋭い嘴]";
  }

  if (tekiItem4_tab3 === "するどいくちばし" && wtype1S4 === "ひこう") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[鋭い嘴]";
  }

  if (tekiItem4_tab3 === "するどいくちばし" && wtype2S4 === "ひこう") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[鋭い嘴]";
  }

  if (tekiItem4_tab3 === "するどいくちばし" && wtype3S4 === "ひこう") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[鋭い嘴]";
  }

  if (tekiItem4_tab3 === "するどいくちばし" && wtype4S4 === "ひこう") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[鋭い嘴]";
  }

  //! どくバリ1.2
  if (myItem_tab3 === "どくバリ" && wtype1 === "どく") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[毒針]";
  }

  if (myItem_tab3 === "どくバリ" && wtype2 === "どく") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[毒針]";
  }

  if (myItem_tab3 === "どくバリ" && wtype3 === "どく") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[毒針]";
  }

  if (myItem_tab3 === "どくバリ" && wtype4 === "どく") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[毒針]";
  }

  if (tekiItem1_tab3 === "どくバリ" && wtype1S1 === "どく") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[毒針]";
  }

  if (tekiItem1_tab3 === "どくバリ" && wtype2S1 === "どく") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[毒針]";
  }

  if (tekiItem1_tab3 === "どくバリ" && wtype3S1 === "どく") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[毒針]";
  }

  if (tekiItem1_tab3 === "どくバリ" && wtype4S1 === "どく") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[毒針]";
  }

  if (tekiItem2_tab3 === "どくバリ" && wtype1S2 === "どく") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[毒針]";
  }

  if (tekiItem2_tab3 === "どくバリ" && wtype2S2 === "どく") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[毒針]";
  }

  if (tekiItem2_tab3 === "どくバリ" && wtype3S2 === "どく") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[毒針]";
  }

  if (tekiItem2_tab3 === "どくバリ" && wtype4S2 === "どく") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[毒針]";
  }

  if (tekiItem3_tab3 === "どくバリ" && wtype1S3 === "どく") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[毒針]";
  }

  if (tekiItem3_tab3 === "どくバリ" && wtype2S3 === "どく") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[毒針]";
  }

  if (tekiItem3_tab3 === "どくバリ" && wtype3S3 === "どく") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[毒針]";
  }

  if (tekiItem3_tab3 === "どくバリ" && wtype4S3 === "どく") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[毒針]";
  }

  if (tekiItem4_tab3 === "どくバリ" && wtype1S4 === "どく") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[毒針]";
  }

  if (tekiItem4_tab3 === "どくバリ" && wtype2S4 === "どく") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[毒針]";
  }

  if (tekiItem4_tab3 === "どくバリ" && wtype3S4 === "どく") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[毒針]";
  }

  if (tekiItem4_tab3 === "どくバリ" && wtype4S4 === "どく") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[毒針]";
  }

  //! とけないこおり1.2
  if (myItem_tab3 === "とけないこおり" && wtype1 === "こおり") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[溶けない氷]";
  }

  if (myItem_tab3 === "とけないこおり" && wtype2 === "こおり") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[溶けない氷]";
  }

  if (myItem_tab3 === "とけないこおり" && wtype3 === "こおり") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[溶けない氷]";
  }

  if (myItem_tab3 === "とけないこおり" && wtype4 === "こおり") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[溶けない氷]";
  }

  if (tekiItem1_tab3 === "とけないこおり" && wtype1S1 === "こおり") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[溶けない氷]";
  }

  if (tekiItem1_tab3 === "とけないこおり" && wtype2S1 === "こおり") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[溶けない氷]";
  }

  if (tekiItem1_tab3 === "とけないこおり" && wtype3S1 === "こおり") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[溶けない氷]";
  }

  if (tekiItem1_tab3 === "とけないこおり" && wtype4S1 === "こおり") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[溶けない氷]";
  }

  if (tekiItem2_tab3 === "とけないこおり" && wtype1S2 === "こおり") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[溶けない氷]";
  }

  if (tekiItem2_tab3 === "とけないこおり" && wtype2S2 === "こおり") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[溶けない氷]";
  }

  if (tekiItem2_tab3 === "とけないこおり" && wtype3S2 === "こおり") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[溶けない氷]";
  }

  if (tekiItem2_tab3 === "とけないこおり" && wtype4S2 === "こおり") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[溶けない氷]";
  }

  if (tekiItem3_tab3 === "とけないこおり" && wtype1S3 === "こおり") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[溶けない氷]";
  }

  if (tekiItem3_tab3 === "とけないこおり" && wtype2S3 === "こおり") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[溶けない氷]";
  }

  if (tekiItem3_tab3 === "とけないこおり" && wtype3S3 === "こおり") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[溶けない氷]";
  }

  if (tekiItem3_tab3 === "とけないこおり" && wtype4S3 === "こおり") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[溶けない氷]";
  }

  if (tekiItem4_tab3 === "とけないこおり" && wtype1S4 === "こおり") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[溶けない氷]";
  }

  if (tekiItem4_tab3 === "とけないこおり" && wtype2S4 === "こおり") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[溶けない氷]";
  }

  if (tekiItem4_tab3 === "とけないこおり" && wtype3S4 === "こおり") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[溶けない氷]";
  }

  if (tekiItem4_tab3 === "とけないこおり" && wtype4S4 === "こおり") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[溶けない氷]";
  }

  //! のろいのおふだ1.2
  if (myItem_tab3 === "のろいのおふだ" && wtype1 === "ゴースト") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[呪いのお札]";
  }

  if (myItem_tab3 === "のろいのおふだ" && wtype2 === "ゴースト") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[呪いのお札]";
  }

  if (myItem_tab3 === "のろいのおふだ" && wtype3 === "ゴースト") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[呪いのお札]";
  }

  if (myItem_tab3 === "のろいのおふだ" && wtype4 === "ゴースト") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[呪いのお札]";
  }

  if (tekiItem1_tab3 === "のろいのおふだ" && wtype1S1 === "ゴースト") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[呪いのお札]";
  }

  if (tekiItem1_tab3 === "のろいのおふだ" && wtype2S1 === "ゴースト") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[呪いのお札]";
  }

  if (tekiItem1_tab3 === "のろいのおふだ" && wtype3S1 === "ゴースト") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[呪いのお札]";
  }

  if (tekiItem1_tab3 === "のろいのおふだ" && wtype4S1 === "ゴースト") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[呪いのお札]";
  }

  if (tekiItem2_tab3 === "のろいのおふだ" && wtype1S2 === "ゴースト") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[呪いのお札]";
  }

  if (tekiItem2_tab3 === "のろいのおふだ" && wtype2S2 === "ゴースト") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[呪いのお札]";
  }

  if (tekiItem2_tab3 === "のろいのおふだ" && wtype3S2 === "ゴースト") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[呪いのお札]";
  }

  if (tekiItem2_tab3 === "のろいのおふだ" && wtype4S2 === "ゴースト") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[呪いのお札]";
  }

  if (tekiItem3_tab3 === "のろいのおふだ" && wtype1S3 === "ゴースト") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[呪いのお札]";
  }

  if (tekiItem3_tab3 === "のろいのおふだ" && wtype2S3 === "ゴースト") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[呪いのお札]";
  }

  if (tekiItem3_tab3 === "のろいのおふだ" && wtype3S3 === "ゴースト") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[呪いのお札]";
  }

  if (tekiItem3_tab3 === "のろいのおふだ" && wtype4S3 === "ゴースト") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[呪いのお札]";
  }

  if (tekiItem4_tab3 === "のろいのおふだ" && wtype1S4 === "ゴースト") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[呪いのお札]";
  }

  if (tekiItem4_tab3 === "のろいのおふだ" && wtype2S4 === "ゴースト") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[呪いのお札]";
  }

  if (tekiItem4_tab3 === "のろいのおふだ" && wtype3S4 === "ゴースト") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[呪いのお札]";
  }

  if (tekiItem4_tab3 === "のろいのおふだ" && wtype4S4 === "ゴースト") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[呪いのお札]";
  }

  //! まがったスプーン1.2
  if (myItem_tab3 === "まがったスプーン" && wtype1 === "エスパー") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[曲がったスプーン]";
  }

  if (myItem_tab3 === "まがったスプーン" && wtype2 === "エスパー") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[曲がったスプーン]";
  }

  if (myItem_tab3 === "まがったスプーン" && wtype3 === "エスパー") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[曲がったスプーン]";
  }

  if (myItem_tab3 === "まがったスプーン" && wtype4 === "エスパー") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[曲がったスプーン]";
  }

  if (tekiItem1_tab3 === "まがったスプーン" && wtype1S1 === "エスパー") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[曲がったスプーン]";
  }

  if (tekiItem1_tab3 === "まがったスプーン" && wtype2S1 === "エスパー") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[曲がったスプーン]";
  }

  if (tekiItem1_tab3 === "まがったスプーン" && wtype3S1 === "エスパー") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[曲がったスプーン]";
  }

  if (tekiItem1_tab3 === "まがったスプーン" && wtype4S1 === "エスパー") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[曲がったスプーン]";
  }

  if (tekiItem2_tab3 === "まがったスプーン" && wtype1S2 === "エスパー") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[曲がったスプーン]";
  }

  if (tekiItem2_tab3 === "まがったスプーン" && wtype2S2 === "エスパー") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[曲がったスプーン]";
  }

  if (tekiItem2_tab3 === "まがったスプーン" && wtype3S2 === "エスパー") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[曲がったスプーン]";
  }

  if (tekiItem2_tab3 === "まがったスプーン" && wtype4S2 === "エスパー") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[曲がったスプーン]";
  }

  if (tekiItem3_tab3 === "まがったスプーン" && wtype1S3 === "エスパー") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[曲がったスプーン]";
  }

  if (tekiItem3_tab3 === "まがったスプーン" && wtype2S3 === "エスパー") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[曲がったスプーン]";
  }

  if (tekiItem3_tab3 === "まがったスプーン" && wtype3S3 === "エスパー") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[曲がったスプーン]";
  }

  if (tekiItem3_tab3 === "まがったスプーン" && wtype4S3 === "エスパー") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[曲がったスプーン]";
  }

  if (tekiItem4_tab3 === "まがったスプーン" && wtype1S4 === "エスパー") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[曲がったスプーン]";
  }

  if (tekiItem4_tab3 === "まがったスプーン" && wtype2S4 === "エスパー") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[曲がったスプーン]";
  }

  if (tekiItem4_tab3 === "まがったスプーン" && wtype3S4 === "エスパー") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[曲がったスプーン]";
  }

  if (tekiItem4_tab3 === "まがったスプーン" && wtype4S4 === "エスパー") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[曲がったスプーン]";
  }

  //! メタルコート1.2
  if (myItem_tab3 === "メタルコート" && wtype1 === "はがね") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[メタルコート]";
  }

  if (myItem_tab3 === "メタルコート" && wtype2 === "はがね") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[メタルコート]";
  }

  if (myItem_tab3 === "メタルコート" && wtype3 === "はがね") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[メタルコート]";
  }

  if (myItem_tab3 === "メタルコート" && wtype4 === "はがね") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[メタルコート]";
  }

  if (tekiItem1_tab3 === "メタルコート" && wtype1S1 === "はがね") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[メタルコート]";
  }

  if (tekiItem1_tab3 === "メタルコート" && wtype2S1 === "はがね") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[メタルコート]";
  }

  if (tekiItem1_tab3 === "メタルコート" && wtype3S1 === "はがね") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[メタルコート]";
  }

  if (tekiItem1_tab3 === "メタルコート" && wtype4S1 === "はがね") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[メタルコート]";
  }

  if (tekiItem2_tab3 === "メタルコート" && wtype1S2 === "はがね") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[メタルコート]";
  }

  if (tekiItem2_tab3 === "メタルコート" && wtype2S2 === "はがね") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[メタルコート]";
  }

  if (tekiItem2_tab3 === "メタルコート" && wtype3S2 === "はがね") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[メタルコート]";
  }

  if (tekiItem2_tab3 === "メタルコート" && wtype4S2 === "はがね") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[メタルコート]";
  }

  if (tekiItem3_tab3 === "メタルコート" && wtype1S3 === "はがね") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[メタルコート]";
  }

  if (tekiItem3_tab3 === "メタルコート" && wtype2S3 === "はがね") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[メタルコート]";
  }

  if (tekiItem3_tab3 === "メタルコート" && wtype3S3 === "はがね") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[メタルコート]";
  }

  if (tekiItem3_tab3 === "メタルコート" && wtype4S3 === "はがね") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[メタルコート]";
  }

  if (tekiItem4_tab3 === "メタルコート" && wtype1S4 === "はがね") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[メタルコート]";
  }

  if (tekiItem4_tab3 === "メタルコート" && wtype2S4 === "はがね") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[メタルコート]";
  }

  if (tekiItem4_tab3 === "メタルコート" && wtype3S4 === "はがね") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[メタルコート]";
  }

  if (tekiItem4_tab3 === "メタルコート" && wtype4S4 === "はがね") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[メタルコート]";
  }

  //! もくたん1.2
  if (myItem_tab3 === "もくたん" && wtype1 === "ほのお") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[木炭]";
  }

  if (myItem_tab3 === "もくたん" && wtype2 === "ほのお") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[木炭]";
  }

  if (myItem_tab3 === "もくたん" && wtype3 === "ほのお") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[木炭]";
  }

  if (myItem_tab3 === "もくたん" && wtype4 === "ほのお") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[木炭]";
  }

  if (tekiItem1_tab3 === "もくたん" && wtype1S1 === "ほのお") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[木炭]";
  }

  if (tekiItem1_tab3 === "もくたん" && wtype2S1 === "ほのお") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[木炭]";
  }

  if (tekiItem1_tab3 === "もくたん" && wtype3S1 === "ほのお") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[木炭]";
  }

  if (tekiItem1_tab3 === "もくたん" && wtype4S1 === "ほのお") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[木炭]";
  }

  if (tekiItem2_tab3 === "もくたん" && wtype1S2 === "ほのお") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[木炭]";
  }

  if (tekiItem2_tab3 === "もくたん" && wtype2S2 === "ほのお") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[木炭]";
  }

  if (tekiItem2_tab3 === "もくたん" && wtype3S2 === "ほのお") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[木炭]";
  }

  if (tekiItem2_tab3 === "もくたん" && wtype4S2 === "ほのお") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[木炭]";
  }

  if (tekiItem3_tab3 === "もくたん" && wtype1S3 === "ほのお") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[木炭]";
  }

  if (tekiItem3_tab3 === "もくたん" && wtype2S3 === "ほのお") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[木炭]";
  }

  if (tekiItem3_tab3 === "もくたん" && wtype3S3 === "ほのお") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[木炭]";
  }

  if (tekiItem3_tab3 === "もくたん" && wtype4S3 === "ほのお") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[木炭]";
  }

  if (tekiItem4_tab3 === "もくたん" && wtype1S4 === "ほのお") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[木炭]";
  }

  if (tekiItem4_tab3 === "もくたん" && wtype2S4 === "ほのお") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[木炭]";
  }

  if (tekiItem4_tab3 === "もくたん" && wtype3S4 === "ほのお") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[木炭]";
  }

  if (tekiItem4_tab3 === "もくたん" && wtype4S4 === "ほのお") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[木炭]";
  }

  //! やわらかいすな1.2
  if (myItem_tab3 === "やわらかいすな" && wtype1 === "じめん") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[柔らかい砂]";
  }

  if (myItem_tab3 === "やわらかいすな" && wtype2 === "じめん") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[柔らかい砂]";
  }

  if (myItem_tab3 === "やわらかいすな" && wtype3 === "じめん") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[柔らかい砂]";
  }

  if (myItem_tab3 === "やわらかいすな" && wtype4 === "じめん") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[柔らかい砂]";
  }

  if (tekiItem1_tab3 === "やわらかいすな" && wtype1S1 === "じめん") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[柔らかい砂]";
  }

  if (tekiItem1_tab3 === "やわらかいすな" && wtype2S1 === "じめん") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[柔らかい砂]";
  }

  if (tekiItem1_tab3 === "やわらかいすな" && wtype3S1 === "じめん") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[柔らかい砂]";
  }

  if (tekiItem1_tab3 === "やわらかいすな" && wtype4S1 === "じめん") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[柔らかい砂]";
  }

  if (tekiItem2_tab3 === "やわらかいすな" && wtype1S2 === "じめん") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[柔らかい砂]";
  }

  if (tekiItem2_tab3 === "やわらかいすな" && wtype2S2 === "じめん") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[柔らかい砂]";
  }

  if (tekiItem2_tab3 === "やわらかいすな" && wtype3S2 === "じめん") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[柔らかい砂]";
  }

  if (tekiItem2_tab3 === "やわらかいすな" && wtype4S2 === "じめん") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[柔らかい砂]";
  }

  if (tekiItem3_tab3 === "やわらかいすな" && wtype1S3 === "じめん") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[柔らかい砂]";
  }

  if (tekiItem3_tab3 === "やわらかいすな" && wtype2S3 === "じめん") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[柔らかい砂]";
  }

  if (tekiItem3_tab3 === "やわらかいすな" && wtype3S3 === "じめん") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[柔らかい砂]";
  }

  if (tekiItem3_tab3 === "やわらかいすな" && wtype4S3 === "じめん") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[柔らかい砂]";
  }

  if (tekiItem4_tab3 === "やわらかいすな" && wtype1S4 === "じめん") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[柔らかい砂]";
  }

  if (tekiItem4_tab3 === "やわらかいすな" && wtype2S4 === "じめん") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[柔らかい砂]";
  }

  if (tekiItem4_tab3 === "やわらかいすな" && wtype3S4 === "じめん") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[柔らかい砂]";
  }

  if (tekiItem4_tab3 === "やわらかいすな" && wtype4S4 === "じめん") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[柔らかい砂]";
  }

  //! りゅうのキバ1.2
  if (myItem_tab3 === "りゅうのキバ" && wtype1 === "ドラゴン") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 120) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 120) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 120) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 120) / 100);
    power1 = Math.floor((power1 * 120) / 100);
    myIryokuDisplay1 = "[竜の牙]";
  }

  if (myItem_tab3 === "りゅうのキバ" && wtype2 === "ドラゴン") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 120) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 120) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 120) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 120) / 100);
    power2 = Math.floor((power2 * 120) / 100);
    myIryokuDisplay2 = "[竜の牙]";
  }

  if (myItem_tab3 === "りゅうのキバ" && wtype3 === "ドラゴン") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 120) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 120) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 120) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 120) / 100);
    power3 = Math.floor((power3 * 120) / 100);
    myIryokuDisplay3 = "[竜の牙]";
  }

  if (myItem_tab3 === "りゅうのキバ" && wtype4 === "ドラゴン") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 120) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 120) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 120) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 120) / 100);
    power4 = Math.floor((power4 * 120) / 100);
    myIryokuDisplay4 = "[竜の牙]";
  }

  if (tekiItem1_tab3 === "りゅうのキバ" && wtype1S1 === "ドラゴン") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 120) / 100);
    power1S1 = Math.floor((power1S1 * 120) / 100);
    teki1IryokuDisplay1 = "[竜の牙]";
  }

  if (tekiItem1_tab3 === "りゅうのキバ" && wtype2S1 === "ドラゴン") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 120) / 100);
    power2S1 = Math.floor((power2S1 * 120) / 100);
    teki1IryokuDisplay2 = "[竜の牙]";
  }

  if (tekiItem1_tab3 === "りゅうのキバ" && wtype3S1 === "ドラゴン") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 120) / 100);
    power3S1 = Math.floor((power3S1 * 120) / 100);
    teki1IryokuDisplay3 = "[竜の牙]";
  }

  if (tekiItem1_tab3 === "りゅうのキバ" && wtype4S1 === "ドラゴン") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 120) / 100);
    power4S1 = Math.floor((power4S1 * 120) / 100);
    teki1IryokuDisplay4 = "[竜の牙]";
  }

  if (tekiItem2_tab3 === "りゅうのキバ" && wtype1S2 === "ドラゴン") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 120) / 100);
    power1S2 = Math.floor((power1S2 * 120) / 100);
    teki2IryokuDisplay1 = "[竜の牙]";
  }

  if (tekiItem2_tab3 === "りゅうのキバ" && wtype2S2 === "ドラゴン") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 120) / 100);
    power2S2 = Math.floor((power2S2 * 120) / 100);
    teki2IryokuDisplay2 = "[竜の牙]";
  }

  if (tekiItem2_tab3 === "りゅうのキバ" && wtype3S2 === "ドラゴン") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 120) / 100);
    power3S2 = Math.floor((power3S2 * 120) / 100);
    teki2IryokuDisplay3 = "[竜の牙]";
  }

  if (tekiItem2_tab3 === "りゅうのキバ" && wtype4S2 === "ドラゴン") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 120) / 100);
    power4S2 = Math.floor((power4S2 * 120) / 100);
    teki2IryokuDisplay4 = "[竜の牙]";
  }

  if (tekiItem3_tab3 === "りゅうのキバ" && wtype1S3 === "ドラゴン") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 120) / 100);
    power1S3 = Math.floor((power1S3 * 120) / 100);
    teki3IryokuDisplay1 = "[竜の牙]";
  }

  if (tekiItem3_tab3 === "りゅうのキバ" && wtype2S3 === "ドラゴン") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 120) / 100);
    power2S3 = Math.floor((power2S3 * 120) / 100);
    teki3IryokuDisplay2 = "[竜の牙]";
  }

  if (tekiItem3_tab3 === "りゅうのキバ" && wtype3S3 === "ドラゴン") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 120) / 100);
    power3S3 = Math.floor((power3S3 * 120) / 100);
    teki3IryokuDisplay3 = "[竜の牙]";
  }

  if (tekiItem3_tab3 === "りゅうのキバ" && wtype4S3 === "ドラゴン") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 120) / 100);
    power4S3 = Math.floor((power4S3 * 120) / 100);
    teki3IryokuDisplay4 = "[竜の牙]";
  }

  if (tekiItem4_tab3 === "りゅうのキバ" && wtype1S4 === "ドラゴン") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 120) / 100);
    power1S4 = Math.floor((power1S4 * 120) / 100);
    teki4IryokuDisplay1 = "[竜の牙]";
  }

  if (tekiItem4_tab3 === "りゅうのキバ" && wtype2S4 === "ドラゴン") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 120) / 100);
    power2S4 = Math.floor((power2S4 * 120) / 100);
    teki4IryokuDisplay2 = "[竜の牙]";
  }

  if (tekiItem4_tab3 === "りゅうのキバ" && wtype3S4 === "ドラゴン") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 120) / 100);
    power3S4 = Math.floor((power3S4 * 120) / 100);
    teki4IryokuDisplay3 = "[竜の牙]";
  }

  if (tekiItem4_tab3 === "りゅうのキバ" && wtype4S4 === "ドラゴン") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 120) / 100);
    power4S4 = Math.floor((power4S4 * 120) / 100);
    teki4IryokuDisplay4 = "[竜の牙]";
  }

  //   使用者特性補正

  // 効果	補正値	発動条件など
  //! とうそうしん(同性)	1.25	対象が使用者と同じ性別なら威力が上がる。
  if (selectedAbility === "とうそうしん同") {
    myAbiIryokuDisplay1 = "[闘争心(同)]";
    myAbiIryokuDisplay2 = "[闘争心(同)]";
    myAbiIryokuDisplay3 = "[闘争心(同)]";
    myAbiIryokuDisplay4 = "[闘争心(同)]";
  }

  if (selectedTekiAbility === "とうそうしん同") {
    tekiAbiIryokuDisplayS1W1 = "[闘争心(同)]";
    tekiAbiIryokuDisplayS1W2 = "[闘争心(同)]";
    tekiAbiIryokuDisplayS1W3 = "[闘争心(同)]";
    tekiAbiIryokuDisplayS1W4 = "[闘争心(同)]";

    tekiAbiIryokuDisplayS2W1 = "[闘争心(同)]";
    tekiAbiIryokuDisplayS2W2 = "[闘争心(同)]";
    tekiAbiIryokuDisplayS2W3 = "[闘争心(同)]";
    tekiAbiIryokuDisplayS2W4 = "[闘争心(同)]";

    tekiAbiIryokuDisplayS3W1 = "[闘争心(同)]";
    tekiAbiIryokuDisplayS3W2 = "[闘争心(同)]";
    tekiAbiIryokuDisplayS3W3 = "[闘争心(同)]";
    tekiAbiIryokuDisplayS3W4 = "[闘争心(同)]";

    tekiAbiIryokuDisplayS4W1 = "[闘争心(同)]";
    tekiAbiIryokuDisplayS4W2 = "[闘争心(同)]";
    tekiAbiIryokuDisplayS4W3 = "[闘争心(同)]";
    tekiAbiIryokuDisplayS4W4 = "[闘争心(同)]";
  }

  if (selectedAbility === "とうそうしん同") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 125) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 125) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 125) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 125) / 100);
    power1 = Math.floor((power1 * 125) / 100);
  }

  if (selectedAbility === "とうそうしん同") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 125) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 125) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 125) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 125) / 100);
    power2 = Math.floor((power2 * 125) / 100);
  }

  if (selectedAbility === "とうそうしん同") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 125) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 125) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 125) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 125) / 100);
    power3 = Math.floor((power3 * 125) / 100);
  }

  if (selectedAbility === "とうそうしん同") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 125) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 125) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 125) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 125) / 100);
    power4 = Math.floor((power4 * 125) / 100);
  }

  if (selectedTekiAbility === "とうそうしん同") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 125) / 100);
    power1S1 = Math.floor((power1S1 * 125) / 100);
  }

  if (selectedTekiAbility === "とうそうしん同") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 125) / 100);
    power2S1 = Math.floor((power2S1 * 125) / 100);
  }

  if (selectedTekiAbility === "とうそうしん同") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 125) / 100);
    power3S1 = Math.floor((power3S1 * 125) / 100);
  }

  if (selectedTekiAbility === "とうそうしん同") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 125) / 100);
    power4S1 = Math.floor((power4S1 * 125) / 100);
  }

  if (selectedTekiAbility === "とうそうしん同") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 125) / 100);
    power1S2 = Math.floor((power1S2 * 125) / 100);
  }

  if (selectedTekiAbility === "とうそうしん同") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 125) / 100);
    power2S2 = Math.floor((power2S2 * 125) / 100);
  }

  if (selectedTekiAbility === "とうそうしん同") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 125) / 100);
    power3S2 = Math.floor((power3S2 * 125) / 100);
  }

  if (selectedTekiAbility === "とうそうしん同") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 125) / 100);
    power4S2 = Math.floor((power4S2 * 125) / 100);
  }

  if (selectedTekiAbility === "とうそうしん同") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 125) / 100);
    power1S3 = Math.floor((power1S3 * 125) / 100);
  }

  if (selectedTekiAbility === "とうそうしん同") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 125) / 100);
    power2S3 = Math.floor((power2S3 * 125) / 100);
  }

  if (selectedTekiAbility === "とうそうしん同") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 125) / 100);
    power3S3 = Math.floor((power3S3 * 125) / 100);
  }

  if (selectedTekiAbility === "とうそうしん同") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 125) / 100);
    power4S3 = Math.floor((power4S3 * 125) / 100);
  }

  if (selectedTekiAbility === "とうそうしん同") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 125) / 100);
    power1S4 = Math.floor((power1S4 * 125) / 100);
  }

  if (selectedTekiAbility === "とうそうしん同") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 125) / 100);
    power2S4 = Math.floor((power2S4 * 125) / 100);
  }

  if (selectedTekiAbility === "とうそうしん同") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 125) / 100);
    power3S4 = Math.floor((power3S4 * 125) / 100);
  }

  if (selectedTekiAbility === "とうそうしん同") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 125) / 100);
    power4S4 = Math.floor((power4S4 * 125) / 100);
  }

  //! とうそうしん(異性)	0.75	対象が使用者と異なる性別なら威力が下がる。

  if (selectedAbility === "とうそうしん異") {
    myAbiIryokuDisplay1 = "[闘争心(異)]";
    myAbiIryokuDisplay2 = "[闘争心(異)]";
    myAbiIryokuDisplay3 = "[闘争心(異)]";
    myAbiIryokuDisplay4 = "[闘争心(異)]";
  }

  if (selectedTekiAbility === "とうそうしん異") {
    tekiAbiIryokuDisplayS1W1 = "[闘争心(異)]";
    tekiAbiIryokuDisplayS1W2 = "[闘争心(異)]";
    tekiAbiIryokuDisplayS1W3 = "[闘争心(異)]";
    tekiAbiIryokuDisplayS1W4 = "[闘争心(異)]";

    tekiAbiIryokuDisplayS2W1 = "[闘争心(異)]";
    tekiAbiIryokuDisplayS2W2 = "[闘争心(異)]";
    tekiAbiIryokuDisplayS2W3 = "[闘争心(異)]";
    tekiAbiIryokuDisplayS2W4 = "[闘争心(異)]";

    tekiAbiIryokuDisplayS3W1 = "[闘争心(異)]";
    tekiAbiIryokuDisplayS3W2 = "[闘争心(異)]";
    tekiAbiIryokuDisplayS3W3 = "[闘争心(異)]";
    tekiAbiIryokuDisplayS3W4 = "[闘争心(異)]";

    tekiAbiIryokuDisplayS4W1 = "[闘争心(異)]";
    tekiAbiIryokuDisplayS4W2 = "[闘争心(異)]";
    tekiAbiIryokuDisplayS4W3 = "[闘争心(異)]";
    tekiAbiIryokuDisplayS4W4 = "[闘争心(異)]";
  }

  if (selectedAbility === "とうそうしん異") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 75) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 75) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 75) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 75) / 100);
    power1 = Math.floor((power1 * 75) / 100);
  }

  if (selectedAbility === "とうそうしん異") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 75) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 75) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 75) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 75) / 100);
    power2 = Math.floor((power2 * 75) / 100);
  }

  if (selectedAbility === "とうそうしん異") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 75) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 75) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 75) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 75) / 100);
    power3 = Math.floor((power3 * 75) / 100);
  }

  if (selectedAbility === "とうそうしん異") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 75) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 75) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 75) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 75) / 100);
    power4 = Math.floor((power4 * 75) / 100);
  }

  if (selectedTekiAbility === "とうそうしん異") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 75) / 100);
    power1S1 = Math.floor((power1S1 * 75) / 100);
  }

  if (selectedTekiAbility === "とうそうしん異") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 75) / 100);
    power2S1 = Math.floor((power2S1 * 75) / 100);
  }

  if (selectedTekiAbility === "とうそうしん異") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 75) / 100);
    power3S1 = Math.floor((power3S1 * 75) / 100);
  }

  if (selectedTekiAbility === "とうそうしん異") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 75) / 100);
    power4S1 = Math.floor((power4S1 * 75) / 100);
  }

  if (selectedTekiAbility === "とうそうしん異") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 75) / 100);
    power1S2 = Math.floor((power1S2 * 75) / 100);
  }

  if (selectedTekiAbility === "とうそうしん異") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 75) / 100);
    power2S2 = Math.floor((power2S2 * 75) / 100);
  }

  if (selectedTekiAbility === "とうそうしん異") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 75) / 100);
    power3S2 = Math.floor((power3S2 * 75) / 100);
  }

  if (selectedTekiAbility === "とうそうしん異") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 75) / 100);
    power4S2 = Math.floor((power4S2 * 75) / 100);
  }

  if (selectedTekiAbility === "とうそうしん異") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 75) / 100);
    power1S3 = Math.floor((power1S3 * 75) / 100);
  }

  if (selectedTekiAbility === "とうそうしん異") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 75) / 100);
    power2S3 = Math.floor((power2S3 * 75) / 100);
  }

  if (selectedTekiAbility === "とうそうしん異") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 75) / 100);
    power3S3 = Math.floor((power3S3 * 75) / 100);
  }

  if (selectedTekiAbility === "とうそうしん異") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 75) / 100);
    power4S3 = Math.floor((power4S3 * 75) / 100);
  }

  if (selectedTekiAbility === "とうそうしん異") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 75) / 100);
    power1S4 = Math.floor((power1S4 * 75) / 100);
  }

  if (selectedTekiAbility === "とうそうしん異") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 75) / 100);
    power2S4 = Math.floor((power2S4 * 75) / 100);
  }

  if (selectedTekiAbility === "とうそうしん異") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 75) / 100);
    power3S4 = Math.floor((power3S4 * 75) / 100);
  }

  if (selectedTekiAbility === "とうそうしん異") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 75) / 100);
    power4S4 = Math.floor((power4S4 * 75) / 100);
  }

  // もうか・しんりょく・げきりゅう・むしのしらせ
  //もうか

  if (selectedAbility === "もうか" && wtype1 === "ほのお") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 150) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 150) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 150) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 150) / 100);
    power1 = Math.floor((power1 * 150) / 100);
    myAbiIryokuDisplay1 = "[猛火]";
  }

  if (selectedAbility === "もうか" && wtype2 === "ほのお") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 150) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 150) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 150) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 150) / 100);
    power2 = Math.floor((power2 * 150) / 100);
    myAbiIryokuDisplay2 = "[猛火]";
  }

  if (selectedAbility === "もうか" && wtype3 === "ほのお") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 150) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 150) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 150) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 150) / 100);
    power3 = Math.floor((power3 * 150) / 100);
    myAbiIryokuDisplay3 = "[猛火]";
  }

  if (selectedAbility === "もうか" && wtype4 === "ほのお") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 150) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 150) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 150) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 150) / 100);
    power4 = Math.floor((power4 * 150) / 100);
    myAbiIryokuDisplay4 = "[猛火]";
  }

  if (selectedTekiAbility === "もうか" && wtype1S1 === "ほのお") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 150) / 100);
    power1S1 = Math.floor((power1S1 * 150) / 100);
    tekiAbiIryokuDisplayS1W1 = "[猛火]";
  }

  if (selectedTekiAbility === "もうか" && wtype2S1 === "ほのお") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 150) / 100);
    power2S1 = Math.floor((power2S1 * 150) / 100);
    tekiAbiIryokuDisplayS1W2 = "[猛火]";
  }

  if (selectedTekiAbility === "もうか" && wtype3S1 === "ほのお") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 150) / 100);
    power3S1 = Math.floor((power3S1 * 150) / 100);
    tekiAbiIryokuDisplayS1W3 = "[猛火]";
  }

  if (selectedTekiAbility === "もうか" && wtype4S1 === "ほのお") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 150) / 100);
    power4S1 = Math.floor((power4S1 * 150) / 100);
    tekiAbiIryokuDisplayS1W4 = "[猛火]";
  }

  if (selectedTekiAbility === "もうか" && wtype1S2 === "ほのお") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 150) / 100);
    power1S2 = Math.floor((power1S2 * 150) / 100);
    tekiAbiIryokuDisplayS2W1 = "[猛火]";
  }

  if (selectedTekiAbility === "もうか" && wtype2S2 === "ほのお") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 150) / 100);
    power2S2 = Math.floor((power2S2 * 150) / 100);
    tekiAbiIryokuDisplayS2W2 = "[猛火]";
  }

  if (selectedTekiAbility === "もうか" && wtype3S2 === "ほのお") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 150) / 100);
    power3S2 = Math.floor((power3S2 * 150) / 100);
    tekiAbiIryokuDisplayS2W3 = "[猛火]";
  }

  if (selectedTekiAbility === "もうか" && wtype4S2 === "ほのお") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 150) / 100);
    power4S2 = Math.floor((power4S2 * 150) / 100);
    tekiAbiIryokuDisplayS2W4 = "[猛火]";
  }

  if (selectedTekiAbility === "もうか" && wtype1S3 === "ほのお") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 150) / 100);
    power1S3 = Math.floor((power1S3 * 150) / 100);
    tekiAbiIryokuDisplayS3W1 = "[猛火]";
  }

  if (selectedTekiAbility === "もうか" && wtype2S3 === "ほのお") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 150) / 100);
    power2S3 = Math.floor((power2S3 * 150) / 100);
    tekiAbiIryokuDisplayS3W2 = "[猛火]";
  }

  if (selectedTekiAbility === "もうか" && wtype3S3 === "ほのお") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 150) / 100);
    power3S3 = Math.floor((power3S3 * 150) / 100);
    tekiAbiIryokuDisplayS3W3 = "[猛火]";
  }

  if (selectedTekiAbility === "もうか" && wtype4S3 === "ほのお") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 150) / 100);
    power4S3 = Math.floor((power4S3 * 150) / 100);
    tekiAbiIryokuDisplayS3W4 = "[猛火]";
  }

  if (selectedTekiAbility === "もうか" && wtype1S4 === "ほのお") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 150) / 100);
    power1S4 = Math.floor((power1S4 * 150) / 100);
    tekiAbiIryokuDisplayS4W1 = "[猛火]";
  }

  if (selectedTekiAbility === "もうか" && wtype2S4 === "ほのお") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 150) / 100);
    power2S4 = Math.floor((power2S4 * 150) / 100);
    tekiAbiIryokuDisplayS4W2 = "[猛火]";
  }

  if (selectedTekiAbility === "もうか" && wtype3S4 === "ほのお") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 150) / 100);
    power3S4 = Math.floor((power3S4 * 150) / 100);
    tekiAbiIryokuDisplayS4W3 = "[猛火]";
  }

  if (selectedTekiAbility === "もうか" && wtype4S4 === "ほのお") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 150) / 100);
    power4S4 = Math.floor((power4S4 * 150) / 100);
    tekiAbiIryokuDisplayS4W4 = "[猛火]";
  }

  //しんりょく
  if (selectedAbility === "しんりょく" && wtype1 === "くさ") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 150) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 150) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 150) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 150) / 100);
    power1 = Math.floor((power1 * 150) / 100);
    myAbiIryokuDisplay1 = "[深緑]";
  }

  if (selectedAbility === "しんりょく" && wtype2 === "くさ") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 150) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 150) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 150) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 150) / 100);
    power2 = Math.floor((power2 * 150) / 100);
    myAbiIryokuDisplay2 = "[深緑]";
  }

  if (selectedAbility === "しんりょく" && wtype3 === "くさ") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 150) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 150) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 150) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 150) / 100);
    power3 = Math.floor((power3 * 150) / 100);
    myAbiIryokuDisplay3 = "[深緑]";
  }

  if (selectedAbility === "しんりょく" && wtype4 === "くさ") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 150) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 150) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 150) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 150) / 100);
    power4 = Math.floor((power4 * 150) / 100);
    myAbiIryokuDisplay4 = "[深緑]";
  }

  if (selectedTekiAbility === "しんりょく" && wtype1S1 === "くさ") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 150) / 100);
    power1S1 = Math.floor((power1S1 * 150) / 100);
    tekiAbiIryokuDisplayS1W1 = "[深緑]";
  }

  if (selectedTekiAbility === "しんりょく" && wtype2S1 === "くさ") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 150) / 100);
    power2S1 = Math.floor((power2S1 * 150) / 100);
    tekiAbiIryokuDisplayS1W2 = "[深緑]";
  }

  if (selectedTekiAbility === "しんりょく" && wtype3S1 === "くさ") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 150) / 100);
    power3S1 = Math.floor((power3S1 * 150) / 100);
    tekiAbiIryokuDisplayS1W3 = "[深緑]";
  }

  if (selectedTekiAbility === "しんりょく" && wtype4S1 === "くさ") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 150) / 100);
    power4S1 = Math.floor((power4S1 * 150) / 100);
    tekiAbiIryokuDisplayS1W4 = "[深緑]";
  }

  if (selectedTekiAbility === "しんりょく" && wtype1S2 === "くさ") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 150) / 100);
    power1S2 = Math.floor((power1S2 * 150) / 100);
    tekiAbiIryokuDisplayS2W1 = "[深緑]";
  }

  if (selectedTekiAbility === "しんりょく" && wtype2S2 === "くさ") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 150) / 100);
    power2S2 = Math.floor((power2S2 * 150) / 100);
    tekiAbiIryokuDisplayS2W2 = "[深緑]";
  }

  if (selectedTekiAbility === "しんりょく" && wtype3S2 === "くさ") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 150) / 100);
    power3S2 = Math.floor((power3S2 * 150) / 100);
    tekiAbiIryokuDisplayS2W3 = "[深緑]";
  }

  if (selectedTekiAbility === "しんりょく" && wtype4S2 === "くさ") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 150) / 100);
    power4S2 = Math.floor((power4S2 * 150) / 100);
    tekiAbiIryokuDisplayS2W4 = "[深緑]";
  }

  if (selectedTekiAbility === "しんりょく" && wtype1S3 === "くさ") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 150) / 100);
    power1S3 = Math.floor((power1S3 * 150) / 100);
    tekiAbiIryokuDisplayS3W1 = "[深緑]";
  }

  if (selectedTekiAbility === "しんりょく" && wtype2S3 === "くさ") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 150) / 100);
    power2S3 = Math.floor((power2S3 * 150) / 100);
    tekiAbiIryokuDisplayS3W2 = "[深緑]";
  }

  if (selectedTekiAbility === "しんりょく" && wtype3S3 === "くさ") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 150) / 100);
    power3S3 = Math.floor((power3S3 * 150) / 100);
    tekiAbiIryokuDisplayS3W3 = "[深緑]";
  }

  if (selectedTekiAbility === "しんりょく" && wtype4S3 === "くさ") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 150) / 100);
    power4S3 = Math.floor((power4S3 * 150) / 100);
    tekiAbiIryokuDisplayS3W4 = "[深緑]";
  }

  if (selectedTekiAbility === "しんりょく" && wtype1S4 === "くさ") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 150) / 100);
    power1S4 = Math.floor((power1S4 * 150) / 100);
    tekiAbiIryokuDisplayS4W1 = "[深緑]";
  }

  if (selectedTekiAbility === "しんりょく" && wtype2S4 === "くさ") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 150) / 100);
    power2S4 = Math.floor((power2S4 * 150) / 100);
    tekiAbiIryokuDisplayS4W2 = "[深緑]";
  }

  if (selectedTekiAbility === "しんりょく" && wtype3S4 === "くさ") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 150) / 100);
    power3S4 = Math.floor((power3S4 * 150) / 100);
    tekiAbiIryokuDisplayS4W3 = "[深緑]";
  }

  if (selectedTekiAbility === "しんりょく" && wtype4S4 === "くさ") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 150) / 100);
    power4S4 = Math.floor((power4S4 * 150) / 100);
    tekiAbiIryokuDisplayS4W4 = "[深緑]";
  }

  //げきりゅう
  if (selectedAbility === "げきりゅう" && wtype1 === "みず") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 150) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 150) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 150) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 150) / 100);
    power1 = Math.floor((power1 * 150) / 100);
    myAbiIryokuDisplay1 = "[激流]";
  }

  if (selectedAbility === "げきりゅう" && wtype2 === "みず") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 150) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 150) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 150) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 150) / 100);
    power2 = Math.floor((power2 * 150) / 100);
    myAbiIryokuDisplay2 = "[激流]";
  }

  if (selectedAbility === "げきりゅう" && wtype3 === "みず") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 150) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 150) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 150) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 150) / 100);
    power3 = Math.floor((power3 * 150) / 100);
    myAbiIryokuDisplay3 = "[激流]";
  }

  if (selectedAbility === "げきりゅう" && wtype4 === "みず") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 150) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 150) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 150) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 150) / 100);
    power4 = Math.floor((power4 * 150) / 100);
    myAbiIryokuDisplay4 = "[激流]";
  }

  if (selectedTekiAbility === "げきりゅう" && wtype1S1 === "みず") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 150) / 100);
    power1S1 = Math.floor((power1S1 * 150) / 100);
    tekiAbiIryokuDisplayS1W1 = "[激流]";
  }

  if (selectedTekiAbility === "げきりゅう" && wtype2S1 === "みず") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 150) / 100);
    power2S1 = Math.floor((power2S1 * 150) / 100);
    tekiAbiIryokuDisplayS1W2 = "[激流]";
  }

  if (selectedTekiAbility === "げきりゅう" && wtype3S1 === "みず") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 150) / 100);
    power3S1 = Math.floor((power3S1 * 150) / 100);
    tekiAbiIryokuDisplayS1W3 = "[激流]";
  }

  if (selectedTekiAbility === "げきりゅう" && wtype4S1 === "みず") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 150) / 100);
    power4S1 = Math.floor((power4S1 * 150) / 100);
    tekiAbiIryokuDisplayS1W4 = "[激流]";
  }

  if (selectedTekiAbility === "げきりゅう" && wtype1S2 === "みず") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 150) / 100);
    power1S2 = Math.floor((power1S2 * 150) / 100);
    tekiAbiIryokuDisplayS2W1 = "[激流]";
  }

  if (selectedTekiAbility === "げきりゅう" && wtype2S2 === "みず") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 150) / 100);
    power2S2 = Math.floor((power2S2 * 150) / 100);
    tekiAbiIryokuDisplayS2W2 = "[激流]";
  }

  if (selectedTekiAbility === "げきりゅう" && wtype3S2 === "みず") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 150) / 100);
    power3S2 = Math.floor((power3S2 * 150) / 100);
    tekiAbiIryokuDisplayS2W3 = "[激流]";
  }

  if (selectedTekiAbility === "げきりゅう" && wtype4S2 === "みず") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 150) / 100);
    power4S2 = Math.floor((power4S2 * 150) / 100);
    tekiAbiIryokuDisplayS2W4 = "[激流]";
  }

  if (selectedTekiAbility === "げきりゅう" && wtype1S3 === "みず") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 150) / 100);
    power1S3 = Math.floor((power1S3 * 150) / 100);
    tekiAbiIryokuDisplayS3W1 = "[激流]";
  }

  if (selectedTekiAbility === "げきりゅう" && wtype2S3 === "みず") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 150) / 100);
    power2S3 = Math.floor((power2S3 * 150) / 100);
    tekiAbiIryokuDisplayS3W2 = "[激流]";
  }

  if (selectedTekiAbility === "げきりゅう" && wtype3S3 === "みず") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 150) / 100);
    power3S3 = Math.floor((power3S3 * 150) / 100);
    tekiAbiIryokuDisplayS3W3 = "[激流]";
  }

  if (selectedTekiAbility === "げきりゅう" && wtype4S3 === "みず") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 150) / 100);
    power4S3 = Math.floor((power4S3 * 150) / 100);
    tekiAbiIryokuDisplayS3W4 = "[激流]";
  }

  if (selectedTekiAbility === "げきりゅう" && wtype1S4 === "みず") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 150) / 100);
    power1S4 = Math.floor((power1S4 * 150) / 100);
    tekiAbiIryokuDisplayS4W1 = "[激流]";
  }

  if (selectedTekiAbility === "げきりゅう" && wtype2S4 === "みず") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 150) / 100);
    power2S4 = Math.floor((power2S4 * 150) / 100);
    tekiAbiIryokuDisplayS4W2 = "[激流]";
  }

  if (selectedTekiAbility === "げきりゅう" && wtype3S4 === "みず") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 150) / 100);
    power3S4 = Math.floor((power3S4 * 150) / 100);
    tekiAbiIryokuDisplayS4W3 = "[激流]";
  }

  if (selectedTekiAbility === "げきりゅう" && wtype4S4 === "みず") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 150) / 100);
    power4S4 = Math.floor((power4S4 * 150) / 100);
    tekiAbiIryokuDisplayS4W4 = "[激流]";
  }

  //むしのしらせ
  if (selectedAbility === "むしのしらせ" && wtype1 === "むし") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 150) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 150) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 150) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 150) / 100);
    power1 = Math.floor((power1 * 150) / 100);
    myAbiIryokuDisplay1 = "[虫の知らせ]";
  }

  if (selectedAbility === "むしのしらせ" && wtype2 === "むし") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 150) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 150) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 150) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 150) / 100);
    power2 = Math.floor((power2 * 150) / 100);
    myAbiIryokuDisplay2 = "[虫の知らせ]";
  }

  if (selectedAbility === "むしのしらせ" && wtype3 === "むし") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 150) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 150) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 150) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 150) / 100);
    power3 = Math.floor((power3 * 150) / 100);
    myAbiIryokuDisplay3 = "[虫の知らせ]";
  }

  if (selectedAbility === "むしのしらせ" && wtype4 === "むし") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 150) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 150) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 150) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 150) / 100);
    power4 = Math.floor((power4 * 150) / 100);
    myAbiIryokuDisplay4 = "[虫の知らせ]";
  }

  if (selectedTekiAbility === "むしのしらせ" && wtype1S1 === "むし") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 150) / 100);
    power1S1 = Math.floor((power1S1 * 150) / 100);
    tekiAbiIryokuDisplayS1W1 = "[虫の知らせ]";
  }

  if (selectedTekiAbility === "むしのしらせ" && wtype2S1 === "むし") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 150) / 100);
    power2S1 = Math.floor((power2S1 * 150) / 100);
    tekiAbiIryokuDisplayS1W2 = "[虫の知らせ]";
  }

  if (selectedTekiAbility === "むしのしらせ" && wtype3S1 === "むし") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 150) / 100);
    power3S1 = Math.floor((power3S1 * 150) / 100);
    tekiAbiIryokuDisplayS1W3 = "[虫の知らせ]";
  }

  if (selectedTekiAbility === "むしのしらせ" && wtype4S1 === "むし") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 150) / 100);
    power4S1 = Math.floor((power4S1 * 150) / 100);
    tekiAbiIryokuDisplayS1W4 = "[虫の知らせ]";
  }

  if (selectedTekiAbility === "むしのしらせ" && wtype1S2 === "むし") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 150) / 100);
    power1S2 = Math.floor((power1S2 * 150) / 100);
    tekiAbiIryokuDisplayS2W1 = "[虫の知らせ]";
  }

  if (selectedTekiAbility === "むしのしらせ" && wtype2S2 === "むし") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 150) / 100);
    power2S2 = Math.floor((power2S2 * 150) / 100);
    tekiAbiIryokuDisplayS2W2 = "[虫の知らせ]";
  }

  if (selectedTekiAbility === "むしのしらせ" && wtype3S2 === "むし") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 150) / 100);
    power3S2 = Math.floor((power3S2 * 150) / 100);
    tekiAbiIryokuDisplayS2W3 = "[虫の知らせ]";
  }

  if (selectedTekiAbility === "むしのしらせ" && wtype4S2 === "むし") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 150) / 100);
    power4S2 = Math.floor((power4S2 * 150) / 100);
    tekiAbiIryokuDisplayS2W4 = "[虫の知らせ]";
  }

  if (selectedTekiAbility === "むしのしらせ" && wtype1S3 === "むし") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 150) / 100);
    power1S3 = Math.floor((power1S3 * 150) / 100);
    tekiAbiIryokuDisplayS3W1 = "[虫の知らせ]";
  }

  if (selectedTekiAbility === "むしのしらせ" && wtype2S3 === "むし") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 150) / 100);
    power2S3 = Math.floor((power2S3 * 150) / 100);
    tekiAbiIryokuDisplayS3W2 = "[虫の知らせ]";
  }

  if (selectedTekiAbility === "むしのしらせ" && wtype3S3 === "むし") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 150) / 100);
    power3S3 = Math.floor((power3S3 * 150) / 100);
    tekiAbiIryokuDisplayS3W3 = "[虫の知らせ]";
  }

  if (selectedTekiAbility === "むしのしらせ" && wtype4S3 === "むし") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 150) / 100);
    power4S3 = Math.floor((power4S3 * 150) / 100);
    tekiAbiIryokuDisplayS3W4 = "[虫の知らせ]";
  }

  if (selectedTekiAbility === "むしのしらせ" && wtype1S4 === "むし") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 150) / 100);
    power1S4 = Math.floor((power1S4 * 150) / 100);
    tekiAbiIryokuDisplayS4W1 = "[虫の知らせ]";
  }

  if (selectedTekiAbility === "むしのしらせ" && wtype2S4 === "むし") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 150) / 100);
    power2S4 = Math.floor((power2S4 * 150) / 100);
    tekiAbiIryokuDisplayS4W2 = "[虫の知らせ]";
  }

  if (selectedTekiAbility === "むしのしらせ" && wtype3S4 === "むし") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 150) / 100);
    power3S4 = Math.floor((power3S4 * 150) / 100);
    tekiAbiIryokuDisplayS4W3 = "[虫の知らせ]";
  }

  if (selectedTekiAbility === "むしのしらせ" && wtype4S4 === "むし") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 150) / 100);
    power4S4 = Math.floor((power4S4 * 150) / 100);
    tekiAbiIryokuDisplayS4W4 = "[虫の知らせ]";
  }

  //   対象者特性補正
  //自分特性取得
  // const selectedAbility = myAbilitySelect.value;
  //敵特性取得
  // const selectedTekiAbility = tekiAbilitySelect.value;

  // 効果	補正値	発動条件など
  //! とうそうしん(同性)	1.25	対象が使用者と同じ性別なら威力が上がる。

  // 敵の特性が威力減少系だった場合
  let tekiAbiIryokuGENDisplay1 = "";
  let tekiAbiIryokuGENDisplay2 = "";
  let tekiAbiIryokuGENDisplay3 = "";
  let tekiAbiIryokuGENDisplay4 = "";
  // 敵1の攻撃を自分の特性で威力減らすケース
  let myAbiIryokuGENDisplayS1W1 = "";
  let myAbiIryokuGENDisplayS1W2 = "";
  let myAbiIryokuGENDisplayS1W3 = "";
  let myAbiIryokuGENDisplayS1W4 = "";
  // 敵2の攻撃を自分の特性で威力減らすケース
  let myAbiIryokuGENDisplayS2W1 = "";
  let myAbiIryokuGENDisplayS2W2 = "";
  let myAbiIryokuGENDisplayS2W3 = "";
  let myAbiIryokuGENDisplayS2W4 = "";
  // 敵3の攻撃を自分の特性で威力減らすケース
  let myAbiIryokuGENDisplayS3W1 = "";
  let myAbiIryokuGENDisplayS3W2 = "";
  let myAbiIryokuGENDisplayS3W3 = "";
  let myAbiIryokuGENDisplayS3W4 = "";
  // 敵4の攻撃を自分の特性で威力減らすケース
  let myAbiIryokuGENDisplayS4W1 = "";
  let myAbiIryokuGENDisplayS4W2 = "";
  let myAbiIryokuGENDisplayS4W3 = "";
  let myAbiIryokuGENDisplayS4W4 = "";

  //! あついしぼう	0.5	ほのお・こおりタイプの技を受けるとき威力が下がる。
  if (
    (selectedTekiAbility === "あついしぼう" && wtype1 === "こおり") ||
    (selectedTekiAbility === "あついしぼう" && wtype1 === "ほのお")
  ) {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 50) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 50) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 50) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 50) / 100);
    power1 = Math.floor((power1 * 50) / 100);
    tekiAbiIryokuGENDisplay1 = "[厚い脂肪]";
  }

  if (
    (selectedTekiAbility === "あついしぼう" && wtype2 === "こおり") ||
    (selectedTekiAbility === "あついしぼう" && wtype2 === "ほのお")
  ) {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 50) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 50) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 50) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 50) / 100);
    power2 = Math.floor((power2 * 50) / 100);
    tekiAbiIryokuGENDisplay2 = "[厚い脂肪]";
  }

  if (
    (selectedTekiAbility === "あついしぼう" && wtype3 === "こおり") ||
    (selectedTekiAbility === "あついしぼう" && wtype3 === "ほのお")
  ) {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 50) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 50) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 50) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 50) / 100);
    power3 = Math.floor((power3 * 50) / 100);
    tekiAbiIryokuGENDisplay3 = "[厚い脂肪]";
  }

  if (
    (selectedTekiAbility === "あついしぼう" && wtype4 === "こおり") ||
    (selectedTekiAbility === "あついしぼう" && wtype4 === "ほのお")
  ) {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 50) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 50) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 50) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 50) / 100);
    power4 = Math.floor((power4 * 50) / 100);
    tekiAbiIryokuGENDisplay4 = "[厚い脂肪]";
  }

  if (
    (selectedAbility === "あついしぼう" && wtype1S1 === "こおり") ||
    (selectedAbility === "あついしぼう" && wtype1S1 === "ほのお")
  ) {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 50) / 100);
    power1S1 = Math.floor((power1S1 * 50) / 100);
    myAbiIryokuGENDisplayS1W1 = "[厚い脂肪]";
  }

  if (
    (selectedAbility === "あついしぼう" && wtype2S1 === "こおり") ||
    (selectedAbility === "あついしぼう" && wtype2S1 === "ほのお")
  ) {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 50) / 100);
    power2S1 = Math.floor((power2S1 * 50) / 100);
    myAbiIryokuGENDisplayS1W2 = "[厚い脂肪]";
  }

  if (
    (selectedAbility === "あついしぼう" && wtype3S1 === "こおり") ||
    (selectedAbility === "あついしぼう" && wtype3S1 === "ほのお")
  ) {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 50) / 100);
    power3S1 = Math.floor((power3S1 * 50) / 100);
    myAbiIryokuGENDisplayS1W3 = "[厚い脂肪]";
  }

  if (
    (selectedAbility === "あついしぼう" && wtype4S1 === "こおり") ||
    (selectedAbility === "あついしぼう" && wtype4S1 === "ほのお")
  ) {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 50) / 100);
    power4S1 = Math.floor((power4S1 * 50) / 100);
    myAbiIryokuGENDisplayS1W4 = "[厚い脂肪]";
  }

  if (
    (selectedAbility === "あついしぼう" && wtype1S2 === "こおり") ||
    (selectedAbility === "あついしぼう" && wtype1S2 === "ほのお")
  ) {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 50) / 100);
    power1S2 = Math.floor((power1S2 * 50) / 100);
    myAbiIryokuGENDisplayS2W1 = "[厚い脂肪]";
  }

  if (
    (selectedAbility === "あついしぼう" && wtype2S2 === "こおり") ||
    (selectedAbility === "あついしぼう" && wtype2S2 === "ほのお")
  ) {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 50) / 100);
    power2S2 = Math.floor((power2S2 * 50) / 100);
    myAbiIryokuGENDisplayS2W2 = "[厚い脂肪]";
  }

  if (
    (selectedAbility === "あついしぼう" && wtype3S2 === "こおり") ||
    (selectedAbility === "あついしぼう" && wtype3S2 === "ほのお")
  ) {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 50) / 100);
    power3S2 = Math.floor((power3S2 * 50) / 100);
    myAbiIryokuGENDisplayS2W3 = "[厚い脂肪]";
  }

  if (
    (selectedAbility === "あついしぼう" && wtype4S2 === "こおり") ||
    (selectedAbility === "あついしぼう" && wtype4S2 === "ほのお")
  ) {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 50) / 100);
    power4S2 = Math.floor((power4S2 * 50) / 100);
    myAbiIryokuGENDisplayS2W4 = "[厚い脂肪]";
  }

  if (
    (selectedAbility === "あついしぼう" && wtype1S3 === "こおり") ||
    (selectedAbility === "あついしぼう" && wtype1S3 === "ほのお")
  ) {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 50) / 100);
    power1S3 = Math.floor((power1S3 * 50) / 100);
    myAbiIryokuGENDisplayS3W1 = "[厚い脂肪]";
  }

  if (
    (selectedAbility === "あついしぼう" && wtype2S3 === "こおり") ||
    (selectedAbility === "あついしぼう" && wtype2S3 === "ほのお")
  ) {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 50) / 100);
    power2S3 = Math.floor((power2S3 * 50) / 100);
    myAbiIryokuGENDisplayS3W2 = "[厚い脂肪]";
  }

  if (
    (selectedAbility === "あついしぼう" && wtype3S3 === "こおり") ||
    (selectedAbility === "あついしぼう" && wtype3S3 === "ほのお")
  ) {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 50) / 100);
    power3S3 = Math.floor((power3S3 * 50) / 100);
    myAbiIryokuGENDisplayS3W3 = "[厚い脂肪]";
  }

  if (
    (selectedAbility === "あついしぼう" && wtype4S3 === "こおり") ||
    (selectedAbility === "あついしぼう" && wtype4S3 === "ほのお")
  ) {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 50) / 100);
    power4S3 = Math.floor((power4S3 * 50) / 100);
    myAbiIryokuGENDisplayS3W4 = "[厚い脂肪]";
  }

  if (
    (selectedAbility === "あついしぼう" && wtype1S4 === "こおり") ||
    (selectedAbility === "あついしぼう" && wtype1S4 === "ほのお")
  ) {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 50) / 100);
    power1S4 = Math.floor((power1S4 * 50) / 100);
    myAbiIryokuGENDisplayS4W1 = "[厚い脂肪]";
  }

  if (
    (selectedAbility === "あついしぼう" && wtype2S4 === "こおり") ||
    (selectedAbility === "あついしぼう" && wtype2S4 === "ほのお")
  ) {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 50) / 100);
    power2S4 = Math.floor((power2S4 * 50) / 100);
    myAbiIryokuGENDisplayS4W2 = "[厚い脂肪]";
  }

  if (
    (selectedAbility === "あついしぼう" && wtype3S4 === "こおり") ||
    (selectedAbility === "あついしぼう" && wtype3S4 === "ほのお")
  ) {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 50) / 100);
    power3S4 = Math.floor((power3S4 * 50) / 100);
    myAbiIryokuGENDisplayS4W3 = "[厚い脂肪]";
  }

  if (
    (selectedAbility === "あついしぼう" && wtype4S4 === "こおり") ||
    (selectedAbility === "あついしぼう" && wtype4S4 === "ほのお")
  ) {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 50) / 100);
    power4S4 = Math.floor((power4S4 * 50) / 100);
    myAbiIryokuGENDisplayS4W4 = "[厚い脂肪]";
  }

  //! たいねつ	0.5	ほのおタイプの技を受けるとき威力が下がる。
  if (selectedTekiAbility === "たいねつ" && wtype1 === "ほのお") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 50) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 50) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 50) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 50) / 100);
    power1 = Math.floor((power1 * 50) / 100);
    tekiAbiIryokuGENDisplay1 = "[耐熱]";
  }

  if (selectedTekiAbility === "たいねつ" && wtype2 === "ほのお") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 50) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 50) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 50) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 50) / 100);
    power2 = Math.floor((power2 * 50) / 100);
    tekiAbiIryokuGENDisplay2 = "[耐熱]";
  }

  if (selectedTekiAbility === "たいねつ" && wtype3 === "ほのお") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 50) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 50) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 50) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 50) / 100);
    power3 = Math.floor((power3 * 50) / 100);
    tekiAbiIryokuGENDisplay3 = "[耐熱]";
  }

  if (selectedTekiAbility === "たいねつ" && wtype4 === "ほのお") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 50) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 50) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 50) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 50) / 100);
    power4 = Math.floor((power4 * 50) / 100);
    tekiAbiIryokuGENDisplay4 = "[耐熱]";
  }

  if (selectedAbility === "たいねつ" && wtype1S1 === "ほのお") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 50) / 100);
    power1S1 = Math.floor((power1S1 * 50) / 100);
    myAbiIryokuGENDisplayS1W1 = "[耐熱]";
  }

  if (selectedAbility === "たいねつ" && wtype2S1 === "ほのお") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 50) / 100);
    power2S1 = Math.floor((power2S1 * 50) / 100);
    myAbiIryokuGENDisplayS1W2 = "[耐熱]";
  }

  if (selectedAbility === "たいねつ" && wtype3S1 === "ほのお") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 50) / 100);
    power3S1 = Math.floor((power3S1 * 50) / 100);
    myAbiIryokuGENDisplayS1W3 = "[耐熱]";
  }

  if (selectedAbility === "たいねつ" && wtype4S1 === "ほのお") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 50) / 100);
    power4S1 = Math.floor((power4S1 * 50) / 100);
    myAbiIryokuGENDisplayS1W4 = "[耐熱]";
  }

  if (selectedAbility === "たいねつ" && wtype1S2 === "ほのお") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 50) / 100);
    power1S2 = Math.floor((power1S2 * 50) / 100);
    myAbiIryokuGENDisplayS2W1 = "[耐熱]";
  }

  if (selectedAbility === "たいねつ" && wtype2S2 === "ほのお") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 50) / 100);
    power2S2 = Math.floor((power2S2 * 50) / 100);
    myAbiIryokuGENDisplayS2W2 = "[耐熱]";
  }

  if (selectedAbility === "たいねつ" && wtype3S2 === "ほのお") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 50) / 100);
    power3S2 = Math.floor((power3S2 * 50) / 100);
    myAbiIryokuGENDisplayS2W3 = "[耐熱]";
  }

  if (selectedAbility === "たいねつ" && wtype4S2 === "ほのお") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 50) / 100);
    power4S2 = Math.floor((power4S2 * 50) / 100);
    myAbiIryokuGENDisplayS2W4 = "[耐熱]";
  }

  if (selectedAbility === "たいねつ" && wtype1S3 === "ほのお") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 50) / 100);
    power1S3 = Math.floor((power1S3 * 50) / 100);
    myAbiIryokuGENDisplayS3W1 = "[耐熱]";
  }

  if (selectedAbility === "たいねつ" && wtype2S3 === "ほのお") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 50) / 100);
    power2S3 = Math.floor((power2S3 * 50) / 100);
    myAbiIryokuGENDisplayS3W2 = "[耐熱]";
  }

  if (selectedAbility === "たいねつ" && wtype3S3 === "ほのお") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 50) / 100);
    power3S3 = Math.floor((power3S3 * 50) / 100);
    myAbiIryokuGENDisplayS3W3 = "[耐熱]";
  }

  if (selectedAbility === "たいねつ" && wtype4S3 === "ほのお") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 50) / 100);
    power4S3 = Math.floor((power4S3 * 50) / 100);
    myAbiIryokuGENDisplayS3W4 = "[耐熱]";
  }

  if (selectedAbility === "たいねつ" && wtype1S4 === "ほのお") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 50) / 100);
    power1S4 = Math.floor((power1S4 * 50) / 100);
    myAbiIryokuGENDisplayS4W1 = "[耐熱]";
  }

  if (selectedAbility === "たいねつ" && wtype2S4 === "ほのお") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 50) / 100);
    power2S4 = Math.floor((power2S4 * 50) / 100);
    myAbiIryokuGENDisplayS4W2 = "[耐熱]";
  }

  if (selectedAbility === "たいねつ" && wtype3S4 === "ほのお") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 50) / 100);
    power3S4 = Math.floor((power3S4 * 50) / 100);
    myAbiIryokuGENDisplayS4W3 = "[耐熱]";
  }

  if (selectedAbility === "たいねつ" && wtype4S4 === "ほのお") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 50) / 100);
    power4S4 = Math.floor((power4S4 * 50) / 100);
    myAbiIryokuGENDisplayS4W4 = "[耐熱]";
  }

  //! かんそうはだ	1.25	ほのおタイプの技を受けるとき威力が上がる。
  if (selectedTekiAbility === "かんそうはだ" && wtype1 === "ほのお") {
    kisoS1Power1 = Math.floor((kisoS1Power1 * 125) / 100);
    kisoS2Power1 = Math.floor((kisoS2Power1 * 125) / 100);
    kisoS3Power1 = Math.floor((kisoS3Power1 * 125) / 100);
    kisoS4Power1 = Math.floor((kisoS4Power1 * 125) / 100);
    power1 = Math.floor((power1 * 125) / 100);
    tekiAbiIryokuGENDisplay1 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedTekiAbility === "かんそうはだ" && wtype2 === "ほのお") {
    kisoS1Power2 = Math.floor((kisoS1Power2 * 125) / 100);
    kisoS2Power2 = Math.floor((kisoS2Power2 * 125) / 100);
    kisoS3Power2 = Math.floor((kisoS3Power2 * 125) / 100);
    kisoS4Power2 = Math.floor((kisoS4Power2 * 125) / 100);
    power2 = Math.floor((power2 * 125) / 100);
    tekiAbiIryokuGENDisplay2 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedTekiAbility === "かんそうはだ" && wtype3 === "ほのお") {
    kisoS1Power3 = Math.floor((kisoS1Power3 * 125) / 100);
    kisoS2Power3 = Math.floor((kisoS2Power3 * 125) / 100);
    kisoS3Power3 = Math.floor((kisoS3Power3 * 125) / 100);
    kisoS4Power3 = Math.floor((kisoS4Power3 * 125) / 100);
    power3 = Math.floor((power3 * 125) / 100);
    tekiAbiIryokuGENDisplay3 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedTekiAbility === "かんそうはだ" && wtype4 === "ほのお") {
    kisoS1Power4 = Math.floor((kisoS1Power4 * 125) / 100);
    kisoS2Power4 = Math.floor((kisoS2Power4 * 125) / 100);
    kisoS3Power4 = Math.floor((kisoS3Power4 * 125) / 100);
    kisoS4Power4 = Math.floor((kisoS4Power4 * 125) / 100);
    power4 = Math.floor((power4 * 125) / 100);
    tekiAbiIryokuGENDisplay4 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype1S1 === "ほのお") {
    kisoPower1S1 = Math.floor((kisoPower1S1 * 125) / 100);
    power1S1 = Math.floor((power1S1 * 125) / 100);
    myAbiIryokuGENDisplayS1W1 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype2S1 === "ほのお") {
    kisoPower2S1 = Math.floor((kisoPower2S1 * 125) / 100);
    power2S1 = Math.floor((power2S1 * 125) / 100);
    myAbiIryokuGENDisplayS1W2 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype3S1 === "ほのお") {
    kisoPower3S1 = Math.floor((kisoPower3S1 * 125) / 100);
    power3S1 = Math.floor((power3S1 * 125) / 100);
    myAbiIryokuGENDisplayS1W3 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype4S1 === "ほのお") {
    kisoPower4S1 = Math.floor((kisoPower4S1 * 125) / 100);
    power4S1 = Math.floor((power4S1 * 125) / 100);
    myAbiIryokuGENDisplayS1W4 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype1S2 === "ほのお") {
    kisoPower1S2 = Math.floor((kisoPower1S2 * 125) / 100);
    power1S2 = Math.floor((power1S2 * 125) / 100);
    myAbiIryokuGENDisplayS2W1 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype2S2 === "ほのお") {
    kisoPower2S2 = Math.floor((kisoPower2S2 * 125) / 100);
    power2S2 = Math.floor((power2S2 * 125) / 100);
    myAbiIryokuGENDisplayS2W2 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype3S2 === "ほのお") {
    kisoPower3S2 = Math.floor((kisoPower3S2 * 125) / 100);
    power3S2 = Math.floor((power3S2 * 125) / 100);
    myAbiIryokuGENDisplayS2W3 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype4S2 === "ほのお") {
    kisoPower4S2 = Math.floor((kisoPower4S2 * 125) / 100);
    power4S2 = Math.floor((power4S2 * 125) / 100);
    myAbiIryokuGENDisplayS2W4 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype1S3 === "ほのお") {
    kisoPower1S3 = Math.floor((kisoPower1S3 * 125) / 100);
    power1S3 = Math.floor((power1S3 * 125) / 100);
    myAbiIryokuGENDisplayS3W1 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype2S3 === "ほのお") {
    kisoPower2S3 = Math.floor((kisoPower2S3 * 125) / 100);
    power2S3 = Math.floor((power2S3 * 125) / 100);
    myAbiIryokuGENDisplayS3W2 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype3S3 === "ほのお") {
    kisoPower3S3 = Math.floor((kisoPower3S3 * 125) / 100);
    power3S3 = Math.floor((power3S3 * 125) / 100);
    myAbiIryokuGENDisplayS3W3 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype4S3 === "ほのお") {
    kisoPower4S3 = Math.floor((kisoPower4S3 * 125) / 100);
    power4S3 = Math.floor((power4S3 * 125) / 100);
    myAbiIryokuGENDisplayS3W4 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype1S4 === "ほのお") {
    kisoPower1S4 = Math.floor((kisoPower1S4 * 125) / 100);
    power1S4 = Math.floor((power1S4 * 125) / 100);
    myAbiIryokuGENDisplayS4W1 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype2S4 === "ほのお") {
    kisoPower2S4 = Math.floor((kisoPower2S4 * 125) / 100);
    power2S4 = Math.floor((power2S4 * 125) / 100);
    myAbiIryokuGENDisplayS4W2 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype3S4 === "ほのお") {
    kisoPower3S4 = Math.floor((kisoPower3S4 * 125) / 100);
    power3S4 = Math.floor((power3S4 * 125) / 100);
    myAbiIryokuGENDisplayS4W3 = "[乾燥肌(炎*1.25)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype4S4 === "ほのお") {
    kisoPower4S4 = Math.floor((kisoPower4S4 * 125) / 100);
    power4S4 = Math.floor((power4S4 * 125) / 100);
    myAbiIryokuGENDisplayS4W4 = "[乾燥肌(炎*1.25)]";
  }

  //! かんそうはだ	水無効
  if (selectedTekiAbility === "かんそうはだ" && wtype1 === "みず") {
    kisoS1Power1 = Math.floor(kisoS1Power1 * 0);
    kisoS2Power1 = Math.floor(kisoS2Power1 * 0);
    kisoS3Power1 = Math.floor(kisoS3Power1 * 0);
    kisoS4Power1 = Math.floor(kisoS4Power1 * 0);
    power1 = Math.floor(power1 * 0);
    tekiAbiIryokuGENDisplay1 = "[乾燥肌(水無効)]";
  }

  if (selectedTekiAbility === "かんそうはだ" && wtype2 === "みず") {
    kisoS1Power2 = Math.floor(kisoS1Power2 * 0);
    kisoS2Power2 = Math.floor(kisoS2Power2 * 0);
    kisoS3Power2 = Math.floor(kisoS3Power2 * 0);
    kisoS4Power2 = Math.floor(kisoS4Power2 * 0);
    power2 = Math.floor(power2 * 0);
    tekiAbiIryokuGENDisplay2 = "[乾燥肌(水無効)]";
  }

  if (selectedTekiAbility === "かんそうはだ" && wtype3 === "みず") {
    kisoS1Power3 = Math.floor(kisoS1Power3 * 0);
    kisoS2Power3 = Math.floor(kisoS2Power3 * 0);
    kisoS3Power3 = Math.floor(kisoS3Power3 * 0);
    kisoS4Power3 = Math.floor(kisoS4Power3 * 0);
    power3 = Math.floor(power3 * 0);
    tekiAbiIryokuGENDisplay3 = "[乾燥肌(水無効)]";
  }

  if (selectedTekiAbility === "かんそうはだ" && wtype4 === "みず") {
    kisoS1Power4 = Math.floor(kisoS1Power4 * 0);
    kisoS2Power4 = Math.floor(kisoS2Power4 * 0);
    kisoS3Power4 = Math.floor(kisoS3Power4 * 0);
    kisoS4Power4 = Math.floor(kisoS4Power4 * 0);
    power4 = Math.floor(power4 * 0);
    tekiAbiIryokuGENDisplay4 = "[乾燥肌(水無効)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype1S1 === "みず") {
    kisoPower1S1 = Math.floor(kisoPower1S1 * 0);
    power1S1 = Math.floor(power1S1 * 0);
    myAbiIryokuGENDisplayS1W1 = "[乾燥肌(水無効)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype2S1 === "みず") {
    kisoPower2S1 = Math.floor(kisoPower2S1 * 0);
    power2S1 = Math.floor(power2S1 * 0);
    myAbiIryokuGENDisplayS1W2 = "[乾燥肌(水無効)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype3S1 === "みず") {
    kisoPower3S1 = Math.floor(kisoPower3S1 * 0);
    power3S1 = Math.floor(power3S1 * 0);
    myAbiIryokuGENDisplayS1W3 = "[乾燥肌(水無効)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype4S1 === "みず") {
    kisoPower4S1 = Math.floor(kisoPower4S1 * 0);
    power4S1 = Math.floor(power4S1 * 0);
    myAbiIryokuGENDisplayS1W4 = "[乾燥肌(水無効)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype1S2 === "みず") {
    kisoPower1S2 = Math.floor(kisoPower1S2 * 0);
    power1S2 = Math.floor(power1S2 * 0);
    myAbiIryokuGENDisplayS2W1 = "[乾燥肌(水無効)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype2S2 === "みず") {
    kisoPower2S2 = Math.floor(kisoPower2S2 * 0);
    power2S2 = Math.floor(power2S2 * 0);
    myAbiIryokuGENDisplayS2W2 = "[乾燥肌(水無効)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype3S2 === "みず") {
    kisoPower3S2 = Math.floor(kisoPower3S2 * 0);
    power3S2 = Math.floor(power3S2 * 0);
    myAbiIryokuGENDisplayS2W3 = "[乾燥肌(水無効)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype4S2 === "みず") {
    kisoPower4S2 = Math.floor(kisoPower4S2 * 0);
    power4S2 = Math.floor(power4S2 * 0);
    myAbiIryokuGENDisplayS2W4 = "[乾燥肌(水無効)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype1S3 === "みず") {
    kisoPower1S3 = Math.floor(kisoPower1S3 * 0);
    power1S3 = Math.floor(power1S3 * 0);
    myAbiIryokuGENDisplayS3W1 = "[乾燥肌(水無効)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype2S3 === "みず") {
    kisoPower2S3 = Math.floor(kisoPower2S3 * 0);
    power2S3 = Math.floor(power2S3 * 0);
    myAbiIryokuGENDisplayS3W2 = "[乾燥肌(水無効)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype3S3 === "みず") {
    kisoPower3S3 = Math.floor(kisoPower3S3 * 0);
    power3S3 = Math.floor(power3S3 * 0);
    myAbiIryokuGENDisplayS3W3 = "[乾燥肌(水無効)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype4S3 === "みず") {
    kisoPower4S3 = Math.floor(kisoPower4S3 * 0);
    power4S3 = Math.floor(power4S3 * 0);
    myAbiIryokuGENDisplayS3W4 = "[乾燥肌(水無効)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype1S4 === "みず") {
    kisoPower1S4 = Math.floor(kisoPower1S4 * 0);
    power1S4 = Math.floor(power1S4 * 0);
    myAbiIryokuGENDisplayS4W1 = "[乾燥肌(水無効)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype2S4 === "みず") {
    kisoPower2S4 = Math.floor(kisoPower2S4 * 0);
    power2S4 = Math.floor(power2S4 * 0);
    myAbiIryokuGENDisplayS4W2 = "[乾燥肌(水無効)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype3S4 === "みず") {
    kisoPower3S4 = Math.floor(kisoPower3S4 * 0);
    power3S4 = Math.floor(power3S4 * 0);
    myAbiIryokuGENDisplayS4W3 = "[乾燥肌(水無効)]";
  }

  if (selectedAbility === "かんそうはだ" && wtype4S4 === "みず") {
    kisoPower4S4 = Math.floor(kisoPower4S4 * 0);
    power4S4 = Math.floor(power4S4 * 0);
    myAbiIryokuGENDisplayS4W4 = "[乾燥肌(水無効)]";
  }

  //! ふゆう	地面無効
  if (selectedTekiAbility === "ふゆう" && wtype1 === "じめん") {
    kisoS1Power1 = Math.floor(kisoS1Power1 * 0);
    kisoS2Power1 = Math.floor(kisoS2Power1 * 0);
    kisoS3Power1 = Math.floor(kisoS3Power1 * 0);
    kisoS4Power1 = Math.floor(kisoS4Power1 * 0);
    power1 = Math.floor(power1 * 0);
    tekiAbiIryokuGENDisplay1 = "[浮遊(地面無効)]";
  }

  if (selectedTekiAbility === "ふゆう" && wtype2 === "じめん") {
    kisoS1Power2 = Math.floor(kisoS1Power2 * 0);
    kisoS2Power2 = Math.floor(kisoS2Power2 * 0);
    kisoS3Power2 = Math.floor(kisoS3Power2 * 0);
    kisoS4Power2 = Math.floor(kisoS4Power2 * 0);
    power2 = Math.floor(power2 * 0);
    tekiAbiIryokuGENDisplay2 = "[浮遊(地面無効)]";
  }

  if (selectedTekiAbility === "ふゆう" && wtype3 === "じめん") {
    kisoS1Power3 = Math.floor(kisoS1Power3 * 0);
    kisoS2Power3 = Math.floor(kisoS2Power3 * 0);
    kisoS3Power3 = Math.floor(kisoS3Power3 * 0);
    kisoS4Power3 = Math.floor(kisoS4Power3 * 0);
    power3 = Math.floor(power3 * 0);
    tekiAbiIryokuGENDisplay3 = "[浮遊(地面無効)]";
  }

  if (selectedTekiAbility === "ふゆう" && wtype4 === "じめん") {
    kisoS1Power4 = Math.floor(kisoS1Power4 * 0);
    kisoS2Power4 = Math.floor(kisoS2Power4 * 0);
    kisoS3Power4 = Math.floor(kisoS3Power4 * 0);
    kisoS4Power4 = Math.floor(kisoS4Power4 * 0);
    power4 = Math.floor(power4 * 0);
    tekiAbiIryokuGENDisplay4 = "[浮遊(地面無効)]";
  }

  if (selectedAbility === "ふゆう" && wtype1S1 === "じめん") {
    kisoPower1S1 = Math.floor(kisoPower1S1 * 0);
    power1S1 = Math.floor(power1S1 * 0);
    myAbiIryokuGENDisplayS1W1 = "[浮遊(地面無効)]";
  }

  if (selectedAbility === "ふゆう" && wtype2S1 === "じめん") {
    kisoPower2S1 = Math.floor(kisoPower2S1 * 0);
    power2S1 = Math.floor(power2S1 * 0);
    myAbiIryokuGENDisplayS1W2 = "[浮遊(地面無効)]";
  }

  if (selectedAbility === "ふゆう" && wtype3S1 === "じめん") {
    kisoPower3S1 = Math.floor(kisoPower3S1 * 0);
    power3S1 = Math.floor(power3S1 * 0);
    myAbiIryokuGENDisplayS1W3 = "[浮遊(地面無効)]";
  }

  if (selectedAbility === "ふゆう" && wtype4S1 === "じめん") {
    kisoPower4S1 = Math.floor(kisoPower4S1 * 0);
    power4S1 = Math.floor(power4S1 * 0);
    myAbiIryokuGENDisplayS1W4 = "[浮遊(地面無効)]";
  }

  if (selectedAbility === "ふゆう" && wtype1S2 === "じめん") {
    kisoPower1S2 = Math.floor(kisoPower1S2 * 0);
    power1S2 = Math.floor(power1S2 * 0);
    myAbiIryokuGENDisplayS2W1 = "[浮遊(地面無効)]";
  }

  if (selectedAbility === "ふゆう" && wtype2S2 === "じめん") {
    kisoPower2S2 = Math.floor(kisoPower2S2 * 0);
    power2S2 = Math.floor(power2S2 * 0);
    myAbiIryokuGENDisplayS2W2 = "[浮遊(地面無効)]";
  }

  if (selectedAbility === "ふゆう" && wtype3S2 === "じめん") {
    kisoPower3S2 = Math.floor(kisoPower3S2 * 0);
    power3S2 = Math.floor(power3S2 * 0);
    myAbiIryokuGENDisplayS2W3 = "[浮遊(地面無効)]";
  }

  if (selectedAbility === "ふゆう" && wtype4S2 === "じめん") {
    kisoPower4S2 = Math.floor(kisoPower4S2 * 0);
    power4S2 = Math.floor(power4S2 * 0);
    myAbiIryokuGENDisplayS2W4 = "[浮遊(地面無効)]";
  }

  if (selectedAbility === "ふゆう" && wtype1S3 === "じめん") {
    kisoPower1S3 = Math.floor(kisoPower1S3 * 0);
    power1S3 = Math.floor(power1S3 * 0);
    myAbiIryokuGENDisplayS3W1 = "[浮遊(地面無効)]";
  }

  if (selectedAbility === "ふゆう" && wtype2S3 === "じめん") {
    kisoPower2S3 = Math.floor(kisoPower2S3 * 0);
    power2S3 = Math.floor(power2S3 * 0);
    myAbiIryokuGENDisplayS3W2 = "[浮遊(地面無効)]";
  }

  if (selectedAbility === "ふゆう" && wtype3S3 === "じめん") {
    kisoPower3S3 = Math.floor(kisoPower3S3 * 0);
    power3S3 = Math.floor(power3S3 * 0);
    myAbiIryokuGENDisplayS3W3 = "[浮遊(地面無効)]";
  }

  if (selectedAbility === "ふゆう" && wtype4S3 === "じめん") {
    kisoPower4S3 = Math.floor(kisoPower4S3 * 0);
    power4S3 = Math.floor(power4S3 * 0);
    myAbiIryokuGENDisplayS3W4 = "[浮遊(地面無効)]";
  }

  if (selectedAbility === "ふゆう" && wtype1S4 === "じめん") {
    kisoPower1S4 = Math.floor(kisoPower1S4 * 0);
    power1S4 = Math.floor(power1S4 * 0);
    myAbiIryokuGENDisplayS4W1 = "[浮遊(地面無効)]";
  }

  if (selectedAbility === "ふゆう" && wtype2S4 === "じめん") {
    kisoPower2S4 = Math.floor(kisoPower2S4 * 0);
    power2S4 = Math.floor(power2S4 * 0);
    myAbiIryokuGENDisplayS4W2 = "[浮遊(地面無効)]";
  }

  if (selectedAbility === "ふゆう" && wtype3S4 === "じめん") {
    kisoPower3S4 = Math.floor(kisoPower3S4 * 0);
    power3S4 = Math.floor(power3S4 * 0);
    myAbiIryokuGENDisplayS4W3 = "[浮遊(地面無効)]";
  }

  if (selectedAbility === "ふゆう" && wtype4S4 === "じめん") {
    kisoPower4S4 = Math.floor(kisoPower4S4 * 0);
    power4S4 = Math.floor(power4S4 * 0);
    myAbiIryokuGENDisplayS4W4 = "[浮遊(地面無効)]";
  }

  //! もらいび	ほのお無効
  if (selectedTekiAbility === "もらいび" && wtype1 === "ほのお") {
    kisoS1Power1 = Math.floor(kisoS1Power1 * 0);
    kisoS2Power1 = Math.floor(kisoS2Power1 * 0);
    kisoS3Power1 = Math.floor(kisoS3Power1 * 0);
    kisoS4Power1 = Math.floor(kisoS4Power1 * 0);
    power1 = Math.floor(power1 * 0);
    tekiAbiIryokuGENDisplay1 = "[貰い火(炎無効)]";
  }

  if (selectedTekiAbility === "もらいび" && wtype2 === "ほのお") {
    kisoS1Power2 = Math.floor(kisoS1Power2 * 0);
    kisoS2Power2 = Math.floor(kisoS2Power2 * 0);
    kisoS3Power2 = Math.floor(kisoS3Power2 * 0);
    kisoS4Power2 = Math.floor(kisoS4Power2 * 0);
    power2 = Math.floor(power2 * 0);
    tekiAbiIryokuGENDisplay2 = "[貰い火(炎無効)]";
  }

  if (selectedTekiAbility === "もらいび" && wtype3 === "ほのお") {
    kisoS1Power3 = Math.floor(kisoS1Power3 * 0);
    kisoS2Power3 = Math.floor(kisoS2Power3 * 0);
    kisoS3Power3 = Math.floor(kisoS3Power3 * 0);
    kisoS4Power3 = Math.floor(kisoS4Power3 * 0);
    power3 = Math.floor(power3 * 0);
    tekiAbiIryokuGENDisplay3 = "[貰い火(炎無効)]";
  }

  if (selectedTekiAbility === "もらいび" && wtype4 === "ほのお") {
    kisoS1Power4 = Math.floor(kisoS1Power4 * 0);
    kisoS2Power4 = Math.floor(kisoS2Power4 * 0);
    kisoS3Power4 = Math.floor(kisoS3Power4 * 0);
    kisoS4Power4 = Math.floor(kisoS4Power4 * 0);
    power4 = Math.floor(power4 * 0);
    tekiAbiIryokuGENDisplay4 = "[貰い火(炎無効)]";
  }

  if (selectedAbility === "もらいび" && wtype1S1 === "ほのお") {
    kisoPower1S1 = Math.floor(kisoPower1S1 * 0);
    power1S1 = Math.floor(power1S1 * 0);
    myAbiIryokuGENDisplayS1W1 = "[貰い火(炎無効)]";
  }

  if (selectedAbility === "もらいび" && wtype2S1 === "ほのお") {
    kisoPower2S1 = Math.floor(kisoPower2S1 * 0);
    power2S1 = Math.floor(power2S1 * 0);
    myAbiIryokuGENDisplayS1W2 = "[貰い火(炎無効)]";
  }

  if (selectedAbility === "もらいび" && wtype3S1 === "ほのお") {
    kisoPower3S1 = Math.floor(kisoPower3S1 * 0);
    power3S1 = Math.floor(power3S1 * 0);
    myAbiIryokuGENDisplayS1W3 = "[貰い火(炎無効)]";
  }

  if (selectedAbility === "もらいび" && wtype4S1 === "ほのお") {
    kisoPower4S1 = Math.floor(kisoPower4S1 * 0);
    power4S1 = Math.floor(power4S1 * 0);
    myAbiIryokuGENDisplayS1W4 = "[貰い火(炎無効)]";
  }

  if (selectedAbility === "もらいび" && wtype1S2 === "ほのお") {
    kisoPower1S2 = Math.floor(kisoPower1S2 * 0);
    power1S2 = Math.floor(power1S2 * 0);
    myAbiIryokuGENDisplayS2W1 = "[貰い火(炎無効)]";
  }

  if (selectedAbility === "もらいび" && wtype2S2 === "ほのお") {
    kisoPower2S2 = Math.floor(kisoPower2S2 * 0);
    power2S2 = Math.floor(power2S2 * 0);
    myAbiIryokuGENDisplayS2W2 = "[貰い火(炎無効)]";
  }

  if (selectedAbility === "もらいび" && wtype3S2 === "ほのお") {
    kisoPower3S2 = Math.floor(kisoPower3S2 * 0);
    power3S2 = Math.floor(power3S2 * 0);
    myAbiIryokuGENDisplayS2W3 = "[貰い火(炎無効)]";
  }

  if (selectedAbility === "もらいび" && wtype4S2 === "ほのお") {
    kisoPower4S2 = Math.floor(kisoPower4S2 * 0);
    power4S2 = Math.floor(power4S2 * 0);
    myAbiIryokuGENDisplayS2W4 = "[貰い火(炎無効)]";
  }

  if (selectedAbility === "もらいび" && wtype1S3 === "ほのお") {
    kisoPower1S3 = Math.floor(kisoPower1S3 * 0);
    power1S3 = Math.floor(power1S3 * 0);
    myAbiIryokuGENDisplayS3W1 = "[貰い火(炎無効)]";
  }

  if (selectedAbility === "もらいび" && wtype2S3 === "ほのお") {
    kisoPower2S3 = Math.floor(kisoPower2S3 * 0);
    power2S3 = Math.floor(power2S3 * 0);
    myAbiIryokuGENDisplayS3W2 = "[貰い火(炎無効)]";
  }

  if (selectedAbility === "もらいび" && wtype3S3 === "ほのお") {
    kisoPower3S3 = Math.floor(kisoPower3S3 * 0);
    power3S3 = Math.floor(power3S3 * 0);
    myAbiIryokuGENDisplayS3W3 = "[貰い火(炎無効)]";
  }

  if (selectedAbility === "もらいび" && wtype4S3 === "ほのお") {
    kisoPower4S3 = Math.floor(kisoPower4S3 * 0);
    power4S3 = Math.floor(power4S3 * 0);
    myAbiIryokuGENDisplayS3W4 = "[貰い火(炎無効)]";
  }

  if (selectedAbility === "もらいび" && wtype1S4 === "ほのお") {
    kisoPower1S4 = Math.floor(kisoPower1S4 * 0);
    power1S4 = Math.floor(power1S4 * 0);
    myAbiIryokuGENDisplayS4W1 = "[貰い火(炎無効)]";
  }

  if (selectedAbility === "もらいび" && wtype2S4 === "ほのお") {
    kisoPower2S4 = Math.floor(kisoPower2S4 * 0);
    power2S4 = Math.floor(power2S4 * 0);
    myAbiIryokuGENDisplayS4W2 = "[貰い火(炎無効)]";
  }

  if (selectedAbility === "もらいび" && wtype3S4 === "ほのお") {
    kisoPower3S4 = Math.floor(kisoPower3S4 * 0);
    power3S4 = Math.floor(power3S4 * 0);
    myAbiIryokuGENDisplayS4W3 = "[貰い火(炎無効)]";
  }

  if (selectedAbility === "もらいび" && wtype4S4 === "ほのお") {
    kisoPower4S4 = Math.floor(kisoPower4S4 * 0);
    power4S4 = Math.floor(power4S4 * 0);
    myAbiIryokuGENDisplayS4W4 = "[貰い火(炎無効)]";
  }

  //自分の使うポケモンの4つの技
  const calc2P1 = calc1 * power1; //自分ポケ技1例外補正なし威力
  const calc2P2 = calc1 * power2; //自分ポケ技2例外補正なし威力
  const calc2P3 = calc1 * power3; //自分ポケ技3例外補正なし威力
  const calc2P4 = calc1 * power4; //自分ポケ技4例外補正なし威力

  //敵ポケ１の型が使う4つの技
  const calc2P1S1 = calc1 * power1S1; //敵ポケ１技1例外補正なし威力
  const calc2P2S1 = calc1 * power2S1; //敵ポケ１技2例外補正なし威力
  const calc2P3S1 = calc1 * power3S1; //敵ポケ１技3例外補正なし威力
  const calc2P4S1 = calc1 * power4S1; //敵ポケ１技4例外補正なし威力

  //敵ポケ2の型が使う4つの技
  const calc2P1S2 = calc1 * power1S2; //敵ポケ2技1例外補正なし威力
  const calc2P2S2 = calc1 * power2S2; //敵ポケ2技2例外補正なし威力
  const calc2P3S2 = calc1 * power3S2; //敵ポケ2技3例外補正なし威力
  const calc2P4S2 = calc1 * power4S2; //敵ポケ2技4例外補正なし威力

  //敵ポケ3の型が使う4つの技
  const calc2P1S3 = calc1 * power1S3; //敵ポケ3技1例外補正なし威力
  const calc2P2S3 = calc1 * power2S3; //敵ポケ3技2例外補正なし威力
  const calc2P3S3 = calc1 * power3S3; //敵ポケ3技3例外補正なし威力
  const calc2P4S3 = calc1 * power4S3; //敵ポケ3技4例外補正なし威力

  //敵ポケ4の型が使う4つの技
  const calc2P1S4 = calc1 * power1S4; //敵ポケ4技1例外補正なし威力
  const calc2P2S4 = calc1 * power2S4; //敵ポケ4技2例外補正なし威力
  const calc2P3S4 = calc1 * power3S4; //敵ポケ4技3例外補正なし威力
  const calc2P4S4 = calc1 * power4S4; //敵ポケ4技4例外補正なし威力

  const calc2KS1Power1 = calc1 * kisoS1Power1; //自分ポケ技1が敵型1への威力
  const calc2KS1Power2 = calc1 * kisoS1Power2; //自分ポケ技2が敵型1への威力
  const calc2KS1Power3 = calc1 * kisoS1Power3; //自分ポケ技3が敵型1への威力
  const calc2KS1Power4 = calc1 * kisoS1Power4; //自分ポケ技4が敵型1への威力

  const calc2KS2Power1 = calc1 * kisoS2Power1; //自分ポケ技1が敵型2への威力
  const calc2KS2Power2 = calc1 * kisoS2Power2; //自分ポケ技2が敵型2への威力
  const calc2KS2Power3 = calc1 * kisoS2Power3; //自分ポケ技3が敵型2への威力
  const calc2KS2Power4 = calc1 * kisoS2Power4; //自分ポケ技4が敵型2への威力

  const calc2KS3Power1 = calc1 * kisoS3Power1; //自分ポケ技1が敵型3への威力
  const calc2KS3Power2 = calc1 * kisoS3Power2; //自分ポケ技2が敵型3への威力
  const calc2KS3Power3 = calc1 * kisoS3Power3; //自分ポケ技3が敵型3への威力
  const calc2KS3Power4 = calc1 * kisoS3Power4; //自分ポケ技4が敵型3への威力

  const calc2KS4Power1 = calc1 * kisoS4Power1; //自分ポケ技1が敵型4への威力
  const calc2KS4Power2 = calc1 * kisoS4Power2; //自分ポケ技2が敵型4への威力
  const calc2KS4Power3 = calc1 * kisoS4Power3; //自分ポケ技3が敵型4への威力
  const calc2KS4Power4 = calc1 * kisoS4Power4; //自分ポケ技4が敵型4への威力

  const calc2KPower1S1 = calc1 * kisoPower1S1; //敵1ポケ技1威力
  const calc2KPower2S1 = calc1 * kisoPower2S1; //敵1ポケ技2威力
  const calc2KPower3S1 = calc1 * kisoPower3S1; //敵1ポケ技3威力
  const calc2KPower4S1 = calc1 * kisoPower4S1; //敵1ポケ技4威力

  const calc2KPower1S2 = calc1 * kisoPower1S2; //敵2ポケ技1威力
  const calc2KPower2S2 = calc1 * kisoPower2S2; //敵2ポケ技2威力
  const calc2KPower3S2 = calc1 * kisoPower3S2; //敵2ポケ技3威力
  const calc2KPower4S2 = calc1 * kisoPower4S2; //敵2ポケ技4威力

  const calc2KPower1S3 = calc1 * kisoPower1S3; //敵3ポケ技1威力
  const calc2KPower2S3 = calc1 * kisoPower2S3; //敵3ポケ技2威力
  const calc2KPower3S3 = calc1 * kisoPower3S3; //敵3ポケ技3威力
  const calc2KPower4S3 = calc1 * kisoPower4S3; //敵3ポケ技4威力

  const calc2KPower1S4 = calc1 * kisoPower1S4; //敵4ポケ技1威力
  const calc2KPower2S4 = calc1 * kisoPower2S4; //敵4ポケ技2威力
  const calc2KPower3S4 = calc1 * kisoPower3S4; //敵4ポケ技3威力
  const calc2KPower4S4 = calc1 * kisoPower4S4; //敵4ポケ技4威力

  // ↓((calc2×[A/BorC/D])/50×Ma+2)

  let PhysicalMyATekiB1 = mypokeStatusARanked / tekipokeStatusBS1Ranked; //自分A/敵型1B(物理)
  let PhysicalMyATekiB2 = mypokeStatusARanked / tekipokeStatusBS2Ranked; //自分A/敵型2B(物理)
  let PhysicalMyATekiB3 = mypokeStatusARanked / tekipokeStatusBS3Ranked; //自分A/敵型3B(物理)
  let PhysicalMyATekiB4 = mypokeStatusARanked / tekipokeStatusBS4Ranked; //自分A/敵型4B(物理)

  // myC1つ TekiD4つ
  let SpecialMyCTekiD1 = mypokeStatusCRanked / tekipokeStatusDS1Ranked; //自分C/敵型1D(特殊)
  let SpecialMyCTekiD2 = mypokeStatusCRanked / tekipokeStatusDS2Ranked; //自分C/敵型2D(特殊)
  let SpecialMyCTekiD3 = mypokeStatusCRanked / tekipokeStatusDS3Ranked; //自分C/敵型3D(特殊)
  let SpecialMyCTekiD4 = mypokeStatusCRanked / tekipokeStatusDS4Ranked; //自分C/敵型4D(特殊)

  let calc3P1_S1; //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P1_S2; //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P1_S3; //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P1_S4; //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  let calc3P2_S1; //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P2_S2; //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P2_S3; //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P2_S4; //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  let calc3P3_S1; //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P3_S2; //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P3_S3; //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P3_S4; //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  let calc3P4_S1; //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P4_S2; //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P4_S3; //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P4_S4; //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  let calc3KS1Power1; //自分ポケ技1が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS1Power2; //自分ポケ技2が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS1Power3; //自分ポケ技3が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS1Power4; //自分ポケ技4が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  let calc3KS2Power1; //自分ポケ技1が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS2Power2; //自分ポケ技2が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS2Power3; //自分ポケ技3が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS2Power4; //自分ポケ技4が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  let calc3KS3Power1; //自分ポケ技1が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS3Power2; //自分ポケ技2が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS3Power3; //自分ポケ技3が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS3Power4; //自分ポケ技4が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  let calc3KS4Power1; //自分ポケ技1が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS4Power2; //自分ポケ技2が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS4Power3; //自分ポケ技3が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS4Power4; //自分ポケ技4が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  //敵ポケ１の型が使う4つの技
  let calc3P1S1; //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P2S1; //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P3S1; //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P4S1; //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

  //敵ポケ2の型が使う4つの技
  let calc3P1S2; //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P2S2; //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P3S2; //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P4S2; //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

  //敵ポケ3の型が使う4つの技
  let calc3P1S3; //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P2S3; //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P3S3; //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P4S3; //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

  //敵ポケ4の型が使う4つの技
  let calc3P1S4; //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P2S4; //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P3S4; //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P4S4; //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

  let calc3KPower1S1; //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KPower2S1; //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KPower3S1; //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KPower4S1; //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  let calc3KPower1S2; //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KPower2S2; //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KPower3S2; //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KPower4S2; //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  let calc3KPower1S3; //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KPower2S3; //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KPower3S3; //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KPower4S3; //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  let calc3KPower1S4; //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KPower2S4; //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KPower3S4; //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KPower4S4; //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  //敵型1へ攻撃
  if (moveClass1 === "物理") {
    calc3P1_S1 = Math.floor(calc2P1 * PhysicalMyATekiB1); //自分ポケ技1例外補正なし威力 * 自分A/敵型1B(物理)
    calc3KS1Power1 = Math.floor(calc2KS1Power1 * PhysicalMyATekiB1); //自分ポケ技1が敵型1への威力 * 自分A/敵型1B(物理)
  } else if (moveClass1 === "特殊") {
    calc3P1_S1 = Math.floor(calc2P1 * SpecialMyCTekiD1); //自分ポケ技1例外補正なし威力 * 自分C/敵型1D(特殊)
    calc3KS1Power1 = Math.floor(calc2KS1Power1 * SpecialMyCTekiD1); //自分ポケ技1が敵型1への威力 * 自分C/敵型1D(特殊)
  } else {
    calc3P1_S1 = Math.floor(calc2P1 * 0);
    calc3KS1Power1 = Math.floor(calc2KS1Power1 * 0);
  }

  if (moveClass2 === "物理") {
    calc3P2_S1 = Math.floor(calc2P2 * PhysicalMyATekiB1);
    calc3KS1Power2 = Math.floor(calc2KS1Power2 * PhysicalMyATekiB1);
  } else if (moveClass2 === "特殊") {
    calc3P2_S1 = Math.floor(calc2P2 * SpecialMyCTekiD1);
    calc3KS1Power2 = Math.floor(calc2KS1Power2 * SpecialMyCTekiD1);
  } else {
    calc3P2_S1 = Math.floor(calc2P2 * 0);
    calc3KS1Power2 = Math.floor(calc2KS1Power2 * 0);
  }

  if (moveClass3 === "物理") {
    calc3P3_S1 = Math.floor(calc2P3 * PhysicalMyATekiB1);
    calc3KS1Power3 = Math.floor(calc2KS1Power3 * PhysicalMyATekiB1);
  } else if (moveClass3 === "特殊") {
    calc3P3_S1 = Math.floor(calc2P3 * SpecialMyCTekiD1);
    calc3KS1Power3 = Math.floor(calc2KS1Power3 * SpecialMyCTekiD1);
  } else {
    calc3P3_S1 = Math.floor(calc2P3 * 0);
    calc3KS1Power3 = Math.floor(calc2KS1Power3 * 0);
  }

  if (moveClass4 === "物理") {
    calc3P4_S1 = Math.floor(calc2P4 * PhysicalMyATekiB1);
    calc3KS1Power4 = Math.floor(calc2KS1Power4 * PhysicalMyATekiB1);
  } else if (moveClass4 === "特殊") {
    calc3P4_S1 = Math.floor(calc2P4 * SpecialMyCTekiD1);
    calc3KS1Power4 = Math.floor(calc2KS1Power4 * SpecialMyCTekiD1);
  } else {
    calc3P4_S1 = Math.floor(calc2P4 * 0);
    calc3KS1Power4 = Math.floor(calc2KS1Power4 * 0);
  }

  //敵型2へ攻撃
  if (moveClass1 === "物理") {
    calc3P1_S2 = Math.floor(calc2P1 * PhysicalMyATekiB2);
    calc3KS2Power1 = Math.floor(calc2KS2Power1 * PhysicalMyATekiB2);
  } else if (moveClass1 === "特殊") {
    calc3P1_S2 = Math.floor(calc2P1 * SpecialMyCTekiD2);
    calc3KS2Power1 = Math.floor(calc2KS2Power1 * SpecialMyCTekiD2);
  } else {
    calc3P1_S2 = Math.floor(calc2P1 * 0);
    calc3KS2Power1 = Math.floor(calc2KS2Power1 * 0);
  }

  if (moveClass2 === "物理") {
    calc3P2_S2 = Math.floor(calc2P2 * PhysicalMyATekiB2);
    calc3KS2Power2 = Math.floor(calc2KS2Power2 * PhysicalMyATekiB2);
  } else if (moveClass2 === "特殊") {
    calc3P2_S2 = Math.floor(calc2P2 * SpecialMyCTekiD2);
    calc3KS2Power2 = Math.floor(calc2KS2Power2 * SpecialMyCTekiD2);
  } else {
    calc3P2_S2 = Math.floor(calc2P2 * 0);
    calc3KS2Power2 = Math.floor(calc2KS2Power2 * 0);
  }

  if (moveClass3 === "物理") {
    calc3P3_S2 = Math.floor(calc2P3 * PhysicalMyATekiB2);
    calc3KS2Power3 = Math.floor(calc2KS2Power3 * PhysicalMyATekiB2);
  } else if (moveClass3 === "特殊") {
    calc3P3_S2 = Math.floor(calc2P3 * SpecialMyCTekiD2);
    calc3KS2Power3 = Math.floor(calc2KS2Power3 * SpecialMyCTekiD2);
  } else {
    calc3P3_S2 = Math.floor(calc2P3 * 0);
    calc3KS2Power3 = Math.floor(calc2KS2Power3 * 0);
  }

  if (moveClass4 === "物理") {
    calc3P4_S2 = Math.floor(calc2P4 * PhysicalMyATekiB2);
    calc3KS2Power4 = Math.floor(calc2KS2Power4 * PhysicalMyATekiB2);
  } else if (moveClass4 === "特殊") {
    calc3P4_S2 = Math.floor(calc2P4 * SpecialMyCTekiD2);
    calc3KS2Power4 = Math.floor(calc2KS2Power4 * SpecialMyCTekiD2);
  } else {
    calc3P4_S2 = Math.floor(calc2P4 * 0);
    calc3KS2Power4 = Math.floor(calc2KS2Power4 * 0);
  }

  //敵型3へ攻撃
  if (moveClass1 === "物理") {
    calc3P1_S3 = Math.floor(calc2P1 * PhysicalMyATekiB3);
    calc3KS3Power1 = Math.floor(calc2KS3Power1 * PhysicalMyATekiB3);
  } else if (moveClass1 === "特殊") {
    calc3P1_S3 = Math.floor(calc2P1 * SpecialMyCTekiD3);
    calc3KS3Power1 = Math.floor(calc2KS3Power1 * SpecialMyCTekiD3);
  } else {
    calc3P1_S3 = Math.floor(calc2P1 * 0);
    calc3KS3Power1 = Math.floor(calc2KS3Power1 * 0);
  }

  if (moveClass2 === "物理") {
    calc3P2_S3 = Math.floor(calc2P2 * PhysicalMyATekiB3);
    calc3KS3Power2 = Math.floor(calc2KS3Power2 * PhysicalMyATekiB3);
  } else if (moveClass2 === "特殊") {
    calc3P2_S3 = Math.floor(calc2P2 * SpecialMyCTekiD3);
    calc3KS3Power2 = Math.floor(calc2KS3Power2 * SpecialMyCTekiD3);
  } else {
    calc3P2_S3 = Math.floor(calc2P2 * 0);
    calc3KS3Power2 = Math.floor(calc2KS3Power2 * 0);
  }

  if (moveClass3 === "物理") {
    calc3P3_S3 = Math.floor(calc2P3 * PhysicalMyATekiB3);
    calc3KS3Power3 = Math.floor(calc2KS3Power3 * PhysicalMyATekiB3);
  } else if (moveClass3 === "特殊") {
    calc3P3_S3 = Math.floor(calc2P3 * SpecialMyCTekiD3);
    calc3KS3Power3 = Math.floor(calc2KS3Power3 * SpecialMyCTekiD3);
  } else {
    calc3P3_S3 = Math.floor(calc2P3 * 0);
    calc3KS3Power3 = Math.floor(calc2KS3Power3 * 0);
  }

  if (moveClass4 === "物理") {
    calc3P4_S3 = Math.floor(calc2P4 * PhysicalMyATekiB3);
    calc3KS3Power4 = Math.floor(calc2KS3Power4 * PhysicalMyATekiB3);
  } else if (moveClass4 === "特殊") {
    calc3P4_S3 = Math.floor(calc2P4 * SpecialMyCTekiD3);
    calc3KS3Power4 = Math.floor(calc2KS3Power4 * SpecialMyCTekiD3);
  } else {
    calc3P4_S3 = Math.floor(calc2P4 * 0);
    calc3KS3Power4 = Math.floor(calc2KS3Power4 * 0);
  }

  //敵型4へ攻撃
  if (moveClass1 === "物理") {
    calc3P1_S4 = Math.floor(calc2P1 * PhysicalMyATekiB4);
    calc3KS4Power1 = Math.floor(calc2KS4Power1 * PhysicalMyATekiB4);
  } else if (moveClass1 === "特殊") {
    calc3P1_S4 = Math.floor(calc2P1 * SpecialMyCTekiD4);
    calc3KS4Power1 = Math.floor(calc2KS4Power1 * SpecialMyCTekiD4);
  } else {
    calc3P1_S4 = Math.floor(calc2P1 * 0);
    calc3KS4Power1 = Math.floor(calc2KS4Power1 * 0);
  }

  if (moveClass2 === "物理") {
    calc3P2_S4 = Math.floor(calc2P2 * PhysicalMyATekiB4);
    calc3KS4Power2 = Math.floor(calc2KS4Power2 * PhysicalMyATekiB4);
  } else if (moveClass2 === "特殊") {
    calc3P2_S4 = Math.floor(calc2P2 * SpecialMyCTekiD4);
    calc3KS4Power2 = Math.floor(calc2KS4Power2 * SpecialMyCTekiD4);
  } else {
    calc3P2_S4 = Math.floor(calc2P2 * 0);
    calc3KS4Power2 = Math.floor(calc2KS4Power2 * 0);
  }

  if (moveClass3 === "物理") {
    calc3P3_S4 = Math.floor(calc2P3 * PhysicalMyATekiB4);
    calc3KS4Power3 = Math.floor(calc2KS4Power3 * PhysicalMyATekiB4);
  } else if (moveClass3 === "特殊") {
    calc3P3_S4 = Math.floor(calc2P3 * SpecialMyCTekiD4);
    calc3KS4Power3 = Math.floor(calc2KS4Power3 * SpecialMyCTekiD4);
  } else {
    calc3P3_S4 = Math.floor(calc2P3 * 0);
    calc3KS4Power3 = Math.floor(calc2KS4Power3 * 0);
  }

  if (moveClass4 === "物理") {
    calc3P4_S4 = Math.floor(calc2P4 * PhysicalMyATekiB4);
    calc3KS4Power4 = Math.floor(calc2KS4Power4 * PhysicalMyATekiB4);
  } else if (moveClass4 === "特殊") {
    calc3P4_S4 = Math.floor(calc2P4 * SpecialMyCTekiD4);
    calc3KS4Power4 = Math.floor(calc2KS4Power4 * SpecialMyCTekiD4);
  } else {
    calc3P4_S4 = Math.floor(calc2P4 * 0);
    calc3KS4Power4 = Math.floor(calc2KS4Power4 * 0);
  }

  // tekiA4つ myB1つ
  let PhysicalTekiA1MyB = tekipokeStatusAS1Ranked / mypokeStatusBRanked; //敵型1A/自分B(物理)
  let PhysicalTekiA2MyB = tekipokeStatusAS2Ranked / mypokeStatusBRanked; //敵型2A/自分B(物理)
  let PhysicalTekiA3MyB = tekipokeStatusAS3Ranked / mypokeStatusBRanked; //敵型3A/自分B(物理)
  let PhysicalTekiA4MyB = tekipokeStatusAS4Ranked / mypokeStatusBRanked; //敵型4A/自分B(物理)

  // tekiC4つ  mayD1つ
  let SpecialTekiC1MyD = tekipokeStatusCS1Ranked / mypokeStatusDRanked; //敵型1C/自分D(特殊)
  let SpecialTekiC2MyD = tekipokeStatusCS2Ranked / mypokeStatusDRanked; //敵型2C/自分D(特殊)
  let SpecialTekiC3MyD = tekipokeStatusCS3Ranked / mypokeStatusDRanked; //敵型3C/自分D(特殊)
  let SpecialTekiC4MyD = tekipokeStatusCS4Ranked / mypokeStatusDRanked; //敵型4C/自分D(特殊)

  //敵型1が攻撃
  // 技1
  if (moveClass1S1 === "物理") {
    calc3P1S1 = Math.floor(calc2P1S1 * PhysicalTekiA1MyB);
    calc3KPower1S1 = Math.floor(calc2KPower1S1 * PhysicalTekiA1MyB);
  } else if (moveClass1S1 === "特殊") {
    calc3P1S1 = Math.floor(calc2P1S1 * SpecialTekiC1MyD);
    calc3KPower1S1 = Math.floor(calc2KPower1S1 * SpecialTekiC1MyD);
  } else {
    calc3P1S1 = Math.floor(calc2P1S1 * 0);
    calc3KPower1S1 = Math.floor(calc2KPower1S1 * 0);
  }

  //技2
  if (moveClass2S1 === "物理") {
    calc3P2S1 = Math.floor(calc2P2S1 * PhysicalTekiA1MyB);
    calc3KPower2S1 = Math.floor(calc2KPower2S1 * PhysicalTekiA1MyB);
  } else if (moveClass2S1 === "特殊") {
    calc3P2S1 = Math.floor(calc2P2S1 * SpecialTekiC1MyD);
    calc3KPower2S1 = Math.floor(calc2KPower2S1 * SpecialTekiC1MyD);
  } else {
    calc3P2S1 = Math.floor(calc2P2S1 * 0);
    calc3KPower2S1 = Math.floor(calc2KPower2S1 * 0);
  }

  //技3
  if (moveClass3S1 === "物理") {
    calc3P3S1 = Math.floor(calc2P3S1 * PhysicalTekiA1MyB);
    calc3KPower3S1 = Math.floor(calc2KPower3S1 * PhysicalTekiA1MyB);
  } else if (moveClass3S1 === "特殊") {
    calc3P3S1 = Math.floor(calc2P3S1 * SpecialTekiC1MyD);
    calc3KPower3S1 = Math.floor(calc2KPower3S1 * SpecialTekiC1MyD);
  } else {
    calc3P3S1 = Math.floor(calc2P3S1 * 0);
    calc3KPower3S1 = Math.floor(calc2KPower3S1 * 0);
  }

  //技4
  if (moveClass4S1 === "物理") {
    calc3P4S1 = Math.floor(calc2P4S1 * PhysicalTekiA1MyB);
    calc3KPower4S1 = Math.floor(calc2KPower4S1 * PhysicalTekiA1MyB);
  } else if (moveClass4S1 === "特殊") {
    calc3P4S1 = Math.floor(calc2P4S1 * SpecialTekiC1MyD);
    calc3KPower4S1 = Math.floor(calc2KPower4S1 * SpecialTekiC1MyD);
  } else {
    calc3P4S1 = Math.floor(calc2P4S1 * 0);
    calc3KPower4S1 = Math.floor(calc2KPower4S1 * 0);
  }

  //敵型2が攻撃
  // 技1
  if (moveClass1S2 === "物理") {
    calc3P1S2 = Math.floor(calc2P1S2 * PhysicalTekiA2MyB);
    calc3KPower1S2 = Math.floor(calc2KPower1S2 * PhysicalTekiA2MyB);
  } else if (moveClass1S2 === "特殊") {
    calc3P1S2 = Math.floor(calc2P1S2 * SpecialTekiC2MyD);
    calc3KPower1S2 = Math.floor(calc2KPower1S2 * SpecialTekiC2MyD);
  } else {
    calc3P1S2 = Math.floor(calc2P1S2 * 0);
    calc3KPower1S2 = Math.floor(calc2KPower1S2 * 0);
  }

  //技2
  if (moveClass2S2 === "物理") {
    calc3P2S2 = Math.floor(calc2P2S2 * PhysicalTekiA2MyB);
    calc3KPower2S2 = Math.floor(calc2KPower2S2 * PhysicalTekiA2MyB);
  } else if (moveClass2S2 === "特殊") {
    calc3P2S2 = Math.floor(calc2P2S2 * SpecialTekiC2MyD);
    calc3KPower2S2 = Math.floor(calc2KPower2S2 * SpecialTekiC2MyD);
  } else {
    calc3P2S2 = Math.floor(calc2P2S2 * 0);
    calc3KPower2S2 = Math.floor(calc2KPower2S2 * 0);
  }

  //技3
  if (moveClass3S2 === "物理") {
    calc3P3S2 = Math.floor(calc2P3S2 * PhysicalTekiA2MyB);
    calc3KPower3S2 = Math.floor(calc2KPower3S2 * PhysicalTekiA2MyB);
  } else if (moveClass3S2 === "特殊") {
    calc3P3S2 = Math.floor(calc2P3S2 * SpecialTekiC2MyD);
    calc3KPower3S2 = Math.floor(calc2KPower3S2 * SpecialTekiC2MyD);
  } else {
    calc3P3S2 = Math.floor(calc2P3S2 * 0);
    calc3KPower3S2 = Math.floor(calc2KPower3S2 * 0);
  }

  //技4
  if (moveClass4S2 === "物理") {
    calc3P4S2 = Math.floor(calc2P4S2 * PhysicalTekiA2MyB);
    calc3KPower4S2 = Math.floor(calc2KPower4S2 * PhysicalTekiA2MyB);
  } else if (moveClass4S2 === "特殊") {
    calc3P4S2 = Math.floor(calc2P4S2 * SpecialTekiC2MyD);
    calc3KPower4S2 = Math.floor(calc2KPower4S2 * SpecialTekiC2MyD);
  } else {
    calc3P4S2 = Math.floor(calc2P4S2 * 0);
    calc3KPower4S2 = Math.floor(calc2KPower4S2 * 0);
  }

  //敵型3が攻撃
  // 技1
  if (moveClass1S3 === "物理") {
    calc3P1S3 = Math.floor(calc2P1S3 * PhysicalTekiA3MyB);
    calc3KPower1S3 = Math.floor(calc2KPower1S3 * PhysicalTekiA3MyB);
  } else if (moveClass1S3 === "特殊") {
    calc3P1S3 = Math.floor(calc2P1S3 * SpecialTekiC3MyD);
    calc3KPower1S3 = Math.floor(calc2KPower1S3 * SpecialTekiC3MyD);
  } else {
    calc3P1S3 = Math.floor(calc2P1S3 * 0);
    calc3KPower1S3 = Math.floor(calc2KPower1S3 * 0);
  }

  //技2
  if (moveClass2S3 === "物理") {
    calc3P2S3 = Math.floor(calc2P2S3 * PhysicalTekiA3MyB);
    calc3KPower2S3 = Math.floor(calc2KPower2S3 * PhysicalTekiA3MyB);
  } else if (moveClass2S3 === "特殊") {
    calc3P2S3 = Math.floor(calc2P2S3 * SpecialTekiC3MyD);
    calc3KPower2S3 = Math.floor(calc2KPower2S3 * SpecialTekiC3MyD);
  } else {
    calc3P2S3 = Math.floor(calc2P2S3 * 0);
    calc3KPower2S3 = Math.floor(calc2KPower2S3 * 0);
  }

  //技3
  if (moveClass3S3 === "物理") {
    calc3P3S3 = Math.floor(calc2P3S3 * PhysicalTekiA3MyB);
    calc3KPower3S3 = Math.floor(calc2KPower3S3 * PhysicalTekiA3MyB);
  } else if (moveClass3S3 === "特殊") {
    calc3P3S3 = Math.floor(calc2P3S3 * SpecialTekiC3MyD);
    calc3KPower3S3 = Math.floor(calc2KPower3S3 * SpecialTekiC3MyD);
  } else {
    calc3P3S3 = Math.floor(calc2P3S3 * 0);
    calc3KPower3S3 = Math.floor(calc2KPower3S3 * 0);
  }

  //技4
  if (moveClass4S3 === "物理") {
    calc3P4S3 = Math.floor(calc2P4S3 * PhysicalTekiA3MyB);
    calc3KPower4S3 = Math.floor(calc2KPower4S3 * PhysicalTekiA3MyB);
  } else if (moveClass4S3 === "特殊") {
    calc3P4S3 = Math.floor(calc2P4S3 * SpecialTekiC3MyD);
    calc3KPower4S3 = Math.floor(calc2KPower4S3 * SpecialTekiC3MyD);
  } else {
    calc3P4S3 = Math.floor(calc2P4S3 * 0);
    calc3KPower4S3 = Math.floor(calc2KPower4S3 * 0);
  }

  //敵型4が攻撃
  // 技1
  if (moveClass1S4 === "物理") {
    calc3P1S4 = Math.floor(calc2P1S4 * PhysicalTekiA4MyB);
    calc3KPower1S4 = Math.floor(calc2KPower1S4 * PhysicalTekiA4MyB);
  } else if (moveClass1S4 === "特殊") {
    calc3P1S4 = Math.floor(calc2P1S4 * SpecialTekiC4MyD);
    calc3KPower1S4 = Math.floor(calc2KPower1S4 * SpecialTekiC4MyD);
  } else {
    calc3P1S4 = Math.floor(calc2P1S4 * 0);
    calc3KPower1S4 = Math.floor(calc2KPower1S4 * 0);
  }

  //技2
  if (moveClass2S4 === "物理") {
    calc3P2S4 = Math.floor(calc2P2S4 * PhysicalTekiA4MyB);
    calc3KPower2S4 = Math.floor(calc2KPower2S4 * PhysicalTekiA4MyB);
  } else if (moveClass2S4 === "特殊") {
    calc3P2S4 = Math.floor(calc2P2S4 * SpecialTekiC4MyD);
    calc3KPower2S4 = Math.floor(calc2KPower2S4 * SpecialTekiC4MyD);
  } else {
    calc3P2S4 = Math.floor(calc2P2S4 * 0);
    calc3KPower2S4 = Math.floor(calc2KPower2S4 * 0);
  }

  //技3
  if (moveClass3S4 === "物理") {
    calc3P3S4 = Math.floor(calc2P3S4 * PhysicalTekiA4MyB);
    calc3KPower3S4 = Math.floor(calc2KPower3S4 * PhysicalTekiA4MyB);
  } else if (moveClass3S4 === "特殊") {
    calc3P3S4 = Math.floor(calc2P3S4 * SpecialTekiC4MyD);
    calc3KPower3S4 = Math.floor(calc2KPower3S4 * SpecialTekiC4MyD);
  } else {
    calc3P3S4 = Math.floor(calc2P3S4 * 0);
    calc3KPower3S4 = Math.floor(calc2KPower3S4 * 0);
  }

  //技4
  if (moveClass4S4 === "物理") {
    calc3P4S4 = Math.floor(calc2P4S4 * PhysicalTekiA4MyB);
    calc3KPower4S4 = Math.floor(calc2KPower4S4 * PhysicalTekiA4MyB);
  } else if (moveClass4S4 === "特殊") {
    calc3P4S4 = Math.floor(calc2P4S4 * SpecialTekiC4MyD);
    calc3KPower4S4 = Math.floor(calc2KPower4S4 * SpecialTekiC4MyD);
  } else {
    calc3P4S4 = Math.floor(calc2P4S4 * 0);
    calc3KPower4S4 = Math.floor(calc2KPower4S4 * 0);
  }

  /////////急所//////////
  let calc3P1_S1Critical; //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P1_S2Critical; //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P1_S3Critical; //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P1_S4Critical; //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  let calc3P2_S1Critical; //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P2_S2Critical; //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P2_S3Critical; //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P2_S4Critical; //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  let calc3P3_S1Critical; //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P3_S2Critical; //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P3_S3Critical; //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P3_S4Critical; //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  let calc3P4_S1Critical; //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P4_S2Critical; //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P4_S3Critical; //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc3P4_S4Critical; //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  let calc3KS1Power1Critical; //自分ポケ技1が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS1Power2Critical; //自分ポケ技2が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS1Power3Critical; //自分ポケ技3が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS1Power4Critical; //自分ポケ技4が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  let calc3KS2Power1Critical; //自分ポケ技1が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS2Power2Critical; //自分ポケ技2が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS2Power3Critical; //自分ポケ技3が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS2Power4Critical; //自分ポケ技4が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  let calc3KS3Power1Critical; //自分ポケ技1が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS3Power2Critical; //自分ポケ技2が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS3Power3Critical; //自分ポケ技3が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS3Power4Critical; //自分ポケ技4が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  let calc3KS4Power1Critical; //自分ポケ技1が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS4Power2Critical; //自分ポケ技2が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS4Power3Critical; //自分ポケ技3が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc3KS4Power4Critical; //自分ポケ技4が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  //敵ポケ１の型が使う4つの技
  let calc3P1S1Critical; //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc3P2S1Critical; //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc3P3S1Critical; //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
  let calc3P4S1Critical; //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)

  //敵ポケ2の型が使う4つの技
  let calc3P1S2Critical; //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc3P2S2Critical; //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc3P3S2Critical; //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc3P4S2Critical; //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)

  //敵ポケ3の型が使う4つの技
  let calc3P1S3Critical; //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc3P2S3Critical; //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
  let calc3P3S3Critical; //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc3P4S3Critical; //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)

  //敵ポケ4の型が使う4つの技
  let calc3P1S4Critical; //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc3P2S4Critical; //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc3P3S4Critical; //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc3P4S4Critical; //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

  let calc3KPower1S1Critical; //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc3KPower2S1Critical; //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc3KPower3S1Critical; //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc3KPower4S1Critical; //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  let calc3KPower1S2Critical; //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc3KPower2S2Critical; //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc3KPower3S2Critical; //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc3KPower4S2Critical; //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  let calc3KPower1S3Critical; //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc3KPower2S3Critical; //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc3KPower3S3Critical; //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc3KPower4S3Critical; //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  let calc3KPower1S4Critical; //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc3KPower2S4Critical; //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc3KPower3S4Critical; //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc3KPower4S4Critical; //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //急所 myA1 tekiB4つ
  let PhysicalMyATekiB1Critical = mypokeStatusARankedCritical / tekipokeStatusBS1RankedCritical;
  let PhysicalMyATekiB2Critical = mypokeStatusARankedCritical / tekipokeStatusBS2RankedCritical;
  let PhysicalMyATekiB3Critical = mypokeStatusARankedCritical / tekipokeStatusBS3RankedCritical;
  let PhysicalMyATekiB4Critical = mypokeStatusARankedCritical / tekipokeStatusBS4RankedCritical;

  //急所 myC1つ TekiD4つ
  let SpecialMyCTekiD1Critical = mypokeStatusCRankedCritical / tekipokeStatusDS1RankedCritical;
  let SpecialMyCTekiD2Critical = mypokeStatusCRankedCritical / tekipokeStatusDS2RankedCritical;
  let SpecialMyCTekiD3Critical = mypokeStatusCRankedCritical / tekipokeStatusDS3RankedCritical;
  let SpecialMyCTekiD4Critical = mypokeStatusCRankedCritical / tekipokeStatusDS4RankedCritical;

  //敵型1へ攻撃
  if (moveClass1 === "物理") {
    calc3P1_S1Critical = Math.floor(calc2P1 * PhysicalMyATekiB1Critical);
    calc3KS1Power1Critical = Math.floor(calc2KS1Power1 * PhysicalMyATekiB1Critical);
  } else if (moveClass1 === "特殊") {
    calc3P1_S1Critical = Math.floor(calc2P1 * SpecialMyCTekiD1Critical);
    calc3KS1Power1Critical = Math.floor(calc2KS1Power1 * SpecialMyCTekiD1Critical);
  } else {
    calc3P1_S1Critical = Math.floor(calc2P1 * 0);
    calc3KS1Power1Critical = Math.floor(calc2KS1Power1 * 0);
  }

  if (moveClass2 === "物理") {
    calc3P2_S1Critical = Math.floor(calc2P2 * PhysicalMyATekiB1Critical);
    calc3KS1Power2Critical = Math.floor(calc2KS1Power2 * PhysicalMyATekiB1Critical);
  } else if (moveClass2 === "特殊") {
    calc3P2_S1Critical = Math.floor(calc2P2 * SpecialMyCTekiD1Critical);
    calc3KS1Power2Critical = Math.floor(calc2KS1Power2 * SpecialMyCTekiD1Critical);
  } else {
    calc3P2_S1Critical = Math.floor(calc2P2 * 0);
    calc3KS1Power2Critical = Math.floor(calc2KS1Power2 * 0);
  }

  if (moveClass3 === "物理") {
    calc3P3_S1Critical = Math.floor(calc2P3 * PhysicalMyATekiB1Critical);
    calc3KS1Power3Critical = Math.floor(calc2KS1Power3 * PhysicalMyATekiB1Critical);
  } else if (moveClass3 === "特殊") {
    calc3P3_S1Critical = Math.floor(calc2P3 * SpecialMyCTekiD1Critical);
    calc3KS1Power3Critical = Math.floor(calc2KS1Power3 * SpecialMyCTekiD1Critical);
  } else {
    calc3P3_S1Critical = Math.floor(calc2P3 * 0);
    calc3KS1Power3Critical = Math.floor(calc2KS1Power3 * 0);
  }

  if (moveClass4 === "物理") {
    calc3P4_S1Critical = Math.floor(calc2P4 * PhysicalMyATekiB1Critical);
    calc3KS1Power4Critical = Math.floor(calc2KS1Power4 * PhysicalMyATekiB1Critical);
  } else if (moveClass4 === "特殊") {
    calc3P4_S1Critical = Math.floor(calc2P4 * SpecialMyCTekiD1Critical);
    calc3KS1Power4Critical = Math.floor(calc2KS1Power4 * SpecialMyCTekiD1Critical);
  } else {
    calc3P4_S1Critical = Math.floor(calc2P4 * 0);
    calc3KS1Power4Critical = Math.floor(calc2KS1Power4 * 0);
  }

  //敵型2へ攻撃
  if (moveClass1 === "物理") {
    calc3P1_S2Critical = Math.floor(calc2P1 * PhysicalMyATekiB2Critical);
    calc3KS2Power1Critical = Math.floor(calc2KS2Power1 * PhysicalMyATekiB2Critical);
  } else if (moveClass1 === "特殊") {
    calc3P1_S2Critical = Math.floor(calc2P1 * SpecialMyCTekiD2Critical);
    calc3KS2Power1Critical = Math.floor(calc2KS2Power1 * SpecialMyCTekiD2Critical);
  } else {
    calc3P1_S2Critical = Math.floor(calc2P1 * 0);
    calc3KS2Power1Critical = Math.floor(calc2KS2Power1 * 0);
  }

  if (moveClass2 === "物理") {
    calc3P2_S2Critical = Math.floor(calc2P2 * PhysicalMyATekiB2Critical);
    calc3KS2Power2Critical = Math.floor(calc2KS2Power2 * PhysicalMyATekiB2Critical);
  } else if (moveClass2 === "特殊") {
    calc3P2_S2Critical = Math.floor(calc2P2 * SpecialMyCTekiD2Critical);
    calc3KS2Power2Critical = Math.floor(calc2KS2Power2 * SpecialMyCTekiD2Critical);
  } else {
    calc3P2_S2Critical = Math.floor(calc2P2 * 0);
    calc3KS2Power2Critical = Math.floor(calc2KS2Power2 * 0);
  }

  if (moveClass3 === "物理") {
    calc3P3_S2Critical = Math.floor(calc2P3 * PhysicalMyATekiB2Critical);
    calc3KS2Power3Critical = Math.floor(calc2KS2Power3 * PhysicalMyATekiB2Critical);
  } else if (moveClass3 === "特殊") {
    calc3P3_S2Critical = Math.floor(calc2P3 * SpecialMyCTekiD2Critical);
    calc3KS2Power3Critical = Math.floor(calc2KS2Power3 * SpecialMyCTekiD2Critical);
  } else {
    calc3P3_S2Critical = Math.floor(calc2P3 * 0);
    calc3KS2Power3Critical = Math.floor(calc2KS2Power3 * 0);
  }

  if (moveClass4 === "物理") {
    calc3P4_S2Critical = Math.floor(calc2P4 * PhysicalMyATekiB2Critical);
    calc3KS2Power4Critical = Math.floor(calc2KS2Power4 * PhysicalMyATekiB2Critical);
  } else if (moveClass4 === "特殊") {
    calc3P4_S2Critical = Math.floor(calc2P4 * SpecialMyCTekiD2Critical);
    calc3KS2Power4Critical = Math.floor(calc2KS2Power4 * SpecialMyCTekiD2Critical);
  } else {
    calc3P4_S2Critical = Math.floor(calc2P4 * 0);
    calc3KS2Power4Critical = Math.floor(calc2KS2Power4 * 0);
  }

  //敵型3へ攻撃
  if (moveClass1 === "物理") {
    calc3P1_S3Critical = Math.floor(calc2P1 * PhysicalMyATekiB3Critical);
    calc3KS3Power1Critical = Math.floor(calc2KS3Power1 * PhysicalMyATekiB3Critical);
  } else if (moveClass1 === "特殊") {
    calc3P1_S3Critical = Math.floor(calc2P1 * SpecialMyCTekiD3Critical);
    calc3KS3Power1Critical = Math.floor(calc2KS3Power1 * SpecialMyCTekiD3Critical);
  } else {
    calc3P1_S3Critical = Math.floor(calc2P1 * 0);
    calc3KS3Power1Critical = Math.floor(calc2KS3Power1 * 0);
  }

  if (moveClass2 === "物理") {
    calc3P2_S3Critical = Math.floor(calc2P2 * PhysicalMyATekiB3Critical);
    calc3KS3Power2Critical = Math.floor(calc2KS3Power2 * PhysicalMyATekiB3Critical);
  } else if (moveClass2 === "特殊") {
    calc3P2_S3Critical = Math.floor(calc2P2 * SpecialMyCTekiD3Critical);
    calc3KS3Power2Critical = Math.floor(calc2KS3Power2 * SpecialMyCTekiD3Critical);
  } else {
    calc3P2_S3Critical = Math.floor(calc2P2 * 0);
    calc3KS3Power2Critical = Math.floor(calc2KS3Power2 * 0);
  }

  if (moveClass3 === "物理") {
    calc3P3_S3Critical = Math.floor(calc2P3 * PhysicalMyATekiB3Critical);
    calc3KS3Power3Critical = Math.floor(calc2KS3Power3 * PhysicalMyATekiB3Critical);
  } else if (moveClass3 === "特殊") {
    calc3P3_S3Critical = Math.floor(calc2P3 * SpecialMyCTekiD3Critical);
    calc3KS3Power3Critical = Math.floor(calc2KS3Power3 * SpecialMyCTekiD3Critical);
  } else {
    calc3P3_S3Critical = Math.floor(calc2P3 * 0);
    calc3KS3Power3Critical = Math.floor(calc2KS3Power3 * 0);
  }

  if (moveClass4 === "物理") {
    calc3P4_S3Critical = Math.floor(calc2P4 * PhysicalMyATekiB3Critical);
    calc3KS3Power4Critical = Math.floor(calc2KS3Power4 * PhysicalMyATekiB3Critical);
  } else if (moveClass4 === "特殊") {
    calc3P4_S3Critical = Math.floor(calc2P4 * SpecialMyCTekiD3Critical);
    calc3KS3Power4Critical = Math.floor(calc2KS3Power4 * SpecialMyCTekiD3Critical);
  } else {
    calc3P4_S3Critical = Math.floor(calc2P4 * 0);
    calc3KS3Power4Critical = Math.floor(calc2KS3Power4 * 0);
  }

  //敵型4へ攻撃
  if (moveClass1 === "物理") {
    calc3P1_S4Critical = Math.floor(calc2P1 * PhysicalMyATekiB4Critical);
    calc3KS4Power1Critical = Math.floor(calc2KS4Power1 * PhysicalMyATekiB4Critical);
  } else if (moveClass1 === "特殊") {
    calc3P1_S4Critical = Math.floor(calc2P1 * SpecialMyCTekiD4Critical);
    calc3KS4Power1Critical = Math.floor(calc2KS4Power1 * SpecialMyCTekiD4Critical);
  } else {
    calc3P1_S4Critical = Math.floor(calc2P1 * 0);
    calc3KS4Power1Critical = Math.floor(calc2KS4Power1 * 0);
  }

  if (moveClass2 === "物理") {
    calc3P2_S4Critical = Math.floor(calc2P2 * PhysicalMyATekiB4Critical);
    calc3KS4Power2Critical = Math.floor(calc2KS4Power2 * PhysicalMyATekiB4Critical);
  } else if (moveClass2 === "特殊") {
    calc3P2_S4Critical = Math.floor(calc2P2 * SpecialMyCTekiD4Critical);
    calc3KS4Power2Critical = Math.floor(calc2KS4Power2 * SpecialMyCTekiD4Critical);
  } else {
    calc3P2_S4Critical = Math.floor(calc2P2 * 0);
    calc3KS4Power2Critical = Math.floor(calc2KS4Power2 * 0);
  }

  if (moveClass3 === "物理") {
    calc3P3_S4Critical = Math.floor(calc2P3 * PhysicalMyATekiB4Critical);
    calc3KS4Power3Critical = Math.floor(calc2KS4Power3 * PhysicalMyATekiB4Critical);
  } else if (moveClass3 === "特殊") {
    calc3P3_S4Critical = Math.floor(calc2P3 * SpecialMyCTekiD4Critical);
    calc3KS4Power3Critical = Math.floor(calc2KS4Power3 * SpecialMyCTekiD4Critical);
  } else {
    calc3P3_S4Critical = Math.floor(calc2P3 * 0);
    calc3KS4Power3Critical = Math.floor(calc2KS4Power3 * 0);
  }

  if (moveClass4 === "物理") {
    calc3P4_S4Critical = Math.floor(calc2P4 * PhysicalMyATekiB4Critical);
    calc3KS4Power4Critical = Math.floor(calc2KS4Power4 * PhysicalMyATekiB4Critical);
  } else if (moveClass4 === "特殊") {
    calc3P4_S4Critical = Math.floor(calc2P4 * SpecialMyCTekiD4Critical);
    calc3KS4Power4Critical = Math.floor(calc2KS4Power4 * SpecialMyCTekiD4Critical);
  } else {
    calc3P4_S4Critical = Math.floor(calc2P4 * 0);
    calc3KS4Power4Critical = Math.floor(calc2KS4Power4 * 0);
  }

  //急所 tekiA4つ myB1つ
  let PhysicalTekiA1MyBCritical = tekipokeStatusAS1RankedCritical / mypokeStatusBRankedCritical;
  let PhysicalTekiA2MyBCritical = tekipokeStatusAS2RankedCritical / mypokeStatusBRankedCritical;
  let PhysicalTekiA3MyBCritical = tekipokeStatusAS3RankedCritical / mypokeStatusBRankedCritical;
  let PhysicalTekiA4MyBCritical = tekipokeStatusAS4RankedCritical / mypokeStatusBRankedCritical;

  //急所 tekiC4つ  mayD1つ
  let SpecialTekiC1MyDCritical = tekipokeStatusCS1RankedCritical / mypokeStatusDRankedCritical;
  let SpecialTekiC2MyDCritical = tekipokeStatusCS2RankedCritical / mypokeStatusDRankedCritical;
  let SpecialTekiC3MyDCritical = tekipokeStatusCS3RankedCritical / mypokeStatusDRankedCritical;
  let SpecialTekiC4MyDCritical = tekipokeStatusCS4RankedCritical / mypokeStatusDRankedCritical;

  //敵型1が攻撃
  // 技1
  if (moveClass1S1 === "物理") {
    calc3P1S1Critical = Math.floor(calc2P1S1 * PhysicalTekiA1MyBCritical);
    calc3KPower1S1Critical = Math.floor(calc2KPower1S1 * PhysicalTekiA1MyBCritical);
  } else if (moveClass1S1 === "特殊") {
    calc3P1S1Critical = Math.floor(calc2P1S1 * SpecialTekiC1MyDCritical);
    calc3KPower1S1Critical = Math.floor(calc2KPower1S1 * SpecialTekiC1MyDCritical);
  } else {
    calc3P1S1Critical = Math.floor(calc2P1S1 * 0);
    calc3KPower1S1Critical = Math.floor(calc2KPower1S1 * 0);
  }

  //技2
  if (moveClass2S1 === "物理") {
    calc3P2S1Critical = Math.floor(calc2P2S1 * PhysicalTekiA1MyBCritical);
    calc3KPower2S1Critical = Math.floor(calc2KPower2S1 * PhysicalTekiA1MyBCritical);
  } else if (moveClass2S1 === "特殊") {
    calc3P2S1Critical = Math.floor(calc2P2S1 * SpecialTekiC1MyDCritical);
    calc3KPower2S1Critical = Math.floor(calc2KPower2S1 * SpecialTekiC1MyDCritical);
  } else {
    calc3P2S1Critical = Math.floor(calc2P2S1 * 0);
    calc3KPower2S1Critical = Math.floor(calc2KPower2S1 * 0);
  }

  //技3
  if (moveClass3S1 === "物理") {
    calc3P3S1Critical = Math.floor(calc2P3S1 * PhysicalTekiA1MyBCritical);
    calc3KPower3S1Critical = Math.floor(calc2KPower3S1 * PhysicalTekiA1MyBCritical);
  } else if (moveClass3S1 === "特殊") {
    calc3P3S1Critical = Math.floor(calc2P3S1 * SpecialTekiC1MyDCritical);
    calc3KPower3S1Critical = Math.floor(calc2KPower3S1 * SpecialTekiC1MyDCritical);
  } else {
    calc3P3S1Critical = Math.floor(calc2P3S1 * 0);
    calc3KPower3S1Critical = Math.floor(calc2KPower3S1 * 0);
  }

  //技4
  if (moveClass4S1 === "物理") {
    calc3P4S1Critical = Math.floor(calc2P4S1 * PhysicalTekiA1MyBCritical);
    calc3KPower4S1Critical = Math.floor(calc2KPower4S1 * PhysicalTekiA1MyBCritical);
  } else if (moveClass4S1 === "特殊") {
    calc3P4S1Critical = Math.floor(calc2P4S1 * SpecialTekiC1MyDCritical);
    calc3KPower4S1Critical = Math.floor(calc2KPower4S1 * SpecialTekiC1MyDCritical);
  } else {
    calc3P4S1Critical = Math.floor(calc2P4S1 * 0);
    calc3KPower4S1Critical = Math.floor(calc2KPower4S1 * 0);
  }

  //敵型2が攻撃
  // 技1
  if (moveClass1S2 === "物理") {
    calc3P1S2Critical = Math.floor(calc2P1S2 * PhysicalTekiA2MyBCritical);
    calc3KPower1S2Critical = Math.floor(calc2KPower1S2 * PhysicalTekiA2MyBCritical);
  } else if (moveClass1S2 === "特殊") {
    calc3P1S2Critical = Math.floor(calc2P1S2 * SpecialTekiC2MyDCritical);
    calc3KPower1S2Critical = Math.floor(calc2KPower1S2 * SpecialTekiC2MyDCritical);
  } else {
    calc3P1S2Critical = Math.floor(calc2P1S2 * 0);
    calc3KPower1S2Critical = Math.floor(calc2KPower1S2 * 0);
  }

  //技2
  if (moveClass2S2 === "物理") {
    calc3P2S2Critical = Math.floor(calc2P2S2 * PhysicalTekiA2MyBCritical);
    calc3KPower2S2Critical = Math.floor(calc2KPower2S2 * PhysicalTekiA2MyBCritical);
  } else if (moveClass2S2 === "特殊") {
    calc3P2S2Critical = Math.floor(calc2P2S2 * SpecialTekiC2MyDCritical);
    calc3KPower2S2Critical = Math.floor(calc2KPower2S2 * SpecialTekiC2MyDCritical);
  } else {
    calc3P2S2Critical = Math.floor(calc2P2S2 * 0);
    calc3KPower2S2Critical = Math.floor(calc2KPower2S2 * 0);
  }

  //技3
  if (moveClass3S2 === "物理") {
    calc3P3S2Critical = Math.floor(calc2P3S2 * PhysicalTekiA2MyBCritical);
    calc3KPower3S2Critical = Math.floor(calc2KPower3S2 * PhysicalTekiA2MyBCritical);
  } else if (moveClass3S2 === "特殊") {
    calc3P3S2Critical = Math.floor(calc2P3S2 * SpecialTekiC2MyDCritical);
    calc3KPower3S2Critical = Math.floor(calc2KPower3S2 * SpecialTekiC2MyDCritical);
  } else {
    calc3P3S2Critical = Math.floor(calc2P3S2 * 0);
    calc3KPower3S2Critical = Math.floor(calc2KPower3S2 * 0);
  }

  //技4
  if (moveClass4S2 === "物理") {
    calc3P4S2Critical = Math.floor(calc2P4S2 * PhysicalTekiA2MyBCritical);
    calc3KPower4S2Critical = Math.floor(calc2KPower4S2 * PhysicalTekiA2MyBCritical);
  } else if (moveClass4S2 === "特殊") {
    calc3P4S2Critical = Math.floor(calc2P4S2 * SpecialTekiC2MyDCritical);
    calc3KPower4S2Critical = Math.floor(calc2KPower4S2 * SpecialTekiC2MyDCritical);
  } else {
    calc3P4S2Critical = Math.floor(calc2P4S2 * 0);
    calc3KPower4S2Critical = Math.floor(calc2KPower4S2 * 0);
  }

  //敵型3が攻撃
  // 技1
  if (moveClass1S3 === "物理") {
    calc3P1S3Critical = Math.floor(calc2P1S3 * PhysicalTekiA3MyBCritical);
    calc3KPower1S3Critical = Math.floor(calc2KPower1S3 * PhysicalTekiA3MyBCritical);
  } else if (moveClass1S3 === "特殊") {
    calc3P1S3Critical = Math.floor(calc2P1S3 * SpecialTekiC3MyDCritical);
    calc3KPower1S3Critical = Math.floor(calc2KPower1S3 * SpecialTekiC3MyDCritical);
  } else {
    calc3P1S3Critical = Math.floor(calc2P1S3 * 0);
    calc3KPower1S3Critical = Math.floor(calc2KPower1S3 * 0);
  }

  //技2
  if (moveClass2S3 === "物理") {
    calc3P2S3Critical = Math.floor(calc2P2S3 * PhysicalTekiA3MyBCritical);
    calc3KPower2S3Critical = Math.floor(calc2KPower2S3 * PhysicalTekiA3MyBCritical);
  } else if (moveClass2S3 === "特殊") {
    calc3P2S3Critical = Math.floor(calc2P2S3 * SpecialTekiC3MyDCritical);
    calc3KPower2S3Critical = Math.floor(calc2KPower2S3 * SpecialTekiC3MyDCritical);
  } else {
    calc3P2S3Critical = Math.floor(calc2P2S3 * 0);
    calc3KPower2S3Critical = Math.floor(calc2KPower2S3 * 0);
  }

  //技3
  if (moveClass3S3 === "物理") {
    calc3P3S3Critical = Math.floor(calc2P3S3 * PhysicalTekiA3MyBCritical);
    calc3KPower3S3Critical = Math.floor(calc2KPower3S3 * PhysicalTekiA3MyBCritical);
  } else if (moveClass3S3 === "特殊") {
    calc3P3S3Critical = Math.floor(calc2P3S3 * SpecialTekiC3MyDCritical);
    calc3KPower3S3Critical = Math.floor(calc2KPower3S3 * SpecialTekiC3MyDCritical);
  } else {
    calc3P3S3Critical = Math.floor(calc2P3S3 * 0);
    calc3KPower3S3Critical = Math.floor(calc2KPower3S3 * 0);
  }

  //技4
  if (moveClass4S3 === "物理") {
    calc3P4S3Critical = Math.floor(calc2P4S3 * PhysicalTekiA3MyBCritical);
    calc3KPower4S3Critical = Math.floor(calc2KPower4S3 * PhysicalTekiA3MyBCritical);
  } else if (moveClass4S3 === "特殊") {
    calc3P4S3Critical = Math.floor(calc2P4S3 * SpecialTekiC3MyDCritical);
    calc3KPower4S3Critical = Math.floor(calc2KPower4S3 * SpecialTekiC3MyDCritical);
  } else {
    calc3P4S3Critical = Math.floor(calc2P4S3 * 0);
    calc3KPower4S3Critical = Math.floor(calc2KPower4S3 * 0);
  }

  //敵型4が攻撃
  // 技1
  if (moveClass1S4 === "物理") {
    calc3P1S4Critical = Math.floor(calc2P1S4 * PhysicalTekiA4MyBCritical);
    calc3KPower1S4Critical = Math.floor(calc2KPower1S4 * PhysicalTekiA4MyBCritical);
  } else if (moveClass1S4 === "特殊") {
    calc3P1S4Critical = Math.floor(calc2P1S4 * SpecialTekiC4MyDCritical);
    calc3KPower1S4Critical = Math.floor(calc2KPower1S4 * SpecialTekiC4MyDCritical);
  } else {
    calc3P1S4Critical = Math.floor(calc2P1S4 * 0);
    calc3KPower1S4Critical = Math.floor(calc2KPower1S4 * 0);
  }

  //技2
  if (moveClass2S4 === "物理") {
    calc3P2S4Critical = Math.floor(calc2P2S4 * PhysicalTekiA4MyBCritical);
    calc3KPower2S4Critical = Math.floor(calc2KPower2S4 * PhysicalTekiA4MyBCritical);
  } else if (moveClass2S4 === "特殊") {
    calc3P2S4Critical = Math.floor(calc2P2S4 * SpecialTekiC4MyDCritical);
    calc3KPower2S4Critical = Math.floor(calc2KPower2S4 * SpecialTekiC4MyDCritical);
  } else {
    calc3P2S4Critical = Math.floor(calc2P2S4 * 0);
    calc3KPower2S4Critical = Math.floor(calc2KPower2S4 * 0);
  }

  //技3
  if (moveClass3S4 === "物理") {
    calc3P3S4Critical = Math.floor(calc2P3S4 * PhysicalTekiA4MyBCritical);
    calc3KPower3S4Critical = Math.floor(calc2KPower3S4 * PhysicalTekiA4MyBCritical);
  } else if (moveClass3S4 === "特殊") {
    calc3P3S4Critical = Math.floor(calc2P3S4 * SpecialTekiC4MyDCritical);
    calc3KPower3S4Critical = Math.floor(calc2KPower3S4 * SpecialTekiC4MyDCritical);
  } else {
    calc3P3S4Critical = Math.floor(calc2P3S4 * 0);
    calc3KPower3S4Critical = Math.floor(calc2KPower3S4 * 0);
  }

  //技4
  if (moveClass4S4 === "物理") {
    calc3P4S4Critical = Math.floor(calc2P4S4 * PhysicalTekiA4MyBCritical);
    calc3KPower4S4Critical = Math.floor(calc2KPower4S4 * PhysicalTekiA4MyBCritical);
  } else if (moveClass4S4 === "特殊") {
    calc3P4S4Critical = Math.floor(calc2P4S4 * SpecialTekiC4MyDCritical);
    calc3KPower4S4Critical = Math.floor(calc2KPower4S4 * SpecialTekiC4MyDCritical);
  } else {
    calc3P4S4Critical = Math.floor(calc2P4S4 * 0);
    calc3KPower4S4Critical = Math.floor(calc2KPower4S4 * 0);
  }

  ///////////////////////calc3///////////////////////////////
  calc3P1_S1 = Math.floor(calc3P1_S1 / 50); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1_S2 = Math.floor(calc3P1_S2 / 50); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1_S3 = Math.floor(calc3P1_S3 / 50); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1_S4 = Math.floor(calc3P1_S4 / 50); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3P2_S1 = Math.floor(calc3P2_S1 / 50); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2_S2 = Math.floor(calc3P2_S2 / 50); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2_S3 = Math.floor(calc3P2_S3 / 50); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2_S4 = Math.floor(calc3P2_S4 / 50); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3P3_S1 = Math.floor(calc3P3_S1 / 50); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3_S2 = Math.floor(calc3P3_S2 / 50); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3_S3 = Math.floor(calc3P3_S3 / 50); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3_S4 = Math.floor(calc3P3_S4 / 50); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3P4_S1 = Math.floor(calc3P4_S1 / 50); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4_S2 = Math.floor(calc3P4_S2 / 50); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4_S3 = Math.floor(calc3P4_S3 / 50); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4_S4 = Math.floor(calc3P4_S4 / 50); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS1Power1 = Math.floor(calc3KS1Power1 / 50); //自分ポケ技1が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS1Power2 = Math.floor(calc3KS1Power2 / 50); //自分ポケ技2が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS1Power3 = Math.floor(calc3KS1Power3 / 50); //自分ポケ技3が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS1Power4 = Math.floor(calc3KS1Power4 / 50); //自分ポケ技4が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS2Power1 = Math.floor(calc3KS2Power1 / 50); //自分ポケ技1が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS2Power2 = Math.floor(calc3KS2Power2 / 50); //自分ポケ技2が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS2Power3 = Math.floor(calc3KS2Power3 / 50); //自分ポケ技3が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS2Power4 = Math.floor(calc3KS2Power4 / 50); //自分ポケ技4が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS3Power1 = Math.floor(calc3KS3Power1 / 50); //自分ポケ技1が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS3Power2 = Math.floor(calc3KS3Power2 / 50); //自分ポケ技2が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS3Power3 = Math.floor(calc3KS3Power3 / 50); //自分ポケ技3が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS3Power4 = Math.floor(calc3KS3Power4 / 50); //自分ポケ技4が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS4Power1 = Math.floor(calc3KS4Power1 / 50); //自分ポケ技1が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS4Power2 = Math.floor(calc3KS4Power2 / 50); //自分ポケ技2が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS4Power3 = Math.floor(calc3KS4Power3 / 50); //自分ポケ技3が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS4Power4 = Math.floor(calc3KS4Power4 / 50); //自分ポケ技4が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  //敵ポケ１の型が使う4つの技
  calc3P1S1 = Math.floor(calc3P1S1 / 50); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2S1 = Math.floor(calc3P2S1 / 50); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3S1 = Math.floor(calc3P3S1 / 50); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4S1 = Math.floor(calc3P4S1 / 50); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

  //敵ポケ2の型が使う4つの技
  calc3P1S2 = Math.floor(calc3P1S2 / 50); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2S2 = Math.floor(calc3P2S2 / 50); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3S2 = Math.floor(calc3P3S2 / 50); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4S2 = Math.floor(calc3P4S2 / 50); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

  //敵ポケ3の型が使う4つの技
  calc3P1S3 = Math.floor(calc3P1S3 / 50); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2S3 = Math.floor(calc3P2S3 / 50); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3S3 = Math.floor(calc3P3S3 / 50); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4S3 = Math.floor(calc3P4S3 / 50); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

  //敵ポケ4の型が使う4つの技
  calc3P1S4 = Math.floor(calc3P1S4 / 50); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2S4 = Math.floor(calc3P2S4 / 50); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3S4 = Math.floor(calc3P3S4 / 50); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4S4 = Math.floor(calc3P4S4 / 50); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

  calc3KPower1S1 = Math.floor(calc3KPower1S1 / 50); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower2S1 = Math.floor(calc3KPower2S1 / 50); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower3S1 = Math.floor(calc3KPower3S1 / 50); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower4S1 = Math.floor(calc3KPower4S1 / 50); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KPower1S2 = Math.floor(calc3KPower1S2 / 50); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower2S2 = Math.floor(calc3KPower2S2 / 50); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower3S2 = Math.floor(calc3KPower3S2 / 50); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower4S2 = Math.floor(calc3KPower4S2 / 50); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KPower1S3 = Math.floor(calc3KPower1S3 / 50); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower2S3 = Math.floor(calc3KPower2S3 / 50); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower3S3 = Math.floor(calc3KPower3S3 / 50); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower4S3 = Math.floor(calc3KPower4S3 / 50); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KPower1S4 = Math.floor(calc3KPower1S4 / 50); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower2S4 = Math.floor(calc3KPower2S4 / 50); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower3S4 = Math.floor(calc3KPower3S4 / 50); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower4S4 = Math.floor(calc3KPower4S4 / 50); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  /////////急所//////////
  calc3P1_S1Critical = Math.floor(calc3P1_S1Critical / 50); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1_S2Critical = Math.floor(calc3P1_S2Critical / 50); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1_S3Critical = Math.floor(calc3P1_S3Critical / 50); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1_S4Critical = Math.floor(calc3P1_S4Critical / 50); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3P2_S1Critical = Math.floor(calc3P2_S1Critical / 50); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2_S2Critical = Math.floor(calc3P2_S2Critical / 50); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2_S3Critical = Math.floor(calc3P2_S3Critical / 50); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2_S4Critical = Math.floor(calc3P2_S4Critical / 50); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3P3_S1Critical = Math.floor(calc3P3_S1Critical / 50); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3_S2Critical = Math.floor(calc3P3_S2Critical / 50); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3_S3Critical = Math.floor(calc3P3_S3Critical / 50); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3_S4Critical = Math.floor(calc3P3_S4Critical / 50); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3P4_S1Critical = Math.floor(calc3P4_S1Critical / 50); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4_S2Critical = Math.floor(calc3P4_S2Critical / 50); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4_S3Critical = Math.floor(calc3P4_S3Critical / 50); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4_S4Critical = Math.floor(calc3P4_S4Critical / 50); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS1Power1Critical = Math.floor(calc3KS1Power1Critical / 50); //自分ポケ技1が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS1Power2Critical = Math.floor(calc3KS1Power2Critical / 50); //自分ポケ技2が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS1Power3Critical = Math.floor(calc3KS1Power3Critical / 50); //自分ポケ技3が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS1Power4Critical = Math.floor(calc3KS1Power4Critical / 50); //自分ポケ技4が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS2Power1Critical = Math.floor(calc3KS2Power1Critical / 50); //自分ポケ技1が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS2Power2Critical = Math.floor(calc3KS2Power2Critical / 50); //自分ポケ技2が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS2Power3Critical = Math.floor(calc3KS2Power3Critical / 50); //自分ポケ技3が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS2Power4Critical = Math.floor(calc3KS2Power4Critical / 50); //自分ポケ技4が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS3Power1Critical = Math.floor(calc3KS3Power1Critical / 50); //自分ポケ技1が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS3Power2Critical = Math.floor(calc3KS3Power2Critical / 50); //自分ポケ技2が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS3Power3Critical = Math.floor(calc3KS3Power3Critical / 50); //自分ポケ技3が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS3Power4Critical = Math.floor(calc3KS3Power4Critical / 50); //自分ポケ技4が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS4Power1Critical = Math.floor(calc3KS4Power1Critical / 50); //自分ポケ技1が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS4Power2Critical = Math.floor(calc3KS4Power2Critical / 50); //自分ポケ技2が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS4Power3Critical = Math.floor(calc3KS4Power3Critical / 50); //自分ポケ技3が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS4Power4Critical = Math.floor(calc3KS4Power4Critical / 50); //自分ポケ技4が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  //敵ポケ１の型が使う4つの技
  calc3P1S1Critical = Math.floor(calc3P1S1Critical / 50); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P2S1Critical = Math.floor(calc3P2S1Critical / 50); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P3S1Critical = Math.floor(calc3P3S1Critical / 50); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
  calc3P4S1Critical = Math.floor(calc3P4S1Critical / 50); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)

  //敵ポケ2の型が使う4つの技
  calc3P1S2Critical = Math.floor(calc3P1S2Critical / 50); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P2S2Critical = Math.floor(calc3P2S2Critical / 50); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P3S2Critical = Math.floor(calc3P3S2Critical / 50); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P4S2Critical = Math.floor(calc3P4S2Critical / 50); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)

  //敵ポケ3の型が使う4つの技
  calc3P1S3Critical = Math.floor(calc3P1S3Critical / 50); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P2S3Critical = Math.floor(calc3P2S3Critical / 50); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
  calc3P3S3Critical = Math.floor(calc3P3S3Critical / 50); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P4S3Critical = Math.floor(calc3P4S3Critical / 50); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)

  //敵ポケ4の型が使う4つの技
  calc3P1S4Critical = Math.floor(calc3P1S4Critical / 50); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P2S4Critical = Math.floor(calc3P2S4Critical / 50); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P3S4Critical = Math.floor(calc3P3S4Critical / 50); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P4S4Critical = Math.floor(calc3P4S4Critical / 50); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

  calc3KPower1S1Critical = Math.floor(calc3KPower1S1Critical / 50); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower2S1Critical = Math.floor(calc3KPower2S1Critical / 50); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower3S1Critical = Math.floor(calc3KPower3S1Critical / 50); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower4S1Critical = Math.floor(calc3KPower4S1Critical / 50); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  calc3KPower1S2Critical = Math.floor(calc3KPower1S2Critical / 50); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower2S2Critical = Math.floor(calc3KPower2S2Critical / 50); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower3S2Critical = Math.floor(calc3KPower3S2Critical / 50); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower4S2Critical = Math.floor(calc3KPower4S2Critical / 50); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  calc3KPower1S3Critical = Math.floor(calc3KPower1S3Critical / 50); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower2S3Critical = Math.floor(calc3KPower2S3Critical / 50); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower3S3Critical = Math.floor(calc3KPower3S3Critical / 50); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower4S3Critical = Math.floor(calc3KPower4S3Critical / 50); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  calc3KPower1S4Critical = Math.floor(calc3KPower1S4Critical / 50); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower2S4Critical = Math.floor(calc3KPower2S4Critical / 50); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower3S4Critical = Math.floor(calc3KPower3S4Critical / 50); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower4S4Critical = Math.floor(calc3KPower4S4Critical / 50); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  // // チェックボックスの状態を取得
  // const myCheckbox = document.getElementById("myBurned_tab3").checked;
  // const tekiCheckbox = document.getElementById("tekiBurned_tab3").checked;
  // const myReflectCheckbox = document.getElementById("myReflect_tab3").checked;
  // const myLightScreenCheckbox = document.getElementById("myLightScreen_tab3").checked;
  // const tekiReflectCheckbox = document.getElementById("tekiReflect_tab3").checked;
  // const tekiLightScreenCheckbox = document.getElementById("tekiLightScreen_tab3").checked;

  // ×Ma=やけど補正×壁補正

  // やけど
  let myYakedoDisplay1 = "";
  let myYakedoDisplay2 = "";
  let myYakedoDisplay3 = "";
  let myYakedoDisplay4 = "";

  let tekiYakedoDisplayS1W1 = "";
  let tekiYakedoDisplayS1W2 = "";
  let tekiYakedoDisplayS1W3 = "";
  let tekiYakedoDisplayS1W4 = "";

  let tekiYakedoDisplayS2W1 = "";
  let tekiYakedoDisplayS2W2 = "";
  let tekiYakedoDisplayS2W3 = "";
  let tekiYakedoDisplayS2W4 = "";

  let tekiYakedoDisplayS3W1 = "";
  let tekiYakedoDisplayS3W2 = "";
  let tekiYakedoDisplayS3W3 = "";
  let tekiYakedoDisplayS3W4 = "";

  let tekiYakedoDisplayS4W1 = "";
  let tekiYakedoDisplayS4W2 = "";
  let tekiYakedoDisplayS4W3 = "";
  let tekiYakedoDisplayS4W4 = "";
  //リフレクター
  let myReflecDisplay1 = "";
  let myReflecDisplay2 = "";
  let myReflecDisplay3 = "";
  let myReflecDisplay4 = "";

  let tekiReflecDisplayS1W1 = "";
  let tekiReflecDisplayS1W2 = "";
  let tekiReflecDisplayS1W3 = "";
  let tekiReflecDisplayS1W4 = "";

  let tekiReflecDisplayS2W1 = "";
  let tekiReflecDisplayS2W2 = "";
  let tekiReflecDisplayS2W3 = "";
  let tekiReflecDisplayS2W4 = "";

  let tekiReflecDisplayS3W1 = "";
  let tekiReflecDisplayS3W2 = "";
  let tekiReflecDisplayS3W3 = "";
  let tekiReflecDisplayS3W4 = "";

  let tekiReflecDisplayS4W1 = "";
  let tekiReflecDisplayS4W2 = "";
  let tekiReflecDisplayS4W3 = "";
  let tekiReflecDisplayS4W4 = "";
  //ひかりのかべ
  let myHikarikabeDisplay1 = "";
  let myHikarikabeDisplay2 = "";
  let myHikarikabeDisplay3 = "";
  let myHikarikabeDisplay4 = "";

  let tekiHikarikabeDisplayS1W1 = "";
  let tekiHikarikabeDisplayS1W2 = "";
  let tekiHikarikabeDisplayS1W3 = "";
  let tekiHikarikabeDisplayS1W4 = "";

  let tekiHikarikabeDisplayS2W1 = "";
  let tekiHikarikabeDisplayS2W2 = "";
  let tekiHikarikabeDisplayS2W3 = "";
  let tekiHikarikabeDisplayS2W4 = "";

  let tekiHikarikabeDisplayS3W1 = "";
  let tekiHikarikabeDisplayS3W2 = "";
  let tekiHikarikabeDisplayS3W3 = "";
  let tekiHikarikabeDisplayS3W4 = "";

  let tekiHikarikabeDisplayS4W1 = "";
  let tekiHikarikabeDisplayS4W2 = "";
  let tekiHikarikabeDisplayS4W3 = "";
  let tekiHikarikabeDisplayS4W4 = "";

  //敵型1へ攻撃
  if (moveClass1 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100);
        calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100);
        myYakedoDisplay1 = "[火傷]";
      }
    }
    if (myReflectCheckbox) {
      calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100);
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100);
      myReflecDisplay1 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass1 === "特殊") {
    if (myLightScreenCheckbox) {
      calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100);
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100);
      myHikarikabeDisplay1 = "[光壁]";
    }
  }

  if (moveClass2 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100);
        calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100);
        myYakedoDisplay2 = "[火傷]";
      }
    }
    if (myReflectCheckbox) {
      calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100);
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100);
      myReflecDisplay2 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass2 === "特殊") {
    if (myLightScreenCheckbox) {
      calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100);
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100);
      myHikarikabeDisplay2 = "[光壁]";
    }
  }

  if (moveClass3 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100);
        calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100);
        myYakedoDisplay3 = "[火傷]";
      }
    }
    if (myReflectCheckbox) {
      calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100);
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100);
      myReflecDisplay3 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass3 === "特殊") {
    if (myLightScreenCheckbox) {
      calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100);
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100);
      myHikarikabeDisplay3 = "[光壁]";
    }
  }

  if (moveClass4 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100);
        calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100);
        myYakedoDisplay4 = "[火傷]";
      }
    }
    if (myReflectCheckbox) {
      calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100);
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100);
      myReflecDisplay4 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass4 === "特殊") {
    if (myLightScreenCheckbox) {
      calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100);
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100);
      myHikarikabeDisplay4 = "[光壁]";
    }
  }

  //敵型2へ攻撃
  if (moveClass1 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100);
        calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100);
        myYakedoDisplay1 = "[火傷]";
      }
    }
    if (myReflectCheckbox) {
      calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100);
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100);
      myReflecDisplay1 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass1 === "特殊") {
    if (myLightScreenCheckbox) {
      calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100);
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100);
      myHikarikabeDisplay1 = "[光壁]";
    }
  }

  if (moveClass2 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100);
        calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100);
        myYakedoDisplay2 = "[火傷]";
      }
    }
    if (myReflectCheckbox) {
      calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100);
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100);
      myReflecDisplay2 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass2 === "特殊") {
    if (myLightScreenCheckbox) {
      calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100);
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100);
      myHikarikabeDisplay2 = "[光壁]";
    }
  }

  if (moveClass3 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100);
        calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100);
        myYakedoDisplay3 = "[火傷]";
      }
    }
    if (myReflectCheckbox) {
      calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100);
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100);
      myReflecDisplay3 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass3 === "特殊") {
    if (myLightScreenCheckbox) {
      calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100);
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100);
      myHikarikabeDisplay3 = "[光壁]";
    }
  }

  if (moveClass4 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100);
        calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100);
        myYakedoDisplay4 = "[火傷]";
      }
    }
    if (myReflectCheckbox) {
      calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100);
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100);
      myReflecDisplay4 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass4 === "特殊") {
    if (myLightScreenCheckbox) {
      calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100);
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100);
      myHikarikabeDisplay4 = "[光壁]";
    }
  }

  //敵型3へ攻撃
  if (moveClass1 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100);
        calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100);
        myYakedoDisplay1 = "[火傷]";
      }
    }
    if (myReflectCheckbox) {
      calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100);
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100);
      myReflecDisplay1 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass1 === "特殊") {
    if (myLightScreenCheckbox) {
      calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100);
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100);
      myHikarikabeDisplay1 = "[光壁]";
    }
  }

  if (moveClass2 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100);
        calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100);
        myYakedoDisplay2 = "[火傷]";
      }
    }
    if (myReflectCheckbox) {
      calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100);
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100);
      myReflecDisplay2 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass2 === "特殊") {
    if (myLightScreenCheckbox) {
      calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100);
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100);
      myHikarikabeDisplay2 = "[光壁]";
    }
  }

  if (moveClass3 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100);
        calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100);
        myYakedoDisplay3 = "[火傷]";
      }
    }
    if (myReflectCheckbox) {
      calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100);
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100);
      myReflecDisplay3 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass3 === "特殊") {
    if (myLightScreenCheckbox) {
      calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100);
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100);
      myHikarikabeDisplay3 = "[光壁]";
    }
  }

  if (moveClass4 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100);
        calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100);
        myYakedoDisplay4 = "[火傷]";
      }
    }
    if (myReflectCheckbox) {
      calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100);
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100);
      myReflecDisplay4 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass4 === "特殊") {
    if (myLightScreenCheckbox) {
      calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100);
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100);
      myHikarikabeDisplay4 = "[光壁]";
    }
  }

  //敵型4へ攻撃
  if (moveClass1 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100);
        calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100);
        myYakedoDisplay1 = "[火傷]";
      }
    }
    if (myReflectCheckbox) {
      calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100);
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100);
      myReflecDisplay1 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass1 === "特殊") {
    if (myLightScreenCheckbox) {
      calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100);
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100);
      myHikarikabeDisplay1 = "[光壁]";
    }
  }

  if (moveClass2 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100);
        calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100);
        myYakedoDisplay2 = "[火傷]";
      }
    }
    if (myReflectCheckbox) {
      calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100);
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100);
      myReflecDisplay2 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass2 === "特殊") {
    if (myLightScreenCheckbox) {
      calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100);
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100);
      myHikarikabeDisplay2 = "[光壁]";
    }
  }

  if (moveClass3 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100);
        calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100);
        myYakedoDisplay3 = "[火傷]";
      }
    }
    if (myReflectCheckbox) {
      calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100);
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100);
      myReflecDisplay3 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass3 === "特殊") {
    if (myLightScreenCheckbox) {
      calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100);
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100);
      myHikarikabeDisplay3 = "[光壁]";
    }
  }

  if (moveClass4 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100);
        calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100);
        myYakedoDisplay4 = "[火傷]";
      }
    }
    if (myReflectCheckbox) {
      calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100);
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100);
      myReflecDisplay4 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass4 === "特殊") {
    if (myLightScreenCheckbox) {
      calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100);
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100);
      myHikarikabeDisplay4 = "[光壁]";
    }
  }

  //敵型1が攻撃
  // 技1
  if (moveClass1S1 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100);
        calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100);
        tekiYakedoDisplayS1W1 = "[火傷]";
      }
    }
    if (tekiReflectCheckbox) {
      calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100);
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100);
      tekiReflecDisplayS1W1 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass1S1 === "特殊") {
    if (tekiLightScreenCheckbox) {
      calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100);
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100);
      tekiHikarikabeDisplayS1W1 = "[光壁]";
    }
  }

  //技2
  if (moveClass2S1 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100);
        calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100);
        tekiYakedoDisplayS1W2 = "[火傷]";
      }
    }
    if (tekiReflectCheckbox) {
      calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100);
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100);
      tekiReflecDisplayS1W2 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass2S1 === "特殊") {
    if (tekiLightScreenCheckbox) {
      calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100);
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100);
      tekiHikarikabeDisplayS1W2 = "[光壁]";
    }
  }

  //技3
  if (moveClass3S1 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100);
        calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100);
        tekiYakedoDisplayS1W3 = "[火傷]";
      }
    }
    if (tekiReflectCheckbox) {
      calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100);
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100);
      tekiReflecDisplayS1W3 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass3S1 === "特殊") {
    if (tekiLightScreenCheckbox) {
      calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100);
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100);
      tekiHikarikabeDisplayS1W3 = "[光壁]";
    }
  }

  //技4
  if (moveClass4S1 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100);
        calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100);
        tekiYakedoDisplayS1W4 = "[火傷]";
      }
    }
    if (tekiReflectCheckbox) {
      calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100);
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100);
      tekiReflecDisplayS1W4 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass4S1 === "特殊") {
    if (tekiLightScreenCheckbox) {
      calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100);
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100);
      tekiHikarikabeDisplayS1W4 = "[光壁]";
    }
  }

  //敵型2が攻撃
  // 技1
  if (moveClass1S2 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100);
        calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100);
        tekiYakedoDisplayS2W1 = "[火傷]";
      }
    }
    if (tekiReflectCheckbox) {
      calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100);
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100);
      tekiReflecDisplayS2W1 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass1S2 === "特殊") {
    if (tekiLightScreenCheckbox) {
      calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100);
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100);
      tekiHikarikabeDisplayS2W1 = "[光壁]";
    }
  }

  //技2
  if (moveClass2S2 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100);
        calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100);
        tekiYakedoDisplayS2W2 = "[火傷]";
      }
    }
    if (tekiReflectCheckbox) {
      calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100);
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100);
      tekiReflecDisplayS2W2 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass2S2 === "特殊") {
    if (tekiLightScreenCheckbox) {
      calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100);
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100);
      tekiHikarikabeDisplayS2W2 = "[光壁]";
    }
  }

  //技3
  if (moveClass3S2 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100);
        calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100);
        tekiYakedoDisplayS2W3 = "[火傷]";
      }
    }
    if (tekiReflectCheckbox) {
      calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100);
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100);
      tekiReflecDisplayS2W3 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass3S2 === "特殊") {
    if (tekiLightScreenCheckbox) {
      calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100);
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100);
      tekiHikarikabeDisplayS2W3 = "[光壁]";
    }
  }

  //技4
  if (moveClass4S2 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100);
        calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100);
        tekiYakedoDisplayS2W4 = "[火傷]";
      }
    }
    if (tekiReflectCheckbox) {
      calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100);
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100);
      tekiReflecDisplayS2W4 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass4S2 === "特殊") {
    if (tekiLightScreenCheckbox) {
      calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100);
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100);
      tekiHikarikabeDisplayS2W4 = "[光壁]";
    }
  }

  //敵型3が攻撃
  // 技1
  if (moveClass1S3 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100);
        calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100);
        tekiYakedoDisplayS3W1 = "[火傷]";
      }
    }
    if (tekiReflectCheckbox) {
      calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100);
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100);
      tekiReflecDisplayS3W1 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass1S3 === "特殊") {
    if (tekiLightScreenCheckbox) {
      calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100);
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100);
      tekiHikarikabeDisplayS3W1 = "[光壁]";
    }
  }

  //技2
  if (moveClass2S3 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100);
        calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100);
        tekiYakedoDisplayS3W2 = "[火傷]";
      }
    }
    if (tekiReflectCheckbox) {
      calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100);
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100);
      tekiReflecDisplayS3W2 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass2S3 === "特殊") {
    if (tekiLightScreenCheckbox) {
      calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100);
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100);
      tekiHikarikabeDisplayS3W2 = "[光壁]";
    }
  }

  //技3
  if (moveClass3S3 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100);
        calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100);
        tekiYakedoDisplayS3W3 = "[火傷]";
      }
    }
    if (tekiReflectCheckbox) {
      calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100);
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100);
      tekiReflecDisplayS3W3 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass3S3 === "特殊") {
    if (tekiLightScreenCheckbox) {
      calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100);
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100);
      tekiHikarikabeDisplayS3W3 = "[光壁]";
    }
  }

  //技4
  if (moveClass4S3 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100);
        calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100);
        tekiYakedoDisplayS3W4 = "[火傷]";
      }
    }
    if (tekiReflectCheckbox) {
      calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100);
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100);
      tekiReflecDisplayS3W4 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass4S3 === "特殊") {
    if (tekiLightScreenCheckbox) {
      calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100);
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100);
      tekiHikarikabeDisplayS3W4 = "[光壁]";
    }
  }

  //敵型4が攻撃
  // 技1
  if (moveClass1S4 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100);
        calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100);
        tekiYakedoDisplayS4W1 = "[火傷]";
      }
    }
    if (tekiReflectCheckbox) {
      calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100);
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100);
      tekiReflecDisplayS4W1 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass1S4 === "特殊") {
    if (tekiLightScreenCheckbox) {
      calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100);
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100);
      tekiHikarikabeDisplayS4W1 = "[光壁]";
    }
  }

  //技2
  if (moveClass2S4 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100);
        calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100);
        tekiYakedoDisplayS4W2 = "[火傷]";
      }
    }
    if (tekiReflectCheckbox) {
      calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100);
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100);
      tekiReflecDisplayS4W2 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass2S4 === "特殊") {
    if (tekiLightScreenCheckbox) {
      calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100);
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100);
      tekiHikarikabeDisplayS4W2 = "[光壁]";
    }
  }

  //技3
  if (moveClass3S4 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100);
        calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100);
        tekiYakedoDisplayS4W3 = "[火傷]";
      }
    }
    if (tekiReflectCheckbox) {
      calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100);
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100);
      tekiReflecDisplayS4W3 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass3S4 === "特殊") {
    if (tekiLightScreenCheckbox) {
      calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100);
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100);
      tekiHikarikabeDisplayS4W3 = "[光壁]";
    }
  }

  //技4
  if (moveClass4S4 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100);
        calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100);
        tekiYakedoDisplayS4W4 = "[火傷]";
      }
    }
    if (tekiReflectCheckbox) {
      calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100);
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100);
      tekiReflecDisplayS4W4 = "[ﾘﾌﾚｸﾀｰ]";
    }
  } else if (moveClass4S4 === "特殊") {
    if (tekiLightScreenCheckbox) {
      calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100);
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100);
      tekiHikarikabeDisplayS4W4 = "[光壁]";
    }
  }

  ///////////////////////急所////////////////////////////////
  //敵型1へ攻撃
  if (moveClass1 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 50) / 100);
        calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 50) / 100);
      }
    }
  }

  if (moveClass2 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 50) / 100);
        calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 50) / 100);
      }
    }
  }

  if (moveClass3 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 50) / 100);
        calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 50) / 100);
      }
    }
  }

  if (moveClass4 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 50) / 100);
        calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 50) / 100);
      }
    }
  }

  //敵型2へ攻撃
  if (moveClass1 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 50) / 100);
        calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 50) / 100);
      }
    }
  }

  if (moveClass2 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 50) / 100);
        calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 50) / 100);
      }
    }
  }

  if (moveClass3 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 50) / 100);
        calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 50) / 100);
      }
    }
  }

  if (moveClass4 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 50) / 100);
        calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 50) / 100);
      }
    }
  }

  //敵型3へ攻撃
  if (moveClass1 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 50) / 100);
        calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 50) / 100);
      }
    }
  }

  if (moveClass2 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 50) / 100);
        calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 50) / 100);
      }
    }
  }

  if (moveClass3 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 50) / 100);
        calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 50) / 100);
      }
    }
  }

  if (moveClass4 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 50) / 100);
        calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 50) / 100);
      }
    }
  }

  //敵型4へ攻撃
  if (moveClass1 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 50) / 100);
        calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 50) / 100);
      }
    }
  }

  if (moveClass2 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 50) / 100);
        calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 50) / 100);
      }
    }
  }

  if (moveClass3 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 50) / 100);
        calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 50) / 100);
      }
    }
  }

  if (moveClass4 === "物理") {
    if (myCheckbox) {
      if (selectedAbility != "こんじょう") {
        calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 50) / 100);
        calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 50) / 100);
      }
    }
  }

  //敵型1が攻撃
  // 技1
  if (moveClass1S1 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P1S1Critical = Math.floor((calc3P1S1Critical * 50) / 100);
        calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 50) / 100);
      }
    }
  }

  //技2
  if (moveClass2S1 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P2S1Critical = Math.floor((calc3P2S1Critical * 50) / 100);
        calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 50) / 100);
      }
    }
  }

  //技3
  if (moveClass3S1 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P3S1Critical = Math.floor((calc3P3S1Critical * 50) / 100);
        calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 50) / 100);
      }
    }
  }

  //技4
  if (moveClass4S1 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P4S1Critical = Math.floor((calc3P4S1Critical * 50) / 100);
        calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 50) / 100);
      }
    }
  }

  //敵型2が攻撃
  // 技1
  if (moveClass1S2 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P1S2Critical = Math.floor((calc3P1S2Critical * 50) / 100);
        calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 50) / 100);
      }
    }
  }

  //技2
  if (moveClass2S2 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P2S2Critical = Math.floor((calc3P2S2Critical * 50) / 100);
        calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 50) / 100);
      }
    }
  }

  //技3
  if (moveClass3S2 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P3S2Critical = Math.floor((calc3P3S2Critical * 50) / 100);
        calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 50) / 100);
      }
    }
  }

  //技4
  if (moveClass4S2 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P4S2Critical = Math.floor((calc3P4S2Critical * 50) / 100);
        calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 50) / 100);
      }
    }
  }

  //敵型3が攻撃
  // 技1
  if (moveClass1S3 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P1S3Critical = Math.floor((calc3P1S3Critical * 50) / 100);
        calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 50) / 100);
      }
    }
  }

  //技2
  if (moveClass2S3 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P2S3Critical = Math.floor((calc3P2S3Critical * 50) / 100);
        calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 50) / 100);
      }
    }
  }

  //技3
  if (moveClass3S3 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P3S3Critical = Math.floor((calc3P3S3Critical * 50) / 100);
        calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 50) / 100);
      }
    }
  }

  //技4
  if (moveClass4S3 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P4S3Critical = Math.floor((calc3P4S3Critical * 50) / 100);
        calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 50) / 100);
      }
    }
  }

  //敵型4が攻撃
  // 技1
  if (moveClass1S4 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P1S4Critical = Math.floor((calc3P1S4Critical * 50) / 100);
        calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 50) / 100);
      }
    }
  }

  //技2
  if (moveClass2S4 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P2S4Critical = Math.floor((calc3P2S4Critical * 50) / 100);
        calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 50) / 100);
      }
    }
  }

  //技3
  if (moveClass3S4 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P3S4Critical = Math.floor((calc3P3S4Critical * 50) / 100);
        calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 50) / 100);
      }
    }
  }

  //技4
  if (moveClass4S4 === "物理") {
    if (tekiCheckbox) {
      if (selectedTekiAbility != "こんじょう") {
        calc3P4S4Critical = Math.floor((calc3P4S4Critical * 50) / 100);
        calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 50) / 100);
      }
    }
  }

  ////////////////////////////////////////天気補正×もらいび補正/////////////////////////////////////////////////////////
  // 天候補正文字[雨][晴れ]
  let myTenkiDisplay1 = "";
  let myTenkiDisplay2 = "";
  let myTenkiDisplay3 = "";
  let myTenkiDisplay4 = "";

  let tekiTenkiDisplayS1W1 = "";
  let tekiTenkiDisplayS1W2 = "";
  let tekiTenkiDisplayS1W3 = "";
  let tekiTenkiDisplayS1W4 = "";

  let tekiTenkiDisplayS2W1 = "";
  let tekiTenkiDisplayS2W2 = "";
  let tekiTenkiDisplayS2W3 = "";
  let tekiTenkiDisplayS2W4 = "";

  let tekiTenkiDisplayS3W1 = "";
  let tekiTenkiDisplayS3W2 = "";
  let tekiTenkiDisplayS3W3 = "";
  let tekiTenkiDisplayS3W4 = "";

  let tekiTenkiDisplayS4W1 = "";
  let tekiTenkiDisplayS4W2 = "";
  let tekiTenkiDisplayS4W3 = "";
  let tekiTenkiDisplayS4W4 = "";
  // もらいび
  let myMoraibiDisplay1 = "";
  let myMoraibiDisplay2 = "";
  let myMoraibiDisplay3 = "";
  let myMoraibiDisplay4 = "";

  let tekiMoraibiDisplayS1W1 = "";
  let tekiMoraibiDisplayS1W2 = "";
  let tekiMoraibiDisplayS1W3 = "";
  let tekiMoraibiDisplayS1W4 = "";

  let tekiMoraibiDisplayS2W1 = "";
  let tekiMoraibiDisplayS2W2 = "";
  let tekiMoraibiDisplayS2W3 = "";
  let tekiMoraibiDisplayS2W4 = "";

  let tekiMoraibiDisplayS3W1 = "";
  let tekiMoraibiDisplayS3W2 = "";
  let tekiMoraibiDisplayS3W3 = "";
  let tekiMoraibiDisplayS3W4 = "";

  let tekiMoraibiDisplayS4W1 = "";
  let tekiMoraibiDisplayS4W2 = "";
  let tekiMoraibiDisplayS4W3 = "";
  let tekiMoraibiDisplayS4W4 = "";

  //敵型1へ攻撃
  if (wtype1 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P1_S1 = Math.floor((calc3P1_S1 * 150) / 100);
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 150) / 100);
      myTenkiDisplay1 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100);
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100);
      myTenkiDisplay1 = "[晴れ]";
    }
  } else if (wtype1 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P1_S1 = Math.floor((calc3P1_S1 * 150) / 100);
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 150) / 100);
      myTenkiDisplay1 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100);
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100);
      myTenkiDisplay1 = "[雨]";
    }
    if (selectedAbility === "もらいび") {
      calc3P1_S1 = Math.floor((calc3P1_S1 * 150) / 100);
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 150) / 100);
      myMoraibiDisplay1 = "[貰い火(炎*1.5)]";
    }
  }

  if (wtype2 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P2_S1 = Math.floor((calc3P2_S1 * 150) / 100);
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 150) / 100);
      myTenkiDisplay2 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100);
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100);
      myTenkiDisplay2 = "[晴れ]";
    }
  } else if (wtype2 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P2_S1 = Math.floor((calc3P2_S1 * 150) / 100);
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 150) / 100);
      myTenkiDisplay2 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100);
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100);
      myTenkiDisplay2 = "[雨]";
    }
    if (selectedAbility === "もらいび") {
      calc3P2_S1 = Math.floor((calc3P2_S1 * 150) / 100);
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 150) / 100);
      myMoraibiDisplay2 = "[貰い火(炎*1.5)]";
    }
  }

  if (wtype3 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P3_S1 = Math.floor((calc3P3_S1 * 150) / 100);
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 150) / 100);
      myTenkiDisplay3 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100);
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100);
      myTenkiDisplay3 = "[晴れ]";
    }
  } else if (wtype3 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P3_S1 = Math.floor((calc3P3_S1 * 150) / 100);
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 150) / 100);
      myTenkiDisplay3 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100);
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100);
      myTenkiDisplay3 = "[雨]";
    }
    if (selectedAbility === "もらいび") {
      calc3P3_S1 = Math.floor((calc3P3_S1 * 150) / 100);
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 150) / 100);
      myMoraibiDisplay3 = "[貰い火(炎*1.5)]";
    }
  }

  if (wtype4 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P4_S1 = Math.floor((calc3P4_S1 * 150) / 100);
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 150) / 100);
      myTenkiDisplay4 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100);
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100);
      myTenkiDisplay4 = "[晴れ]";
    }
  } else if (wtype4 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P4_S1 = Math.floor((calc3P4_S1 * 150) / 100);
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 150) / 100);
      myTenkiDisplay4 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100);
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100);
      myTenkiDisplay4 = "[雨]";
    }
    if (selectedAbility === "もらいび") {
      calc3P4_S1 = Math.floor((calc3P4_S1 * 150) / 100);
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 150) / 100);
      myMoraibiDisplay4 = "[貰い火(炎*1.5)]";
    }
  }

  //敵型2へ攻撃
  if (wtype1 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P1_S2 = Math.floor((calc3P1_S2 * 150) / 100);
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 150) / 100);
      myTenkiDisplay1 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100);
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100);
      myTenkiDisplay1 = "[晴れ]";
    }
  } else if (wtype1 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P1_S2 = Math.floor((calc3P1_S2 * 150) / 100);
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 150) / 100);
      myTenkiDisplay1 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100);
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100);
      myTenkiDisplay1 = "[雨]";
    }
    if (selectedAbility === "もらいび") {
      calc3P1_S2 = Math.floor((calc3P1_S2 * 150) / 100);
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 150) / 100);
      myMoraibiDisplay1 = "[貰い火(炎*1.5)]";
    }
  }

  if (wtype2 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P2_S2 = Math.floor((calc3P2_S2 * 150) / 100);
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 150) / 100);
      myTenkiDisplay2 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100);
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100);
      myTenkiDisplay2 = "[晴れ]";
    }
  } else if (wtype2 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P2_S2 = Math.floor((calc3P2_S2 * 150) / 100);
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 150) / 100);
      myTenkiDisplay2 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100);
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100);
      myTenkiDisplay2 = "[雨]";
    }
    if (selectedAbility === "もらいび") {
      calc3P2_S2 = Math.floor((calc3P2_S2 * 150) / 100);
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 150) / 100);
      myMoraibiDisplay2 = "[貰い火(炎*1.5)]";
    }
  }

  if (wtype3 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P3_S2 = Math.floor((calc3P3_S2 * 150) / 100);
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 150) / 100);
      myTenkiDisplay3 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100);
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100);
      myTenkiDisplay3 = "[晴れ]";
    }
  } else if (wtype3 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P3_S2 = Math.floor((calc3P3_S2 * 150) / 100);
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 150) / 100);
      myTenkiDisplay3 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100);
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100);
      myTenkiDisplay3 = "[雨]";
    }
    if (selectedAbility === "もらいび") {
      calc3P3_S2 = Math.floor((calc3P3_S2 * 150) / 100);
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 150) / 100);
      myMoraibiDisplay3 = "[貰い火(炎*1.5)]";
    }
  }

  if (wtype4 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P4_S2 = Math.floor((calc3P4_S2 * 150) / 100);
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 150) / 100);
      myTenkiDisplay4 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100);
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100);
      myTenkiDisplay4 = "[晴れ]";
    }
  } else if (wtype4 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P4_S2 = Math.floor((calc3P4_S2 * 150) / 100);
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 150) / 100);
      myTenkiDisplay4 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100);
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100);
      myTenkiDisplay4 = "[雨]";
    }
    if (selectedAbility === "もらいび") {
      calc3P4_S2 = Math.floor((calc3P4_S2 * 150) / 100);
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 150) / 100);
      myMoraibiDisplay4 = "[貰い火(炎*1.5)]";
    }
  }

  //敵型3へ攻撃
  if (wtype1 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P1_S3 = Math.floor((calc3P1_S3 * 150) / 100);
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 150) / 100);
      myTenkiDisplay1 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100);
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100);
      myTenkiDisplay1 = "[晴れ]";
    }
  } else if (wtype1 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P1_S3 = Math.floor((calc3P1_S3 * 150) / 100);
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 150) / 100);
      myTenkiDisplay1 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100);
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100);
      myTenkiDisplay1 = "[雨]";
    }
    if (selectedAbility === "もらいび") {
      calc3P1_S3 = Math.floor((calc3P1_S3 * 150) / 100);
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 150) / 100);
      myMoraibiDisplay1 = "[貰い火(炎*1.5)]";
    }
  }

  if (wtype2 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P2_S3 = Math.floor((calc3P2_S3 * 150) / 100);
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 150) / 100);
      myTenkiDisplay2 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100);
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100);
      myTenkiDisplay2 = "[晴れ]";
    }
  } else if (wtype2 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P2_S3 = Math.floor((calc3P2_S3 * 150) / 100);
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 150) / 100);
      myTenkiDisplay2 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100);
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100);
      myTenkiDisplay2 = "[雨]";
    }
    if (selectedAbility === "もらいび") {
      calc3P2_S3 = Math.floor((calc3P2_S3 * 150) / 100);
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 150) / 100);
      myMoraibiDisplay2 = "[貰い火(炎*1.5)]";
    }
  }

  if (wtype3 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P3_S3 = Math.floor((calc3P3_S3 * 150) / 100);
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 150) / 100);
      myTenkiDisplay3 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100);
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100);
      myTenkiDisplay3 = "[晴れ]";
    }
  } else if (wtype3 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P3_S3 = Math.floor((calc3P3_S3 * 150) / 100);
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 150) / 100);
      myTenkiDisplay3 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100);
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100);
      myTenkiDisplay3 = "[雨]";
    }
    if (selectedAbility === "もらいび") {
      calc3P3_S3 = Math.floor((calc3P3_S3 * 150) / 100);
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 150) / 100);
      myMoraibiDisplay3 = "[貰い火(炎*1.5)]";
    }
  }

  if (wtype4 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P4_S3 = Math.floor((calc3P4_S3 * 150) / 100);
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 150) / 100);
      myTenkiDisplay4 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100);
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100);
      myTenkiDisplay4 = "[晴れ]";
    }
  } else if (wtype4 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P4_S3 = Math.floor((calc3P4_S3 * 150) / 100);
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 150) / 100);
      myTenkiDisplay4 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100);
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100);
      myTenkiDisplay4 = "[雨]";
    }
    if (selectedAbility === "もらいび") {
      calc3P4_S3 = Math.floor((calc3P4_S3 * 150) / 100);
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 150) / 100);
      myMoraibiDisplay4 = "[貰い火(炎*1.5)]";
    }
  }

  //敵型4へ攻撃
  if (wtype1 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P1_S4 = Math.floor((calc3P1_S4 * 150) / 100);
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 150) / 100);
      myTenkiDisplay1 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100);
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100);
      myTenkiDisplay1 = "[晴れ]";
    }
  } else if (wtype1 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P1_S4 = Math.floor((calc3P1_S4 * 150) / 100);
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 150) / 100);
      myTenkiDisplay1 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100);
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100);
      myTenkiDisplay1 = "[雨]";
    }
    if (selectedAbility === "もらいび") {
      calc3P1_S4 = Math.floor((calc3P1_S4 * 150) / 100);
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 150) / 100);
      myMoraibiDisplay1 = "[貰い火(炎*1.5)]";
    }
  }

  if (wtype2 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P2_S4 = Math.floor((calc3P2_S4 * 150) / 100);
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 150) / 100);
      myTenkiDisplay2 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100);
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100);
      myTenkiDisplay2 = "[晴れ]";
    }
  } else if (wtype2 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P2_S4 = Math.floor((calc3P2_S4 * 150) / 100);
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 150) / 100);
      myTenkiDisplay2 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100);
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100);
      myTenkiDisplay2 = "[雨]";
    }
    if (selectedAbility === "もらいび") {
      calc3P2_S4 = Math.floor((calc3P2_S4 * 150) / 100);
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 150) / 100);
      myMoraibiDisplay2 = "[貰い火(炎*1.5)]";
    }
  }

  if (wtype3 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P3_S4 = Math.floor((calc3P3_S4 * 150) / 100);
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 150) / 100);
      myTenkiDisplay3 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100);
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100);
      myTenkiDisplay3 = "[晴れ]";
    }
  } else if (wtype3 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P3_S4 = Math.floor((calc3P3_S4 * 150) / 100);
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 150) / 100);
      myTenkiDisplay3 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100);
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100);
      myTenkiDisplay3 = "[雨]";
    }
    if (selectedAbility === "もらいび") {
      calc3P3_S4 = Math.floor((calc3P3_S4 * 150) / 100);
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 150) / 100);
      myMoraibiDisplay3 = "[貰い火(炎*1.5)]";
    }
  }

  if (wtype4 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P4_S4 = Math.floor((calc3P4_S4 * 150) / 100);
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 150) / 100);
      myTenkiDisplay4 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100);
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100);
      myTenkiDisplay4 = "[晴れ]";
    }
  } else if (wtype4 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P4_S4 = Math.floor((calc3P4_S4 * 150) / 100);
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 150) / 100);
      myTenkiDisplay4 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100);
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100);
      myTenkiDisplay4 = "[雨]";
    }
    if (selectedAbility === "もらいび") {
      calc3P4_S4 = Math.floor((calc3P4_S4 * 150) / 100);
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 150) / 100);
      myMoraibiDisplay4 = "[貰い火(炎*1.5)]";
    }
  }

  //////////////////////////////////////////////////////////////////
  //敵型1が攻撃
  // 技1
  if (wtype1S1 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P1S1 = Math.floor((calc3P1S1 * 150) / 100);
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 150) / 100);
      tekiTenkiDisplayS1W1 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100);
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100);
      tekiTenkiDisplayS1W1 = "[晴れ]";
    }
  } else if (wtype1S1 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P1S1 = Math.floor((calc3P1S1 * 150) / 100);
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 150) / 100);
      tekiTenkiDisplayS1W1 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100);
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100);
      tekiTenkiDisplayS1W1 = "[雨]";
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P1S1 = Math.floor((calc3P1S1 * 150) / 100);
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 150) / 100);
      tekiMoraibiDisplayS1W1 = "[貰い火(炎*1.5)]";
    }
  }

  //技2
  if (wtype2S1 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P2S1 = Math.floor((calc3P2S1 * 150) / 100);
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 150) / 100);
      tekiTenkiDisplayS1W2 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100);
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100);
      tekiTenkiDisplayS1W2 = "[晴れ]";
    }
  } else if (wtype2S1 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P2S1 = Math.floor((calc3P2S1 * 150) / 100);
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 150) / 100);
      tekiTenkiDisplayS1W2 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100);
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100);
      tekiTenkiDisplayS1W2 = "[雨]";
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P2S1 = Math.floor((calc3P2S1 * 150) / 100);
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 150) / 100);
      tekiMoraibiDisplayS1W2 = "[貰い火(炎*1.5)]";
    }
  }

  //技3
  if (wtype3S1 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P3S1 = Math.floor((calc3P3S1 * 150) / 100);
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 150) / 100);
      tekiTenkiDisplayS1W3 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100);
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100);
      tekiTenkiDisplayS1W3 = "[晴れ]";
    }
  } else if (wtype3S1 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P3S1 = Math.floor((calc3P3S1 * 150) / 100);
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 150) / 100);
      tekiTenkiDisplayS1W3 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100);
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100);
      tekiTenkiDisplayS1W3 = "[雨]";
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P3S1 = Math.floor((calc3P3S1 * 150) / 100);
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 150) / 100);
      tekiMoraibiDisplayS1W3 = "[貰い火(炎*1.5)]";
    }
  }

  //技4
  if (wtype4S1 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P4S1 = Math.floor((calc3P4S1 * 150) / 100);
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 150) / 100);
      tekiTenkiDisplayS1W4 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100);
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100);
      tekiTenkiDisplayS1W4 = "[晴れ]";
    }
  } else if (wtype4S1 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P4S1 = Math.floor((calc3P4S1 * 150) / 100);
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 150) / 100);
      tekiTenkiDisplayS1W4 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100);
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100);
      tekiTenkiDisplayS1W4 = "[雨]";
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P4S1 = Math.floor((calc3P4S1 * 150) / 100);
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 150) / 100);
      tekiMoraibiDisplayS1W4 = "[貰い火(炎*1.5)]";
    }
  }
  //敵型2が攻撃
  // 技1
  if (wtype1S2 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P1S2 = Math.floor((calc3P1S2 * 150) / 100);
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 150) / 100);
      tekiTenkiDisplayS2W1 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100);
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100);
      tekiTenkiDisplayS2W1 = "[晴れ]";
    }
  } else if (wtype1S2 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P1S2 = Math.floor((calc3P1S2 * 150) / 100);
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 150) / 100);
      tekiTenkiDisplayS2W1 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100);
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100);
      tekiTenkiDisplayS2W1 = "[雨]";
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P1S2 = Math.floor((calc3P1S2 * 150) / 100);
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 150) / 100);
      tekiMoraibiDisplayS2W1 = "[貰い火(炎*1.5)]";
    }
  }
  //技2
  if (wtype2S2 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P2S2 = Math.floor((calc3P2S2 * 150) / 100);
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 150) / 100);
      tekiTenkiDisplayS2W2 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100);
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100);
      tekiTenkiDisplayS2W2 = "[晴れ]";
    }
  } else if (wtype2S2 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P2S2 = Math.floor((calc3P2S2 * 150) / 100);
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 150) / 100);
      tekiTenkiDisplayS2W2 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100);
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100);
      tekiTenkiDisplayS2W2 = "[雨]";
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P2S2 = Math.floor((calc3P2S2 * 150) / 100);
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 150) / 100);
      tekiMoraibiDisplayS2W2 = "[貰い火(炎*1.5)]";
    }
  }

  //技3
  if (wtype3S2 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P3S2 = Math.floor((calc3P3S2 * 150) / 100);
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 150) / 100);
      tekiTenkiDisplayS2W3 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100);
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100);
      tekiTenkiDisplayS2W3 = "[晴れ]";
    }
  } else if (wtype3S2 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P3S2 = Math.floor((calc3P3S2 * 150) / 100);
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 150) / 100);
      tekiTenkiDisplayS2W3 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100);
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100);
      tekiTenkiDisplayS2W3 = "[雨]";
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P3S2 = Math.floor((calc3P3S2 * 150) / 100);
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 150) / 100);
      tekiMoraibiDisplayS2W3 = "[貰い火(炎*1.5)]";
    }
  }

  //技4
  if (wtype4S2 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P4S2 = Math.floor((calc3P4S2 * 150) / 100);
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 150) / 100);
      tekiTenkiDisplayS2W4 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100);
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100);
      tekiTenkiDisplayS2W4 = "[晴れ]";
    }
  } else if (wtype4S2 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P4S2 = Math.floor((calc3P4S2 * 150) / 100);
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 150) / 100);
      tekiTenkiDisplayS2W4 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100);
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100);
      tekiTenkiDisplayS2W4 = "[雨]";
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P4S2 = Math.floor((calc3P4S2 * 150) / 100);
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 150) / 100);
      tekiMoraibiDisplayS2W4 = "[貰い火(炎*1.5)]";
    }
  }
  //敵型3が攻撃
  // 技1
  if (wtype1S3 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P1S3 = Math.floor((calc3P1S3 * 150) / 100);
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 150) / 100);
      tekiTenkiDisplayS3W1 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100);
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100);
      tekiTenkiDisplayS3W1 = "[晴れ]";
    }
  } else if (wtype1S3 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P1S3 = Math.floor((calc3P1S3 * 150) / 100);
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 150) / 100);
      tekiTenkiDisplayS3W1 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100);
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100);
      tekiTenkiDisplayS3W1 = "[雨]";
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P1S3 = Math.floor((calc3P1S3 * 150) / 100);
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 150) / 100);
      tekiMoraibiDisplayS3W1 = "[貰い火(炎*1.5)]";
    }
  }

  //技2
  if (wtype2S3 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P2S3 = Math.floor((calc3P2S3 * 150) / 100);
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 150) / 100);
      tekiTenkiDisplayS3W2 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100);
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100);
      tekiTenkiDisplayS3W2 = "[晴れ]";
    }
  } else if (wtype2S3 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P2S3 = Math.floor((calc3P2S3 * 150) / 100);
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 150) / 100);
      tekiTenkiDisplayS3W2 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100);
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100);
      tekiTenkiDisplayS3W2 = "[雨]";
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P2S3 = Math.floor((calc3P2S3 * 150) / 100);
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 150) / 100);
      tekiMoraibiDisplayS3W2 = "[貰い火(炎*1.5)]";
    }
  }

  //技3
  if (wtype3S3 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P3S3 = Math.floor((calc3P3S3 * 150) / 100);
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 150) / 100);
      tekiTenkiDisplayS3W3 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100);
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100);
      tekiTenkiDisplayS3W3 = "[晴れ]";
    }
  } else if (wtype3S3 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P3S3 = Math.floor((calc3P3S3 * 150) / 100);
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 150) / 100);
      tekiTenkiDisplayS3W3 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100);
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100);
      tekiTenkiDisplayS3W3 = "[雨]";
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P3S3 = Math.floor((calc3P3S3 * 150) / 100);
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 150) / 100);
      tekiMoraibiDisplayS3W3 = "[貰い火(炎*1.5)]";
    }
  }

  //技4
  if (wtype4S3 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P4S3 = Math.floor((calc3P4S3 * 150) / 100);
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 150) / 100);
      tekiTenkiDisplayS3W4 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100);
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100);
      tekiTenkiDisplayS3W4 = "[晴れ]";
    }
  } else if (wtype4S3 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P4S3 = Math.floor((calc3P4S3 * 150) / 100);
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 150) / 100);
      tekiTenkiDisplayS3W4 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100);
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100);
      tekiTenkiDisplayS3W4 = "[雨]";
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P4S3 = Math.floor((calc3P4S3 * 150) / 100);
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 150) / 100);
      tekiMoraibiDisplayS3W4 = "[貰い火(炎*1.5)]";
    }
  }
  //敵型4が攻撃
  // 技1
  if (wtype1S4 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P1S4 = Math.floor((calc3P1S4 * 150) / 100);
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 150) / 100);
      tekiTenkiDisplayS4W1 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100);
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100);
      tekiTenkiDisplayS4W1 = "[晴れ]";
    }
  } else if (wtype1S4 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P1S4 = Math.floor((calc3P1S4 * 150) / 100);
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 150) / 100);
      tekiTenkiDisplayS4W1 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100);
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100);
      tekiTenkiDisplayS4W1 = "[雨]";
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P1S4 = Math.floor((calc3P1S4 * 150) / 100);
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 150) / 100);
      tekiMoraibiDisplayS4W1 = "[貰い火(炎*1.5)]";
    }
  }

  //技2
  if (wtype2S4 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P2S4 = Math.floor((calc3P2S4 * 150) / 100);
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 150) / 100);
      tekiTenkiDisplayS4W2 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100);
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100);
      tekiTenkiDisplayS4W2 = "[晴れ]";
    }
  } else if (wtype2S4 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P2S4 = Math.floor((calc3P2S4 * 150) / 100);
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 150) / 100);
      tekiTenkiDisplayS4W2 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100);
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100);
      tekiTenkiDisplayS4W2 = "[雨]";
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P2S4 = Math.floor((calc3P2S4 * 150) / 100);
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 150) / 100);
      tekiMoraibiDisplayS4W2 = "[貰い火(炎*1.5)]";
    }
  }

  //技3
  if (wtype3S4 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P3S4 = Math.floor((calc3P3S4 * 150) / 100);
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 150) / 100);
      tekiTenkiDisplayS4W3 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100);
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100);
      tekiTenkiDisplayS4W3 = "[晴れ]";
    }
  } else if (wtype3S4 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P3S4 = Math.floor((calc3P3S4 * 150) / 100);
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 150) / 100);
      tekiTenkiDisplayS4W3 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100);
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100);
      tekiTenkiDisplayS4W3 = "[雨]";
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P3S4 = Math.floor((calc3P3S4 * 150) / 100);
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 150) / 100);
      tekiMoraibiDisplayS4W3 = "[貰い火(炎*1.5)]";
    }
  }

  //技4
  if (wtype4S4 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P4S4 = Math.floor((calc3P4S4 * 150) / 100);
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 150) / 100);
      tekiTenkiDisplayS4W4 = "[雨]";
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100);
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100);
      tekiTenkiDisplayS4W4 = "[晴れ]";
    }
  } else if (wtype4S4 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P4S4 = Math.floor((calc3P4S4 * 150) / 100);
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 150) / 100);
      tekiTenkiDisplayS4W4 = "[晴れ]";
    }
    if (selectedWhether === "おおあめ") {
      calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100);
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100);
      tekiTenkiDisplayS4W4 = "[雨]";
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P4S4 = Math.floor((calc3P4S4 * 150) / 100);
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 150) / 100);
      tekiMoraibiDisplayS4W4 = "[貰い火(炎*1.5)]";
    }
  }

  // Critical
  ////////////////////////急所/////////////////////////////////////////急所/////////////////
  ////////////////////////急所/////////////////////////////////////////急所/////////////////
  //敵型1へ攻撃
  if (wtype1 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 150) / 100);
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 50) / 100);
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 50) / 100);
    }
  } else if (wtype1 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 150) / 100);
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 50) / 100);
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 50) / 100);
    }
    if (selectedAbility === "もらいび") {
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 150) / 100);
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 150) / 100);
    }
  }

  if (wtype2 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 150) / 100);
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 50) / 100);
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 50) / 100);
    }
  } else if (wtype2 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 150) / 100);
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 50) / 100);
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 50) / 100);
    }
    if (selectedAbility === "もらいび") {
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 150) / 100);
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 150) / 100);
    }
  }

  if (wtype3 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 150) / 100);
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 50) / 100);
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 50) / 100);
    }
  } else if (wtype3 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 150) / 100);
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 50) / 100);
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 50) / 100);
    }
    if (selectedAbility === "もらいび") {
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 150) / 100);
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 150) / 100);
    }
  }

  if (wtype4 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 150) / 100);
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 50) / 100);
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 50) / 100);
    }
  } else if (wtype4 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 150) / 100);
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 50) / 100);
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 50) / 100);
    }
    if (selectedAbility === "もらいび") {
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 150) / 100);
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 150) / 100);
    }
  }

  //敵型2へ攻撃
  if (wtype1 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 150) / 100);
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 50) / 100);
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 50) / 100);
    }
  } else if (wtype1 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 150) / 100);
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 50) / 100);
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 50) / 100);
    }
    if (selectedAbility === "もらいび") {
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 150) / 100);
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 150) / 100);
    }
  }

  if (wtype2 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 150) / 100);
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 50) / 100);
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 50) / 100);
    }
  } else if (wtype2 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 150) / 100);
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 50) / 100);
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 50) / 100);
    }
    if (selectedAbility === "もらいび") {
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 150) / 100);
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 150) / 100);
    }
  }

  if (wtype3 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 150) / 100);
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 50) / 100);
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 50) / 100);
    }
  } else if (wtype3 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 150) / 100);
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 50) / 100);
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 50) / 100);
    }
    if (selectedAbility === "もらいび") {
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 150) / 100);
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 150) / 100);
    }
  }

  if (wtype4 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 150) / 100);
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 50) / 100);
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 50) / 100);
    }
  } else if (wtype4 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 150) / 100);
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 50) / 100);
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 50) / 100);
    }
    if (selectedAbility === "もらいび") {
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 150) / 100);
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 150) / 100);
    }
  }

  //敵型3へ攻撃
  if (wtype1 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 150) / 100);
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 50) / 100);
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 50) / 100);
    }
  } else if (wtype1 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 150) / 100);
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 50) / 100);
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 50) / 100);
    }
    if (selectedAbility === "もらいび") {
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 150) / 100);
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 150) / 100);
    }
  }

  if (wtype2 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 150) / 100);
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 50) / 100);
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 50) / 100);
    }
  } else if (wtype2 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 150) / 100);
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 50) / 100);
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 50) / 100);
    }
    if (selectedAbility === "もらいび") {
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 150) / 100);
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 150) / 100);
    }
  }

  if (wtype3 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 150) / 100);
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 50) / 100);
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 50) / 100);
    }
  } else if (wtype3 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 150) / 100);
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 50) / 100);
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 50) / 100);
    }
    if (selectedAbility === "もらいび") {
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 150) / 100);
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 150) / 100);
    }
  }

  if (wtype4 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 150) / 100);
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 50) / 100);
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 50) / 100);
    }
  } else if (wtype4 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 150) / 100);
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 50) / 100);
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 50) / 100);
    }
    if (selectedAbility === "もらいび") {
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 150) / 100);
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 150) / 100);
    }
  }

  //敵型4へ攻撃
  if (wtype1 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 150) / 100);
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 50) / 100);
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 50) / 100);
    }
  } else if (wtype1 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 150) / 100);
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 50) / 100);
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 50) / 100);
    }
    if (selectedAbility === "もらいび") {
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 150) / 100);
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 150) / 100);
    }
  }

  if (wtype2 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 150) / 100);
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 50) / 100);
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 50) / 100);
    }
  } else if (wtype2 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 150) / 100);
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 50) / 100);
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 50) / 100);
    }
    if (selectedAbility === "もらいび") {
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 150) / 100);
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 150) / 100);
    }
  }

  if (wtype3 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 150) / 100);
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 50) / 100);
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 50) / 100);
    }
  } else if (wtype3 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 150) / 100);
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 50) / 100);
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 50) / 100);
    }
    if (selectedAbility === "もらいび") {
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 150) / 100);
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 150) / 100);
    }
  }

  if (wtype4 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 150) / 100);
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 50) / 100);
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 50) / 100);
    }
  } else if (wtype4 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 150) / 100);
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 50) / 100);
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 50) / 100);
    }
    if (selectedAbility === "もらいび") {
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 150) / 100);
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 150) / 100);
    }
  }

  //////////////////////////////////////////////////////////////////
  //敵型1が攻撃
  // 技1
  if (wtype1S1 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 150) / 100);
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 50) / 100);
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 50) / 100);
    }
  } else if (wtype1S1 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 150) / 100);
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 50) / 100);
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 50) / 100);
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 150) / 100);
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 150) / 100);
    }
  }

  //技2
  if (wtype2S1 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 150) / 100);
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 50) / 100);
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 50) / 100);
    }
  } else if (wtype2S1 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 150) / 100);
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 50) / 100);
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 50) / 100);
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 150) / 100);
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 150) / 100);
    }
  }

  //技3
  if (wtype3S1 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 150) / 100);
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 50) / 100);
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 50) / 100);
    }
  } else if (wtype3S1 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 150) / 100);
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 50) / 100);
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 50) / 100);
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 150) / 100);
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 150) / 100);
    }
  }

  //技4
  if (wtype4S1 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 150) / 100);
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 50) / 100);
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 50) / 100);
    }
  } else if (wtype4S1 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 150) / 100);
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 50) / 100);
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 50) / 100);
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 150) / 100);
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 150) / 100);
    }
  }
  //敵型2が攻撃
  // 技1
  if (wtype1S2 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 150) / 100);
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 50) / 100);
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 50) / 100);
    }
  } else if (wtype1S2 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 150) / 100);
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 50) / 100);
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 50) / 100);
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 150) / 100);
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 150) / 100);
    }
  }
  //技2
  if (wtype2S2 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 150) / 100);
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 50) / 100);
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 50) / 100);
    }
  } else if (wtype2S2 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 150) / 100);
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 50) / 100);
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 50) / 100);
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 150) / 100);
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 150) / 100);
    }
  }

  //技3
  if (wtype3S2 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 150) / 100);
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 50) / 100);
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 50) / 100);
    }
  } else if (wtype3S2 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 150) / 100);
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 50) / 100);
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 50) / 100);
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 150) / 100);
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 150) / 100);
    }
  }

  //技4
  if (wtype4S2 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 150) / 100);
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 50) / 100);
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 50) / 100);
    }
  } else if (wtype4S2 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 150) / 100);
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 50) / 100);
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 50) / 100);
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 150) / 100);
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 150) / 100);
    }
  }
  //敵型3が攻撃
  // 技1
  if (wtype1S3 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 150) / 100);
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 50) / 100);
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 50) / 100);
    }
  } else if (wtype1S3 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 150) / 100);
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 50) / 100);
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 50) / 100);
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 150) / 100);
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 150) / 100);
    }
  }

  //技2
  if (wtype2S3 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 150) / 100);
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 50) / 100);
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 50) / 100);
    }
  } else if (wtype2S3 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 150) / 100);
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 50) / 100);
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 50) / 100);
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 150) / 100);
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 150) / 100);
    }
  }

  //技3
  if (wtype3S3 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 150) / 100);
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 50) / 100);
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 50) / 100);
    }
  } else if (wtype3S3 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 150) / 100);
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 50) / 100);
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 50) / 100);
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 150) / 100);
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 150) / 100);
    }
  }

  //技4
  if (wtype4S3 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 150) / 100);
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 50) / 100);
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 50) / 100);
    }
  } else if (wtype4S3 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 150) / 100);
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 50) / 100);
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 50) / 100);
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 150) / 100);
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 150) / 100);
    }
  }
  //敵型4が攻撃
  // 技1
  if (wtype1S4 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 150) / 100);
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 50) / 100);
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 50) / 100);
    }
  } else if (wtype1S4 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 150) / 100);
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 50) / 100);
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 50) / 100);
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 150) / 100);
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 150) / 100);
    }
  }

  //技2
  if (wtype2S4 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 150) / 100);
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 50) / 100);
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 50) / 100);
    }
  } else if (wtype2S4 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 150) / 100);
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 50) / 100);
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 50) / 100);
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 150) / 100);
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 150) / 100);
    }
  }

  //技3
  if (wtype3S4 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 150) / 100);
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 50) / 100);
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 50) / 100);
    }
  } else if (wtype3S4 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 150) / 100);
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 50) / 100);
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 50) / 100);
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 150) / 100);
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 150) / 100);
    }
  }

  //技4
  if (wtype4S4 === "みず") {
    if (selectedWhether === "おおあめ") {
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 150) / 100);
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 150) / 100);
    }
    if (selectedWhether === "ひざしがつよい") {
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 50) / 100);
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 50) / 100);
    }
  } else if (wtype4S4 === "ほのお") {
    if (selectedWhether === "ひざしがつよい") {
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 150) / 100);
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 150) / 100);
    }
    if (selectedWhether === "おおあめ") {
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 50) / 100);
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 50) / 100);
    }
    if (selectedTekiAbility === "もらいび") {
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 150) / 100);
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 150) / 100);
    }
  }

  //////+2//////////////+2//////////////+2//////////////+2//////////////+2//////////////+2//////////////+2////////
  //////+2//////////////+2//////////////+2//////////////+2//////////////+2//////////////+2//////////////+2////////
  calc3P1_S1 = Math.floor(calc3P1_S1 + 2); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1_S2 = Math.floor(calc3P1_S2 + 2); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1_S3 = Math.floor(calc3P1_S3 + 2); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1_S4 = Math.floor(calc3P1_S4 + 2); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3P2_S1 = Math.floor(calc3P2_S1 + 2); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2_S2 = Math.floor(calc3P2_S2 + 2); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2_S3 = Math.floor(calc3P2_S3 + 2); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2_S4 = Math.floor(calc3P2_S4 + 2); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3P3_S1 = Math.floor(calc3P3_S1 + 2); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3_S2 = Math.floor(calc3P3_S2 + 2); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3_S3 = Math.floor(calc3P3_S3 + 2); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3_S4 = Math.floor(calc3P3_S4 + 2); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3P4_S1 = Math.floor(calc3P4_S1 + 2); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4_S2 = Math.floor(calc3P4_S2 + 2); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4_S3 = Math.floor(calc3P4_S3 + 2); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4_S4 = Math.floor(calc3P4_S4 + 2); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS1Power1 = Math.floor(calc3KS1Power1 + 2); //自分ポケ技1が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS1Power2 = Math.floor(calc3KS1Power2 + 2); //自分ポケ技2が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS1Power3 = Math.floor(calc3KS1Power3 + 2); //自分ポケ技3が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS1Power4 = Math.floor(calc3KS1Power4 + 2); //自分ポケ技4が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS2Power1 = Math.floor(calc3KS2Power1 + 2); //自分ポケ技1が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS2Power2 = Math.floor(calc3KS2Power2 + 2); //自分ポケ技2が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS2Power3 = Math.floor(calc3KS2Power3 + 2); //自分ポケ技3が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS2Power4 = Math.floor(calc3KS2Power4 + 2); //自分ポケ技4が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS3Power1 = Math.floor(calc3KS3Power1 + 2); //自分ポケ技1が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS3Power2 = Math.floor(calc3KS3Power2 + 2); //自分ポケ技2が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS3Power3 = Math.floor(calc3KS3Power3 + 2); //自分ポケ技3が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS3Power4 = Math.floor(calc3KS3Power4 + 2); //自分ポケ技4が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS4Power1 = Math.floor(calc3KS4Power1 + 2); //自分ポケ技1が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS4Power2 = Math.floor(calc3KS4Power2 + 2); //自分ポケ技2が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS4Power3 = Math.floor(calc3KS4Power3 + 2); //自分ポケ技3が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS4Power4 = Math.floor(calc3KS4Power4 + 2); //自分ポケ技4が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  //敵ポケ１の型が使う4つの技
  calc3P1S1 = Math.floor(calc3P1S1 + 2); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2S1 = Math.floor(calc3P2S1 + 2); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3S1 = Math.floor(calc3P3S1 + 2); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4S1 = Math.floor(calc3P4S1 + 2); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

  //敵ポケ2の型が使う4つの技
  calc3P1S2 = Math.floor(calc3P1S2 + 2); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2S2 = Math.floor(calc3P2S2 + 2); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3S2 = Math.floor(calc3P3S2 + 2); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4S2 = Math.floor(calc3P4S2 + 2); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

  //敵ポケ3の型が使う4つの技
  calc3P1S3 = Math.floor(calc3P1S3 + 2); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2S3 = Math.floor(calc3P2S3 + 2); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3S3 = Math.floor(calc3P3S3 + 2); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4S3 = Math.floor(calc3P4S3 + 2); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

  //敵ポケ4の型が使う4つの技
  calc3P1S4 = Math.floor(calc3P1S4 + 2); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2S4 = Math.floor(calc3P2S4 + 2); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3S4 = Math.floor(calc3P3S4 + 2); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4S4 = Math.floor(calc3P4S4 + 2); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

  calc3KPower1S1 = Math.floor(calc3KPower1S1 + 2); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower2S1 = Math.floor(calc3KPower2S1 + 2); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower3S1 = Math.floor(calc3KPower3S1 + 2); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower4S1 = Math.floor(calc3KPower4S1 + 2); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KPower1S2 = Math.floor(calc3KPower1S2 + 2); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower2S2 = Math.floor(calc3KPower2S2 + 2); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower3S2 = Math.floor(calc3KPower3S2 + 2); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower4S2 = Math.floor(calc3KPower4S2 + 2); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KPower1S3 = Math.floor(calc3KPower1S3 + 2); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower2S3 = Math.floor(calc3KPower2S3 + 2); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower3S3 = Math.floor(calc3KPower3S3 + 2); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower4S3 = Math.floor(calc3KPower4S3 + 2); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KPower1S4 = Math.floor(calc3KPower1S4 + 2); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower2S4 = Math.floor(calc3KPower2S4 + 2); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower3S4 = Math.floor(calc3KPower3S4 + 2); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower4S4 = Math.floor(calc3KPower4S4 + 2); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  /////////急所//////////
  calc3P1_S1Critical = Math.floor(calc3P1_S1Critical + 2); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1_S2Critical = Math.floor(calc3P1_S2Critical + 2); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1_S3Critical = Math.floor(calc3P1_S3Critical + 2); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1_S4Critical = Math.floor(calc3P1_S4Critical + 2); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3P2_S1Critical = Math.floor(calc3P2_S1Critical + 2); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2_S2Critical = Math.floor(calc3P2_S2Critical + 2); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2_S3Critical = Math.floor(calc3P2_S3Critical + 2); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2_S4Critical = Math.floor(calc3P2_S4Critical + 2); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3P3_S1Critical = Math.floor(calc3P3_S1Critical + 2); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3_S2Critical = Math.floor(calc3P3_S2Critical + 2); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3_S3Critical = Math.floor(calc3P3_S3Critical + 2); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3_S4Critical = Math.floor(calc3P3_S4Critical + 2); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3P4_S1Critical = Math.floor(calc3P4_S1Critical + 2); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4_S2Critical = Math.floor(calc3P4_S2Critical + 2); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4_S3Critical = Math.floor(calc3P4_S3Critical + 2); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4_S4Critical = Math.floor(calc3P4_S4Critical + 2); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS1Power1Critical = Math.floor(calc3KS1Power1Critical + 2); //自分ポケ技1が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS1Power2Critical = Math.floor(calc3KS1Power2Critical + 2); //自分ポケ技2が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS1Power3Critical = Math.floor(calc3KS1Power3Critical + 2); //自分ポケ技3が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS1Power4Critical = Math.floor(calc3KS1Power4Critical + 2); //自分ポケ技4が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS2Power1Critical = Math.floor(calc3KS2Power1Critical + 2); //自分ポケ技1が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS2Power2Critical = Math.floor(calc3KS2Power2Critical + 2); //自分ポケ技2が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS2Power3Critical = Math.floor(calc3KS2Power3Critical + 2); //自分ポケ技3が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS2Power4Critical = Math.floor(calc3KS2Power4Critical + 2); //自分ポケ技4が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS3Power1Critical = Math.floor(calc3KS3Power1Critical + 2); //自分ポケ技1が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS3Power2Critical = Math.floor(calc3KS3Power2Critical + 2); //自分ポケ技2が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS3Power3Critical = Math.floor(calc3KS3Power3Critical + 2); //自分ポケ技3が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS3Power4Critical = Math.floor(calc3KS3Power4Critical + 2); //自分ポケ技4が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS4Power1Critical = Math.floor(calc3KS4Power1Critical + 2); //自分ポケ技1が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS4Power2Critical = Math.floor(calc3KS4Power2Critical + 2); //自分ポケ技2が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS4Power3Critical = Math.floor(calc3KS4Power3Critical + 2); //自分ポケ技3が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS4Power4Critical = Math.floor(calc3KS4Power4Critical + 2); //自分ポケ技4が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  //敵ポケ１の型が使う4つの技
  calc3P1S1Critical = Math.floor(calc3P1S1Critical + 2); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P2S1Critical = Math.floor(calc3P2S1Critical + 2); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P3S1Critical = Math.floor(calc3P3S1Critical + 2); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
  calc3P4S1Critical = Math.floor(calc3P4S1Critical + 2); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)

  //敵ポケ2の型が使う4つの技
  calc3P1S2Critical = Math.floor(calc3P1S2Critical + 2); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P2S2Critical = Math.floor(calc3P2S2Critical + 2); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P3S2Critical = Math.floor(calc3P3S2Critical + 2); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P4S2Critical = Math.floor(calc3P4S2Critical + 2); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)

  //敵ポケ3の型が使う4つの技
  calc3P1S3Critical = Math.floor(calc3P1S3Critical + 2); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P2S3Critical = Math.floor(calc3P2S3Critical + 2); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
  calc3P3S3Critical = Math.floor(calc3P3S3Critical + 2); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P4S3Critical = Math.floor(calc3P4S3Critical + 2); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)

  //敵ポケ4の型が使う4つの技
  calc3P1S4Critical = Math.floor(calc3P1S4Critical + 2); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P2S4Critical = Math.floor(calc3P2S4Critical + 2); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P3S4Critical = Math.floor(calc3P3S4Critical + 2); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P4S4Critical = Math.floor(calc3P4S4Critical + 2); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

  calc3KPower1S1Critical = Math.floor(calc3KPower1S1Critical + 2); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower2S1Critical = Math.floor(calc3KPower2S1Critical + 2); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower3S1Critical = Math.floor(calc3KPower3S1Critical + 2); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower4S1Critical = Math.floor(calc3KPower4S1Critical + 2); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  calc3KPower1S2Critical = Math.floor(calc3KPower1S2Critical + 2); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower2S2Critical = Math.floor(calc3KPower2S2Critical + 2); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower3S2Critical = Math.floor(calc3KPower3S2Critical + 2); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower4S2Critical = Math.floor(calc3KPower4S2Critical + 2); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  calc3KPower1S3Critical = Math.floor(calc3KPower1S3Critical + 2); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower2S3Critical = Math.floor(calc3KPower2S3Critical + 2); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower3S3Critical = Math.floor(calc3KPower3S3Critical + 2); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower4S3Critical = Math.floor(calc3KPower4S3Critical + 2); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  calc3KPower1S4Critical = Math.floor(calc3KPower1S4Critical + 2); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower2S4Critical = Math.floor(calc3KPower2S4Critical + 2); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower3S4Critical = Math.floor(calc3KPower3S4Critical + 2); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower4S4Critical = Math.floor(calc3KPower4S4Critical + 2); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  ////急所補正////////急所補正////////急所補正////////急所補正////////急所補正////
  ////急所補正////////急所補正////////急所補正////////急所補正////////急所補正////
  calc3P1_S1Critical = Math.floor(calc3P1_S1Critical * 2); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1_S2Critical = Math.floor(calc3P1_S2Critical * 2); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1_S3Critical = Math.floor(calc3P1_S3Critical * 2); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1_S4Critical = Math.floor(calc3P1_S4Critical * 2); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3P2_S1Critical = Math.floor(calc3P2_S1Critical * 2); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2_S2Critical = Math.floor(calc3P2_S2Critical * 2); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2_S3Critical = Math.floor(calc3P2_S3Critical * 2); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2_S4Critical = Math.floor(calc3P2_S4Critical * 2); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3P3_S1Critical = Math.floor(calc3P3_S1Critical * 2); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3_S2Critical = Math.floor(calc3P3_S2Critical * 2); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3_S3Critical = Math.floor(calc3P3_S3Critical * 2); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3_S4Critical = Math.floor(calc3P3_S4Critical * 2); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3P4_S1Critical = Math.floor(calc3P4_S1Critical * 2); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4_S2Critical = Math.floor(calc3P4_S2Critical * 2); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4_S3Critical = Math.floor(calc3P4_S3Critical * 2); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4_S4Critical = Math.floor(calc3P4_S4Critical * 2); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS1Power1Critical = Math.floor(calc3KS1Power1Critical * 2); //自分ポケ技1が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS1Power2Critical = Math.floor(calc3KS1Power2Critical * 2); //自分ポケ技2が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS1Power3Critical = Math.floor(calc3KS1Power3Critical * 2); //自分ポケ技3が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS1Power4Critical = Math.floor(calc3KS1Power4Critical * 2); //自分ポケ技4が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS2Power1Critical = Math.floor(calc3KS2Power1Critical * 2); //自分ポケ技1が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS2Power2Critical = Math.floor(calc3KS2Power2Critical * 2); //自分ポケ技2が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS2Power3Critical = Math.floor(calc3KS2Power3Critical * 2); //自分ポケ技3が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS2Power4Critical = Math.floor(calc3KS2Power4Critical * 2); //自分ポケ技4が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS3Power1Critical = Math.floor(calc3KS3Power1Critical * 2); //自分ポケ技1が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS3Power2Critical = Math.floor(calc3KS3Power2Critical * 2); //自分ポケ技2が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS3Power3Critical = Math.floor(calc3KS3Power3Critical * 2); //自分ポケ技3が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS3Power4Critical = Math.floor(calc3KS3Power4Critical * 2); //自分ポケ技4が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  calc3KS4Power1Critical = Math.floor(calc3KS4Power1Critical * 2); //自分ポケ技1が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS4Power2Critical = Math.floor(calc3KS4Power2Critical * 2); //自分ポケ技2が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS4Power3Critical = Math.floor(calc3KS4Power3Critical * 2); //自分ポケ技3が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3KS4Power4Critical = Math.floor(calc3KS4Power4Critical * 2); //自分ポケ技4が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

  //敵ポケ１の型が使う4つの技
  calc3P1S1Critical = Math.floor(calc3P1S1Critical * 2); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P2S1Critical = Math.floor(calc3P2S1Critical * 2); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P3S1Critical = Math.floor(calc3P3S1Critical * 2); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
  calc3P4S1Critical = Math.floor(calc3P4S1Critical * 2); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)

  //敵ポケ2の型が使う4つの技
  calc3P1S2Critical = Math.floor(calc3P1S2Critical * 2); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P2S2Critical = Math.floor(calc3P2S2Critical * 2); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P3S2Critical = Math.floor(calc3P3S2Critical * 2); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P4S2Critical = Math.floor(calc3P4S2Critical * 2); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)

  //敵ポケ3の型が使う4つの技
  calc3P1S3Critical = Math.floor(calc3P1S3Critical * 2); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P2S3Critical = Math.floor(calc3P2S3Critical * 2); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
  calc3P3S3Critical = Math.floor(calc3P3S3Critical * 2); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P4S3Critical = Math.floor(calc3P4S3Critical * 2); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)

  //敵ポケ4の型が使う4つの技
  calc3P1S4Critical = Math.floor(calc3P1S4Critical * 2); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P2S4Critical = Math.floor(calc3P2S4Critical * 2); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P3S4Critical = Math.floor(calc3P3S4Critical * 2); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3P4S4Critical = Math.floor(calc3P4S4Critical * 2); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

  calc3KPower1S1Critical = Math.floor(calc3KPower1S1Critical * 2); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower2S1Critical = Math.floor(calc3KPower2S1Critical * 2); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower3S1Critical = Math.floor(calc3KPower3S1Critical * 2); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower4S1Critical = Math.floor(calc3KPower4S1Critical * 2); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  calc3KPower1S2Critical = Math.floor(calc3KPower1S2Critical * 2); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower2S2Critical = Math.floor(calc3KPower2S2Critical * 2); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower3S2Critical = Math.floor(calc3KPower3S2Critical * 2); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower4S2Critical = Math.floor(calc3KPower4S2Critical * 2); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  calc3KPower1S3Critical = Math.floor(calc3KPower1S3Critical * 2); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower2S3Critical = Math.floor(calc3KPower2S3Critical * 2); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower3S3Critical = Math.floor(calc3KPower3S3Critical * 2); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower4S3Critical = Math.floor(calc3KPower4S3Critical * 2); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  calc3KPower1S4Critical = Math.floor(calc3KPower1S4Critical * 2); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower2S4Critical = Math.floor(calc3KPower2S4Critical * 2); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower3S4Critical = Math.floor(calc3KPower3S4Critical * 2); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  calc3KPower4S4Critical = Math.floor(calc3KPower4S4Critical * 2); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  ///////いのちのたまた////////////////いのちのたまた////////////////いのちのたまた/////////
  ///////いのちのたまた////////////////いのちのたまた////////////////いのちのたまた/////////
  let myDamageHoseiDisplay1 = "";
  let myDamageHoseiDisplay2 = "";
  let myDamageHoseiDisplay3 = "";
  let myDamageHoseiDisplay4 = "";
  let teki1DamageHoseiDisplay1 = "";
  let teki1DamageHoseiDisplay2 = "";
  let teki1DamageHoseiDisplay3 = "";
  let teki1DamageHoseiDisplay4 = "";
  let teki2DamageHoseiDisplay1 = "";
  let teki2DamageHoseiDisplay2 = "";
  let teki2DamageHoseiDisplay3 = "";
  let teki2DamageHoseiDisplay4 = "";
  let teki3DamageHoseiDisplay1 = "";
  let teki3DamageHoseiDisplay2 = "";
  let teki3DamageHoseiDisplay3 = "";
  let teki3DamageHoseiDisplay4 = "";
  let teki4DamageHoseiDisplay1 = "";
  let teki4DamageHoseiDisplay2 = "";
  let teki4DamageHoseiDisplay3 = "";
  let teki4DamageHoseiDisplay4 = "";

  if (myItem_tab3 === "いのちのたま") {
    myDamageHoseiDisplay1 = "[命玉]";
    myDamageHoseiDisplay2 = "[命玉]";
    myDamageHoseiDisplay3 = "[命玉]";
    myDamageHoseiDisplay4 = "[命玉]";
    calc3P1_S1 = Math.floor((calc3P1_S1 * 130) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P1_S2 = Math.floor((calc3P1_S2 * 130) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P1_S3 = Math.floor((calc3P1_S3 * 130) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P1_S4 = Math.floor((calc3P1_S4 * 130) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

    calc3P2_S1 = Math.floor((calc3P2_S1 * 130) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P2_S2 = Math.floor((calc3P2_S2 * 130) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P2_S3 = Math.floor((calc3P2_S3 * 130) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P2_S4 = Math.floor((calc3P2_S4 * 130) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

    calc3P3_S1 = Math.floor((calc3P3_S1 * 130) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P3_S2 = Math.floor((calc3P3_S2 * 130) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P3_S3 = Math.floor((calc3P3_S3 * 130) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P3_S4 = Math.floor((calc3P3_S4 * 130) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

    calc3P4_S1 = Math.floor((calc3P4_S1 * 130) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P4_S2 = Math.floor((calc3P4_S2 * 130) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P4_S3 = Math.floor((calc3P4_S3 * 130) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P4_S4 = Math.floor((calc3P4_S4 * 130) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

    calc3KS1Power1 = Math.floor((calc3KS1Power1 * 130) / 100); //自分ポケ技1が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS1Power2 = Math.floor((calc3KS1Power2 * 130) / 100); //自分ポケ技2が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS1Power3 = Math.floor((calc3KS1Power3 * 130) / 100); //自分ポケ技3が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS1Power4 = Math.floor((calc3KS1Power4 * 130) / 100); //自分ポケ技4が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

    calc3KS2Power1 = Math.floor((calc3KS2Power1 * 130) / 100); //自分ポケ技1が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS2Power2 = Math.floor((calc3KS2Power2 * 130) / 100); //自分ポケ技2が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS2Power3 = Math.floor((calc3KS2Power3 * 130) / 100); //自分ポケ技3が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS2Power4 = Math.floor((calc3KS2Power4 * 130) / 100); //自分ポケ技4が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

    calc3KS3Power1 = Math.floor((calc3KS3Power1 * 130) / 100); //自分ポケ技1が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS3Power2 = Math.floor((calc3KS3Power2 * 130) / 100); //自分ポケ技2が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS3Power3 = Math.floor((calc3KS3Power3 * 130) / 100); //自分ポケ技3が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS3Power4 = Math.floor((calc3KS3Power4 * 130) / 100); //自分ポケ技4が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

    calc3KS4Power1 = Math.floor((calc3KS4Power1 * 130) / 100); //自分ポケ技1が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS4Power2 = Math.floor((calc3KS4Power2 * 130) / 100); //自分ポケ技2が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS4Power3 = Math.floor((calc3KS4Power3 * 130) / 100); //自分ポケ技3が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS4Power4 = Math.floor((calc3KS4Power4 * 130) / 100); //自分ポケ技4が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

    /////////急所//////////
    calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 130) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 130) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 130) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 130) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

    calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 130) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 130) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 130) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 130) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

    calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 130) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 130) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 130) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 130) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

    calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 130) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 130) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 130) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
    calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 130) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○

    calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 130) / 100); //自分ポケ技1が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 130) / 100); //自分ポケ技2が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 130) / 100); //自分ポケ技3が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 130) / 100); //自分ポケ技4が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

    calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 130) / 100); //自分ポケ技1が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 130) / 100); //自分ポケ技2が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 130) / 100); //自分ポケ技3が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 130) / 100); //自分ポケ技4が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

    calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 130) / 100); //自分ポケ技1が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 130) / 100); //自分ポケ技2が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 130) / 100); //自分ポケ技3が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 130) / 100); //自分ポケ技4が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

    calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 130) / 100); //自分ポケ技1が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 130) / 100); //自分ポケ技2が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 130) / 100); //自分ポケ技3が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 130) / 100); //自分ポケ技4が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  }

  if (tekiItem1_tab3 === "いのちのたま") {
    teki1DamageHoseiDisplay1 = "[命玉]";
    teki1DamageHoseiDisplay2 = "[命玉]";
    teki1DamageHoseiDisplay3 = "[命玉]";
    teki1DamageHoseiDisplay4 = "[命玉]";
    //敵ポケ１の型が使う4つの技
    calc3P1S1 = Math.floor((calc3P1S1 * 130) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
    calc3P2S1 = Math.floor((calc3P2S1 * 130) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
    calc3P3S1 = Math.floor((calc3P3S1 * 130) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
    calc3P4S1 = Math.floor((calc3P4S1 * 130) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

    calc3KPower1S1 = Math.floor((calc3KPower1S1 * 130) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KPower2S1 = Math.floor((calc3KPower2S1 * 130) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KPower3S1 = Math.floor((calc3KPower3S1 * 130) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KPower4S1 = Math.floor((calc3KPower4S1 * 130) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

    //敵ポケ１の型が使う4つの技
    calc3P1S1Critical = Math.floor((calc3P1S1Critical * 130) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
    calc3P2S1Critical = Math.floor((calc3P2S1Critical * 130) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
    calc3P3S1Critical = Math.floor((calc3P3S1Critical * 130) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
    calc3P4S1Critical = Math.floor((calc3P4S1Critical * 130) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)

    calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 130) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 130) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 130) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 130) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
  }

  if (tekiItem2_tab3 === "いのちのたま") {
    teki2DamageHoseiDisplay1 = "[命玉]";
    teki2DamageHoseiDisplay2 = "[命玉]";
    teki2DamageHoseiDisplay3 = "[命玉]";
    teki2DamageHoseiDisplay4 = "[命玉]";
    //敵ポケ2の型が使う4つの技
    calc3P1S2 = Math.floor((calc3P1S2 * 130) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
    calc3P2S2 = Math.floor((calc3P2S2 * 130) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
    calc3P3S2 = Math.floor((calc3P3S2 * 130) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
    calc3P4S2 = Math.floor((calc3P4S2 * 130) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

    calc3KPower1S2 = Math.floor((calc3KPower1S2 * 130) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KPower2S2 = Math.floor((calc3KPower2S2 * 130) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KPower3S2 = Math.floor((calc3KPower3S2 * 130) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KPower4S2 = Math.floor((calc3KPower4S2 * 130) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

    //敵ポケ2の型が使う4つの技
    calc3P1S2Critical = Math.floor((calc3P1S2Critical * 130) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
    calc3P2S2Critical = Math.floor((calc3P2S2Critical * 130) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
    calc3P3S2Critical = Math.floor((calc3P3S2Critical * 130) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
    calc3P4S2Critical = Math.floor((calc3P4S2Critical * 130) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)

    calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 130) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 130) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 130) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 130) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
  }

  if (tekiItem3_tab3 === "いのちのたま") {
    teki3DamageHoseiDisplay1 = "[命玉]";
    teki3DamageHoseiDisplay2 = "[命玉]";
    teki3DamageHoseiDisplay3 = "[命玉]";
    teki3DamageHoseiDisplay4 = "[命玉]";
    //敵ポケ3の型が使う4つの技
    calc3P1S3 = Math.floor((calc3P1S3 * 130) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
    calc3P2S3 = Math.floor((calc3P2S3 * 130) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
    calc3P3S3 = Math.floor((calc3P3S3 * 130) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
    calc3P4S3 = Math.floor((calc3P4S3 * 130) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

    calc3KPower1S3 = Math.floor((calc3KPower1S3 * 130) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KPower2S3 = Math.floor((calc3KPower2S3 * 130) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KPower3S3 = Math.floor((calc3KPower3S3 * 130) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KPower4S3 = Math.floor((calc3KPower4S3 * 130) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

    //敵ポケ3の型が使う4つの技
    calc3P1S3Critical = Math.floor((calc3P1S3Critical * 130) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
    calc3P2S3Critical = Math.floor((calc3P2S3Critical * 130) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
    calc3P3S3Critical = Math.floor((calc3P3S3Critical * 130) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
    calc3P4S3Critical = Math.floor((calc3P4S3Critical * 130) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)

    calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 130) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 130) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 130) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 130) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
  }
  if (tekiItem4_tab3 === "いのちのたま") {
    teki4DamageHoseiDisplay1 = "[命玉]";
    teki4DamageHoseiDisplay2 = "[命玉]";
    teki4DamageHoseiDisplay3 = "[命玉]";
    teki4DamageHoseiDisplay4 = "[命玉]";

    //敵ポケ4の型が使う4つの技
    calc3P1S4 = Math.floor((calc3P1S4 * 130) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
    calc3P2S4 = Math.floor((calc3P2S4 * 130) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
    calc3P3S4 = Math.floor((calc3P3S4 * 130) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
    calc3P4S4 = Math.floor((calc3P4S4 * 130) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

    calc3KPower1S4 = Math.floor((calc3KPower1S4 * 130) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KPower2S4 = Math.floor((calc3KPower2S4 * 130) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KPower3S4 = Math.floor((calc3KPower3S4 * 130) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
    calc3KPower4S4 = Math.floor((calc3KPower4S4 * 130) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○

    //敵ポケ4の型が使う4つの技
    calc3P1S4Critical = Math.floor((calc3P1S4Critical * 130) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
    calc3P2S4Critical = Math.floor((calc3P2S4Critical * 130) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
    calc3P3S4Critical = Math.floor((calc3P3S4Critical * 130) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
    calc3P4S4Critical = Math.floor((calc3P4S4Critical * 130) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○

    calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 130) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 130) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 130) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 130) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
  }

  //!calc4(乱数補正)calc4(乱数補正)calc4(乱数補正)calc4(乱数補正)calc4(乱数補正)calc4(乱数補正)calc4(乱数補正)calc4(乱数補正)
  //!calc4(乱数補正)calc4(乱数補正)calc4(乱数補正)calc4(乱数補正)calc4(乱数補正)calc4(乱数補正)calc4(乱数補正)calc4(乱数補正)

  //////+2//////////////+2//////////////+2//////////////+2//////////////+2//////////////+2//////////////+2////////
  //////+2//////////////+2//////////////+2//////////////+2//////////////+2//////////////+2//////////////+2////////
  let calc4P1_S1 = Math.floor((calc3P1_S1 * 85) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
  let calc4P1_S2 = Math.floor((calc3P1_S2 * 85) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
  let calc4P1_S3 = Math.floor((calc3P1_S3 * 85) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
  let calc4P1_S4 = Math.floor((calc3P1_S4 * 85) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

  let calc4P2_S1 = Math.floor((calc3P2_S1 * 85) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
  let calc4P2_S2 = Math.floor((calc3P2_S2 * 85) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
  let calc4P2_S3 = Math.floor((calc3P2_S3 * 85) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
  let calc4P2_S4 = Math.floor((calc3P2_S4 * 85) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

  let calc4P3_S1 = Math.floor((calc3P3_S1 * 85) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
  let calc4P3_S2 = Math.floor((calc3P3_S2 * 85) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
  let calc4P3_S3 = Math.floor((calc3P3_S3 * 85) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
  let calc4P3_S4 = Math.floor((calc3P3_S4 * 85) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

  let calc4P4_S1 = Math.floor((calc3P4_S1 * 85) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
  let calc4P4_S2 = Math.floor((calc3P4_S2 * 85) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
  let calc4P4_S3 = Math.floor((calc3P4_S3 * 85) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
  let calc4P4_S4 = Math.floor((calc3P4_S4 * 85) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

  let calc4KS1Power1 = Math.floor((calc3KS1Power1 * 85) / 100); //自分ポケ技1が敵型1への（補正あり）威力
  let calc4KS1Power2 = Math.floor((calc3KS1Power2 * 85) / 100); //自分ポケ技2が敵型1への（補正あり）威力
  let calc4KS1Power3 = Math.floor((calc3KS1Power3 * 85) / 100); //自分ポケ技3が敵型1への（補正あり）威力
  let calc4KS1Power4 = Math.floor((calc3KS1Power4 * 85) / 100); //自分ポケ技4が敵型1への（補正あり）威力

  let calc4KS2Power1 = Math.floor((calc3KS2Power1 * 85) / 100); //自分ポケ技1が敵型2への（補正あり）威力
  let calc4KS2Power2 = Math.floor((calc3KS2Power2 * 85) / 100); //自分ポケ技2が敵型2への（補正あり）威力
  let calc4KS2Power3 = Math.floor((calc3KS2Power3 * 85) / 100); //自分ポケ技3が敵型2への（補正あり）威力
  let calc4KS2Power4 = Math.floor((calc3KS2Power4 * 85) / 100); //自分ポケ技4が敵型2への（補正あり）威力

  let calc4KS3Power1 = Math.floor((calc3KS3Power1 * 85) / 100); //自分ポケ技1が敵型3への（補正あり）威力
  let calc4KS3Power2 = Math.floor((calc3KS3Power2 * 85) / 100); //自分ポケ技2が敵型3への（補正あり）威力
  let calc4KS3Power3 = Math.floor((calc3KS3Power3 * 85) / 100); //自分ポケ技3が敵型3への（補正あり）威力
  let calc4KS3Power4 = Math.floor((calc3KS3Power4 * 85) / 100); //自分ポケ技4が敵型3への（補正あり）威力

  let calc4KS4Power1 = Math.floor((calc3KS4Power1 * 85) / 100); //自分ポケ技1が敵型4への（補正あり）威力
  let calc4KS4Power2 = Math.floor((calc3KS4Power2 * 85) / 100); //自分ポケ技2が敵型4への（補正あり）威力
  let calc4KS4Power3 = Math.floor((calc3KS4Power3 * 85) / 100); //自分ポケ技3が敵型4への（補正あり）威力
  let calc4KS4Power4 = Math.floor((calc3KS4Power4 * 85) / 100); //自分ポケ技4が敵型4への（補正あり）威力

  //敵ポケ１の型が使う4つの技
  let calc4P1S1 = Math.floor((calc3P1S1 * 85) / 100); //敵ポケ１技1例外補正なし威力
  let calc4P2S1 = Math.floor((calc3P2S1 * 85) / 100); //敵ポケ１技2例外補正なし威力
  let calc4P3S1 = Math.floor((calc3P3S1 * 85) / 100); //敵ポケ１技3例外補正なし威力
  let calc4P4S1 = Math.floor((calc3P4S1 * 85) / 100); //敵ポケ１技4例外補正なし威力

  //敵ポケ2の型が使う4つの技
  let calc4P1S2 = Math.floor((calc3P1S2 * 85) / 100); //敵ポケ2技1例外補正なし威力
  let calc4P2S2 = Math.floor((calc3P2S2 * 85) / 100); //敵ポケ2技2例外補正なし威力
  let calc4P3S2 = Math.floor((calc3P3S2 * 85) / 100); //敵ポケ2技3例外補正なし威力
  let calc4P4S2 = Math.floor((calc3P4S2 * 85) / 100); //敵ポケ2技4例外補正なし威力

  //敵ポケ3の型が使う4つの技
  let calc4P1S3 = Math.floor((calc3P1S3 * 85) / 100); //敵ポケ3技1例外補正なし威力
  let calc4P2S3 = Math.floor((calc3P2S3 * 85) / 100); //敵ポケ3技2例外補正なし威力
  let calc4P3S3 = Math.floor((calc3P3S3 * 85) / 100); //敵ポケ3技3例外補正なし威力
  let calc4P4S3 = Math.floor((calc3P4S3 * 85) / 100); //敵ポケ3技4例外補正なし威力

  //敵ポケ4の型が使う4つの技
  let calc4P1S4 = Math.floor((calc3P1S4 * 85) / 100); //敵ポケ4技1例外補正なし威力
  let calc4P2S4 = Math.floor((calc3P2S4 * 85) / 100); //敵ポケ4技2例外補正なし威力
  let calc4P3S4 = Math.floor((calc3P3S4 * 85) / 100); //敵ポケ4技3例外補正なし威力
  let calc4P4S4 = Math.floor((calc3P4S4 * 85) / 100); //敵ポケ4技4例外補正なし威力

  let calc4KPower1S1 = Math.floor((calc3KPower1S1 * 85) / 100); //敵1ポケ技1（補正あり）威力
  let calc4KPower2S1 = Math.floor((calc3KPower2S1 * 85) / 100); //敵1ポケ技2（補正あり）威力
  let calc4KPower3S1 = Math.floor((calc3KPower3S1 * 85) / 100); //敵1ポケ技3（補正あり）威力
  let calc4KPower4S1 = Math.floor((calc3KPower4S1 * 85) / 100); //敵1ポケ技4（補正あり）威力

  let calc4KPower1S2 = Math.floor((calc3KPower1S2 * 85) / 100); //敵2ポケ技1（補正あり）威力
  let calc4KPower2S2 = Math.floor((calc3KPower2S2 * 85) / 100); //敵2ポケ技2（補正あり）威力
  let calc4KPower3S2 = Math.floor((calc3KPower3S2 * 85) / 100); //敵2ポケ技3（補正あり）威力
  let calc4KPower4S2 = Math.floor((calc3KPower4S2 * 85) / 100); //敵2ポケ技4（補正あり）威力

  let calc4KPower1S3 = Math.floor((calc3KPower1S3 * 85) / 100); //敵3ポケ技1（補正あり）威力
  let calc4KPower2S3 = Math.floor((calc3KPower2S3 * 85) / 100); //敵3ポケ技2（補正あり）威力
  let calc4KPower3S3 = Math.floor((calc3KPower3S3 * 85) / 100); //敵3ポケ技3（補正あり）威力
  let calc4KPower4S3 = Math.floor((calc3KPower4S3 * 85) / 100); //敵3ポケ技4（補正あり）威力

  let calc4KPower1S4 = Math.floor((calc3KPower1S4 * 85) / 100); //敵4ポケ技1（補正あり）威力
  let calc4KPower2S4 = Math.floor((calc3KPower2S4 * 85) / 100); //敵4ポケ技2（補正あり）威力
  let calc4KPower3S4 = Math.floor((calc3KPower3S4 * 85) / 100); //敵4ポケ技3（補正あり）威力
  let calc4KPower4S4 = Math.floor((calc3KPower4S4 * 85) / 100); //敵4ポケ技4（補正あり）威力

  /////////急所//////////
  let calc4P1_S1Critical = Math.floor((calc3P1_S1Critical * 85) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
  let calc4P1_S2Critical = Math.floor((calc3P1_S2Critical * 85) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
  let calc4P1_S3Critical = Math.floor((calc3P1_S3Critical * 85) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
  let calc4P1_S4Critical = Math.floor((calc3P1_S4Critical * 85) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

  let calc4P2_S1Critical = Math.floor((calc3P2_S1Critical * 85) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
  let calc4P2_S2Critical = Math.floor((calc3P2_S2Critical * 85) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
  let calc4P2_S3Critical = Math.floor((calc3P2_S3Critical * 85) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
  let calc4P2_S4Critical = Math.floor((calc3P2_S4Critical * 85) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

  let calc4P3_S1Critical = Math.floor((calc3P3_S1Critical * 85) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
  let calc4P3_S2Critical = Math.floor((calc3P3_S2Critical * 85) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
  let calc4P3_S3Critical = Math.floor((calc3P3_S3Critical * 85) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
  let calc4P3_S4Critical = Math.floor((calc3P3_S4Critical * 85) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

  let calc4P4_S1Critical = Math.floor((calc3P4_S1Critical * 85) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
  let calc4P4_S2Critical = Math.floor((calc3P4_S2Critical * 85) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
  let calc4P4_S3Critical = Math.floor((calc3P4_S3Critical * 85) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
  let calc4P4_S4Critical = Math.floor((calc3P4_S4Critical * 85) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

  let calc4KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 85) / 100); //自分ポケ技1が敵型1への（補正あり）威力
  let calc4KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 85) / 100); //自分ポケ技2が敵型1への（補正あり）威力
  let calc4KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 85) / 100); //自分ポケ技3が敵型1への（補正あり）威力
  let calc4KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 85) / 100); //自分ポケ技4が敵型1への（補正あり）威力

  let calc4KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 85) / 100); //自分ポケ技1が敵型2への（補正あり）威力
  let calc4KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 85) / 100); //自分ポケ技2が敵型2への（補正あり）威力
  let calc4KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 85) / 100); //自分ポケ技3が敵型2への（補正あり）威力
  let calc4KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 85) / 100); //自分ポケ技4が敵型2への（補正あり）威力

  let calc4KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 85) / 100); //自分ポケ技1が敵型3への（補正あり）威力
  let calc4KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 85) / 100); //自分ポケ技2が敵型3への（補正あり）威力
  let calc4KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 85) / 100); //自分ポケ技3が敵型3への（補正あり）威力
  let calc4KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 85) / 100); //自分ポケ技4が敵型3への（補正あり）威力

  let calc4KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 85) / 100); //自分ポケ技1が敵型4への（補正あり）威力
  let calc4KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 85) / 100); //自分ポケ技2が敵型4への（補正あり）威力
  let calc4KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 85) / 100); //自分ポケ技3が敵型4への（補正あり）威力
  let calc4KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 85) / 100); //自分ポケ技4が敵型4への（補正あり）威力

  //敵ポケ１の型が使う4つの技
  let calc4P1S1Critical = Math.floor((calc3P1S1Critical * 85) / 100); //敵ポケ１技1例外補正なし威力
  let calc4P2S1Critical = Math.floor((calc3P2S1Critical * 85) / 100); //敵ポケ１技2例外補正なし威力
  let calc4P3S1Critical = Math.floor((calc3P3S1Critical * 85) / 100); //敵ポケ１技3例外補正なし威力
  let calc4P4S1Critical = Math.floor((calc3P4S1Critical * 85) / 100); //敵ポケ１技4例外補正なし威力

  //敵ポケ2の型が使う4つの技
  let calc4P1S2Critical = Math.floor((calc3P1S2Critical * 85) / 100); //敵ポケ2技1例外補正なし威力
  let calc4P2S2Critical = Math.floor((calc3P2S2Critical * 85) / 100); //敵ポケ2技2例外補正なし威力
  let calc4P3S2Critical = Math.floor((calc3P3S2Critical * 85) / 100); //敵ポケ2技3例外補正なし威力
  let calc4P4S2Critical = Math.floor((calc3P4S2Critical * 85) / 100); //敵ポケ2技4例外補正なし威力

  //敵ポケ3の型が使う4つの技
  let calc4P1S3Critical = Math.floor((calc3P1S3Critical * 85) / 100); //敵ポケ3技1例外補正なし威力
  let calc4P2S3Critical = Math.floor((calc3P2S3Critical * 85) / 100); //敵ポケ3技2例外補正なし威力
  let calc4P3S3Critical = Math.floor((calc3P3S3Critical * 85) / 100); //敵ポケ3技3例外補正なし威力
  let calc4P4S3Critical = Math.floor((calc3P4S3Critical * 85) / 100); //敵ポケ3技4例外補正なし威力

  //敵ポケ4の型が使う4つの技
  let calc4P1S4Critical = Math.floor((calc3P1S4Critical * 85) / 100); //敵ポケ4技1例外補正なし威力
  let calc4P2S4Critical = Math.floor((calc3P2S4Critical * 85) / 100); //敵ポケ4技2例外補正なし威力
  let calc4P3S4Critical = Math.floor((calc3P3S4Critical * 85) / 100); //敵ポケ4技3例外補正なし威力
  let calc4P4S4Critical = Math.floor((calc3P4S4Critical * 85) / 100); //敵ポケ4技4例外補正なし威力

  let calc4KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 85) / 100); //敵1ポケ技1（補正あり）威力
  let calc4KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 85) / 100); //敵1ポケ技2（補正あり）威力
  let calc4KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 85) / 100); //敵1ポケ技3（補正あり）威力
  let calc4KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 85) / 100); //敵1ポケ技4（補正あり）威力

  let calc4KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 85) / 100); //敵2ポケ技1（補正あり）威力
  let calc4KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 85) / 100); //敵2ポケ技2（補正あり）威力
  let calc4KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 85) / 100); //敵2ポケ技3（補正あり）威力
  let calc4KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 85) / 100); //敵2ポケ技4（補正あり）威力

  let calc4KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 85) / 100); //敵3ポケ技1（補正あり）威力
  let calc4KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 85) / 100); //敵3ポケ技2（補正あり）威力
  let calc4KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 85) / 100); //敵3ポケ技3（補正あり）威力
  let calc4KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 85) / 100); //敵3ポケ技4（補正あり）威力

  let calc4KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 85) / 100); //敵4ポケ技1（補正あり）威力
  let calc4KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 85) / 100); //敵4ポケ技2（補正あり）威力
  let calc4KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 85) / 100); //敵4ポケ技3（補正あり）威力
  let calc4KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 85) / 100); //敵4ポケ技4（補正あり）威力

  ///calc4=min0.85乱数  calc3=max1.0乱数

  ///////////////タイプ一致補正 タイプ一致補正/////////////////////////////タイプ一致補正 タイプ一致補正//////////////
  ///////////////タイプ一致補正 タイプ一致補正/////////////////////////////タイプ一致補正 タイプ一致補正//////////////
  //! タイプ一致補正タイプ一致補正タイプ一致補正タイプ一致補正タイプ一致補正タイプ一致補正タイプ一致補正タイプ一致補正
  //! タイプ一致補正タイプ一致補正タイプ一致補正タイプ一致補正タイプ一致補正タイプ一致補正タイプ一致補正タイプ一致補正

  let myTekiouDisplay1 = "";
  let myTekiouDisplay2 = "";
  let myTekiouDisplay3 = "";
  let myTekiouDisplay4 = "";

  let tekiTekiouDisplayS1W1 = "";
  let tekiTekiouDisplayS1W2 = "";
  let tekiTekiouDisplayS1W3 = "";
  let tekiTekiouDisplayS1W4 = "";

  let tekiTekiouDisplayS2W1 = "";
  let tekiTekiouDisplayS2W2 = "";
  let tekiTekiouDisplayS2W3 = "";
  let tekiTekiouDisplayS2W4 = "";

  let tekiTekiouDisplayS3W1 = "";
  let tekiTekiouDisplayS3W2 = "";
  let tekiTekiouDisplayS3W3 = "";
  let tekiTekiouDisplayS3W4 = "";

  let tekiTekiouDisplayS4W1 = "";
  let tekiTekiouDisplayS4W2 = "";
  let tekiTekiouDisplayS4W3 = "";
  let tekiTekiouDisplayS4W4 = "";

  if (mypokeType1 === wtype1 || mypokeType2 === wtype1) {
    if (selectedAbility === "てきおうりょく") {
      myTekiouDisplay1 = "[適応力]";
      calc3P1_S1 = Math.floor((calc3P1_S1 * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 200) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 200) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 200) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 200) / 100); //自分ポケ技1が敵型4への（補正あり）威力

      calc4P1_S1 = Math.floor((calc4P1_S1 * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 200) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 200) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 200) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 200) / 100); //自分ポケ技1が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 200) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 200) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 200) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 200) / 100); //自分ポケ技1が敵型4への（補正あり）威力

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 200) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 200) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 200) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 200) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    } else {
      calc3P1_S1 = Math.floor((calc3P1_S1 * 150) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 150) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 150) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 150) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 150) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 150) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 150) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 150) / 100); //自分ポケ技1が敵型4への（補正あり）威力

      calc4P1_S1 = Math.floor((calc4P1_S1 * 150) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 150) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 150) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 150) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 150) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 150) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 150) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 150) / 100); //自分ポケ技1が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 150) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 150) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 150) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 150) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 150) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 150) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 150) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 150) / 100); //自分ポケ技1が敵型4への（補正あり）威力

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 150) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 150) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 150) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 150) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 150) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 150) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 150) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 150) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    }
  }

  if (mypokeType1 === wtype2 || mypokeType2 === wtype2) {
    if (selectedAbility === "てきおうりょく") {
      myTekiouDisplay2 = "[適応力]";
      calc3P2_S1 = Math.floor((calc3P2_S1 * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 200) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 200) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 200) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 200) / 100); //自分ポケ技2が敵型4への（補正あり）威力

      calc4P2_S1 = Math.floor((calc4P2_S1 * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 200) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 200) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 200) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 200) / 100); //自分ポケ技2が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 200) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 200) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 200) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 200) / 100); //自分ポケ技2が敵型4への（補正あり）威力

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 200) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 200) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 200) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 200) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    } else {
      calc3P2_S1 = Math.floor((calc3P2_S1 * 150) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 150) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 150) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 150) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 150) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 150) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 150) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 150) / 100); //自分ポケ技2が敵型4への（補正あり）威力

      calc4P2_S1 = Math.floor((calc4P2_S1 * 150) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 150) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 150) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 150) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 150) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 150) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 150) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 150) / 100); //自分ポケ技2が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 150) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 150) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 150) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 150) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 150) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 150) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 150) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 150) / 100); //自分ポケ技2が敵型4への（補正あり）威力

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 150) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 150) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 150) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 150) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 150) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 150) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 150) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 150) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    }
  }

  if (mypokeType1 === wtype3 || mypokeType2 === wtype3) {
    if (selectedAbility === "てきおうりょく") {
      myTekiouDisplay3 = "[適応力]";
      calc3P3_S1 = Math.floor((calc3P3_S1 * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 200) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 200) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 200) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 200) / 100); //自分ポケ技3が敵型4への（補正あり）威力

      calc4P3_S1 = Math.floor((calc4P3_S1 * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 200) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 200) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 200) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 200) / 100); //自分ポケ技3が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 200) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 200) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 200) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 200) / 100); //自分ポケ技3が敵型4への（補正あり）威力

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 200) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 200) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 200) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 200) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    } else {
      calc3P3_S1 = Math.floor((calc3P3_S1 * 150) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 150) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 150) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 150) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 150) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 150) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 150) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 150) / 100); //自分ポケ技3が敵型4への（補正あり）威力

      calc4P3_S1 = Math.floor((calc4P3_S1 * 150) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 150) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 150) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 150) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 150) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 150) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 150) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 150) / 100); //自分ポケ技3が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 150) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 150) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 150) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 150) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 150) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 150) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 150) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 150) / 100); //自分ポケ技3が敵型4への（補正あり）威力

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 150) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 150) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 150) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 150) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 150) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 150) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 150) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 150) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    }
  }

  if (mypokeType1 === wtype4 || mypokeType2 === wtype4) {
    if (selectedAbility === "てきおうりょく") {
      myTekiouDisplay4 = "[適応力]";
      calc3P4_S1 = Math.floor((calc3P4_S1 * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 200) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 200) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 200) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 200) / 100); //自分ポケ技4が敵型4への（補正あり）威力

      calc4P4_S1 = Math.floor((calc4P4_S1 * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 200) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 200) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 200) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 200) / 100); //自分ポケ技4が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 200) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 200) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 200) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 200) / 100); //自分ポケ技4が敵型4への（補正あり）威力

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 200) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 200) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 200) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 200) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    } else {
      calc3P4_S1 = Math.floor((calc3P4_S1 * 150) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 150) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 150) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 150) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 150) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 150) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 150) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 150) / 100); //自分ポケ技4が敵型4への（補正あり）威力

      calc4P4_S1 = Math.floor((calc4P4_S1 * 150) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 150) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 150) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 150) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 150) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 150) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 150) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 150) / 100); //自分ポケ技4が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 150) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 150) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 150) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 150) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 150) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 150) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 150) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 150) / 100); //自分ポケ技4が敵型4への（補正あり）威力

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 150) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 150) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 150) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 150) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 150) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 150) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 150) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 150) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  //敵型1技1
  if (tekipokeType1 === wtype1S1 || tekipokeType2 === wtype1S1) {
    if (selectedTekiAbility === "てきおうりょく") {
      tekiTekiouDisplayS1W1 = "[適応力]";
      //敵ポケ１の型が使う4つの技
      calc4P1S1 = Math.floor((calc4P1S1 * 200) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 200) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 200) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 200) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 200) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 200) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 200) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 200) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    } else {
      //敵ポケ１の型が使う4つの技
      calc4P1S1 = Math.floor((calc4P1S1 * 150) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 150) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 150) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 150) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 150) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 150) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 150) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 150) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //敵型1技2
  if (tekipokeType1 === wtype2S1 || tekipokeType2 === wtype2S1) {
    if (selectedTekiAbility === "てきおうりょく") {
      tekiTekiouDisplayS1W2 = "[適応力]";
      calc4P2S1 = Math.floor((calc4P2S1 * 200) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 200) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 200) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 200) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 200) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 200) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 200) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 200) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    } else {
      calc4P2S1 = Math.floor((calc4P2S1 * 150) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 150) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 150) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 150) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 150) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 150) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 150) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 150) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //敵型1技3
  if (tekipokeType1 === wtype3S1 || tekipokeType2 === wtype3S1) {
    if (selectedTekiAbility === "てきおうりょく") {
      tekiTekiouDisplayS1W3 = "[適応力]";
      calc4P3S1 = Math.floor((calc4P3S1 * 200) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 200) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 200) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 200) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 200) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 200) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 200) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 200) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    } else {
      calc4P3S1 = Math.floor((calc4P3S1 * 150) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 150) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 150) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 150) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 150) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 150) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 150) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 150) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //敵型1技4
  if (tekipokeType1 === wtype4S1 || tekipokeType2 === wtype4S1) {
    if (selectedTekiAbility === "てきおうりょく") {
      tekiTekiouDisplayS1W4 = "[適応力]";
      calc4P4S1 = Math.floor((calc4P4S1 * 200) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 200) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 200) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 200) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 200) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 200) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 200) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 200) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    } else {
      calc4P4S1 = Math.floor((calc4P4S1 * 150) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 150) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 150) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 150) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 150) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 150) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 150) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 150) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //敵型2技1
  if (tekipokeType1 === wtype1S2 || tekipokeType2 === wtype1S2) {
    if (selectedTekiAbility === "てきおうりょく") {
      tekiTekiouDisplayS2W1 = "[適応力]";
      calc4P1S2 = Math.floor((calc4P1S2 * 200) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 200) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 200) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 200) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 200) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 200) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 200) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 200) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    } else {
      calc4P1S2 = Math.floor((calc4P1S2 * 150) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 150) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 150) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 150) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 150) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 150) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 150) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 150) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //敵型2技2
  if (tekipokeType1 === wtype2S2 || tekipokeType2 === wtype2S2) {
    if (selectedTekiAbility === "てきおうりょく") {
      tekiTekiouDisplayS2W2 = "[適応力]";
      calc4P2S2 = Math.floor((calc4P2S2 * 200) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 200) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 200) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 200) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 200) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 200) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 200) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 200) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    } else {
      calc4P2S2 = Math.floor((calc4P2S2 * 150) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 150) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 150) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 150) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 150) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 150) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 150) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 150) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //敵型2技3
  if (tekipokeType1 === wtype3S2 || tekipokeType2 === wtype3S2) {
    if (selectedTekiAbility === "てきおうりょく") {
      tekiTekiouDisplayS2W3 = "[適応力]";
      calc4P3S2 = Math.floor((calc4P3S2 * 200) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 200) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 200) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 200) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 200) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 200) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 200) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 200) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    } else {
      calc4P3S2 = Math.floor((calc4P3S2 * 150) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 150) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 150) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 150) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 150) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 150) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 150) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 150) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //敵型2技4
  if (tekipokeType1 === wtype4S2 || tekipokeType2 === wtype4S2) {
    if (selectedTekiAbility === "てきおうりょく") {
      tekiTekiouDisplayS2W4 = "[適応力]";
      calc4P4S2 = Math.floor((calc4P4S2 * 200) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 200) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 200) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 200) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 200) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 200) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 200) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 200) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    } else {
      calc4P4S2 = Math.floor((calc4P4S2 * 150) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 150) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 150) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 150) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 150) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 150) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 150) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 150) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //敵型3技1
  if (tekipokeType1 === wtype1S3 || tekipokeType2 === wtype1S3) {
    if (selectedTekiAbility === "てきおうりょく") {
      tekiTekiouDisplayS3W1 = "[適応力]";
      calc4P1S3 = Math.floor((calc4P1S3 * 200) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 200) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 200) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 200) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 200) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 200) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 200) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 200) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    } else {
      calc4P1S3 = Math.floor((calc4P1S3 * 150) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 150) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 150) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 150) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 150) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 150) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 150) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 150) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //敵型3技2
  if (tekipokeType1 === wtype2S3 || tekipokeType2 === wtype2S3) {
    if (selectedTekiAbility === "てきおうりょく") {
      tekiTekiouDisplayS3W2 = "[適応力]";
      calc4P2S3 = Math.floor((calc4P2S3 * 200) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 200) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 200) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 200) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 200) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 200) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 200) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 200) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    } else {
      calc4P2S3 = Math.floor((calc4P2S3 * 150) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 150) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 150) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 150) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 150) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 150) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 150) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 150) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //敵型3技3
  if (tekipokeType1 === wtype3S3 || tekipokeType2 === wtype3S3) {
    if (selectedTekiAbility === "てきおうりょく") {
      tekiTekiouDisplayS3W3 = "[適応力]";

      calc4P3S3 = Math.floor((calc4P3S3 * 200) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 200) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 200) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 200) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 200) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 200) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 200) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 200) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    } else {
      calc4P3S3 = Math.floor((calc4P3S3 * 150) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 150) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 150) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 150) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 150) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 150) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 150) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 150) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //敵型3技4
  if (tekipokeType1 === wtype4S3 || tekipokeType2 === wtype4S3) {
    if (selectedTekiAbility === "てきおうりょく") {
      tekiTekiouDisplayS3W4 = "[適応力]";
      calc4P4S3 = Math.floor((calc4P4S3 * 200) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 200) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 200) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 200) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 200) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 200) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 200) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 200) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    } else {
      calc4P4S3 = Math.floor((calc4P4S3 * 150) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 150) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 150) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 150) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 150) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 150) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 150) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 150) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //敵型4技1
  if (tekipokeType1 === wtype1S4 || tekipokeType2 === wtype1S4) {
    if (selectedTekiAbility === "てきおうりょく") {
      tekiTekiouDisplayS4W1 = "[適応力]";
      calc4P1S4 = Math.floor((calc4P1S4 * 200) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 200) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 200) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 200) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 200) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 200) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 200) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 200) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    } else {
      calc4P1S4 = Math.floor((calc4P1S4 * 150) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 150) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 150) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 150) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 150) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 150) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 150) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 150) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //敵型4技2
  if (tekipokeType1 === wtype2S4 || tekipokeType2 === wtype2S4) {
    if (selectedTekiAbility === "てきおうりょく") {
      tekiTekiouDisplayS4W2 = "[適応力]";
      calc4P2S4 = Math.floor((calc4P2S4 * 200) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 200) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 200) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 200) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 200) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 200) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 200) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 200) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    } else {
      calc4P2S4 = Math.floor((calc4P2S4 * 150) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 150) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 150) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 150) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 150) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 150) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 150) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 150) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //敵型4技3
  if (tekipokeType1 === wtype3S4 || tekipokeType2 === wtype3S4) {
    if (selectedTekiAbility === "てきおうりょく") {
      tekiTekiouDisplayS4W3 = "[適応力]";

      calc4P3S4 = Math.floor((calc4P3S4 * 200) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 200) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 200) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 200) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 200) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 200) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 200) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 200) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    } else {
      calc4P3S4 = Math.floor((calc4P3S4 * 150) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 150) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 150) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 150) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 150) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 150) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 150) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 150) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //敵型4技4
  if (tekipokeType1 === wtype4S4 || tekipokeType2 === wtype4S4) {
    if (selectedTekiAbility === "てきおうりょく") {
      tekiTekiouDisplayS4W4 = "[適応力]";
      calc4P4S4 = Math.floor((calc4P4S4 * 200) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 200) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 200) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 200) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 200) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 200) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 200) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 200) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    } else {
      calc4P4S4 = Math.floor((calc4P4S4 * 150) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 150) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 150) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 150) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 150) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 150) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 150) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 150) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  /////////////// ×相性補正/////////////// ×相性補正/////////////// ×相性補正/////////////// ×相性補正
  /////////////// ×相性補正/////////////// ×相性補正/////////////// ×相性補正/////////////// ×相性補正

  // wtype1が攻撃側のタイプ、tekipokeType1とtekipokeType2が防御側のタイプ

  // typeChartからwtype1と同じタイプのオブジェクトを取得する
  const wtype1Chart = typeChart.find((typeObject) => typeObject.type === wtype1) || {};
  const wtype2Chart = typeChart.find((typeObject) => typeObject.type === wtype2) || {};
  const wtype3Chart = typeChart.find((typeObject) => typeObject.type === wtype3) || {};
  const wtype4Chart = typeChart.find((typeObject) => typeObject.type === wtype4) || {};
  // 相手のタイプ1とタイプ2に対するタイプ相性の数値を取得する
  //自分技1と敵タイプ1と2
  const wtype1ChartT1 = wtype1Chart[tekipokeType1] === 0 ? 0 : wtype1Chart[tekipokeType1] || 1;
  const wtype1ChartT2 = wtype1Chart[tekipokeType2] === 0 ? 0 : wtype1Chart[tekipokeType2] || 1;

  //自分技2と敵タイプ1と2
  const wtype2ChartT1 = wtype2Chart[tekipokeType1] === 0 ? 0 : wtype2Chart[tekipokeType1] || 1;
  const wtype2ChartT2 = wtype2Chart[tekipokeType2] === 0 ? 0 : wtype2Chart[tekipokeType2] || 1;

  //自分技3と敵タイプ1と2
  const wtype3ChartT1 = wtype3Chart[tekipokeType1] === 0 ? 0 : wtype3Chart[tekipokeType1] || 1;
  const wtype3ChartT2 = wtype3Chart[tekipokeType2] === 0 ? 0 : wtype3Chart[tekipokeType2] || 1;

  //自分技4と敵タイプ1と2
  const wtype4ChartT1 = wtype4Chart[tekipokeType1] === 0 ? 0 : wtype4Chart[tekipokeType1] || 1;
  const wtype4ChartT2 = wtype4Chart[tekipokeType2] === 0 ? 0 : wtype4Chart[tekipokeType2] || 1;

  //敵型1の相性配列
  const wtype1S1Chart = typeChart.find((typeObject) => typeObject.type === wtype1S1) || {};
  const wtype2S1Chart = typeChart.find((typeObject) => typeObject.type === wtype2S1) || {};
  const wtype3S1Chart = typeChart.find((typeObject) => typeObject.type === wtype3S1) || {};
  const wtype4S1Chart = typeChart.find((typeObject) => typeObject.type === wtype4S1) || {};

  //敵型1技1が自分タイプ1と2
  const wtype1S1ChartT1 = wtype1S1Chart[mypokeType1] === 0 ? 0 : wtype1S1Chart[mypokeType1] || 1;
  const wtype1S1ChartT2 = wtype1S1Chart[mypokeType2] === 0 ? 0 : wtype1S1Chart[mypokeType2] || 1;

  //敵型1技2が自分タイプ1と2
  const wtype2S1ChartT1 = wtype2S1Chart[mypokeType1] === 0 ? 0 : wtype2S1Chart[mypokeType1] || 1;
  const wtype2S1ChartT2 = wtype2S1Chart[mypokeType2] === 0 ? 0 : wtype2S1Chart[mypokeType2] || 1;

  //敵型1技3が自分タイプ1と2
  const wtype3S1ChartT1 = wtype3S1Chart[mypokeType1] === 0 ? 0 : wtype3S1Chart[mypokeType1] || 1;
  const wtype3S1ChartT2 = wtype3S1Chart[mypokeType2] === 0 ? 0 : wtype3S1Chart[mypokeType2] || 1;

  //敵型1技4が自分タイプ1と2
  const wtype4S1ChartT1 = wtype4S1Chart[mypokeType1] === 0 ? 0 : wtype4S1Chart[mypokeType1] || 1;
  const wtype4S1ChartT2 = wtype4S1Chart[mypokeType2] === 0 ? 0 : wtype4S1Chart[mypokeType2] || 1;

  //敵型2の相性配列
  const wtype1S2Chart = typeChart.find((typeObject) => typeObject.type === wtype1S2) || {};
  const wtype2S2Chart = typeChart.find((typeObject) => typeObject.type === wtype2S2) || {};
  const wtype3S2Chart = typeChart.find((typeObject) => typeObject.type === wtype3S2) || {};
  const wtype4S2Chart = typeChart.find((typeObject) => typeObject.type === wtype4S2) || {};

  //敵型2技1が自分タイプ1と2
  const wtype1S2ChartT1 = wtype1S2Chart[mypokeType1] === 0 ? 0 : wtype1S2Chart[mypokeType1] || 1;
  const wtype1S2ChartT2 = wtype1S2Chart[mypokeType2] === 0 ? 0 : wtype1S2Chart[mypokeType2] || 1;

  //敵型2技2が自分タイプ1と2
  const wtype2S2ChartT1 = wtype2S2Chart[mypokeType1] === 0 ? 0 : wtype2S2Chart[mypokeType1] || 1;
  const wtype2S2ChartT2 = wtype2S2Chart[mypokeType2] === 0 ? 0 : wtype2S2Chart[mypokeType2] || 1;

  //敵型2技3が自分タイプ1と2
  const wtype3S2ChartT1 = wtype3S2Chart[mypokeType1] === 0 ? 0 : wtype3S2Chart[mypokeType1] || 1;
  const wtype3S2ChartT2 = wtype3S2Chart[mypokeType2] === 0 ? 0 : wtype3S2Chart[mypokeType2] || 1;

  //敵型2技4が自分タイプ1と2
  const wtype4S2ChartT1 = wtype4S2Chart[mypokeType1] === 0 ? 0 : wtype4S2Chart[mypokeType1] || 1;
  const wtype4S2ChartT2 = wtype4S2Chart[mypokeType2] === 0 ? 0 : wtype4S2Chart[mypokeType2] || 1;

  //敵型3の相性配列
  const wtype1S3Chart = typeChart.find((typeObject) => typeObject.type === wtype1S3) || {};
  const wtype2S3Chart = typeChart.find((typeObject) => typeObject.type === wtype2S3) || {};
  const wtype3S3Chart = typeChart.find((typeObject) => typeObject.type === wtype3S3) || {};
  const wtype4S3Chart = typeChart.find((typeObject) => typeObject.type === wtype4S3) || {};

  //敵型3技1が自分タイプ1と2
  const wtype1S3ChartT1 = wtype1S3Chart[mypokeType1] === 0 ? 0 : wtype1S3Chart[mypokeType1] || 1;
  const wtype1S3ChartT2 = wtype1S3Chart[mypokeType2] === 0 ? 0 : wtype1S3Chart[mypokeType2] || 1;

  //敵型3技2が自分タイプ1と2
  const wtype2S3ChartT1 = wtype2S3Chart[mypokeType1] === 0 ? 0 : wtype2S3Chart[mypokeType1] || 1;
  const wtype2S3ChartT2 = wtype2S3Chart[mypokeType2] === 0 ? 0 : wtype2S3Chart[mypokeType2] || 1;

  //敵型3技3が自分タイプ1と2
  const wtype3S3ChartT1 = wtype3S3Chart[mypokeType1] === 0 ? 0 : wtype3S3Chart[mypokeType1] || 1;
  const wtype3S3ChartT2 = wtype3S3Chart[mypokeType2] === 0 ? 0 : wtype3S3Chart[mypokeType2] || 1;

  //敵型3技4が自分タイプ1と2
  const wtype4S3ChartT1 = wtype4S3Chart[mypokeType1] === 0 ? 0 : wtype4S3Chart[mypokeType1] || 1;
  const wtype4S3ChartT2 = wtype4S3Chart[mypokeType2] === 0 ? 0 : wtype4S3Chart[mypokeType2] || 1;

  //敵型4の相性配列
  const wtype1S4Chart = typeChart.find((typeObject) => typeObject.type === wtype1S4) || {};
  const wtype2S4Chart = typeChart.find((typeObject) => typeObject.type === wtype2S4) || {};
  const wtype3S4Chart = typeChart.find((typeObject) => typeObject.type === wtype3S4) || {};
  const wtype4S4Chart = typeChart.find((typeObject) => typeObject.type === wtype4S4) || {};

  //敵型4技1が自分タイプ1と2
  const wtype1S4ChartT1 = wtype1S4Chart[mypokeType1] === 0 ? 0 : wtype1S4Chart[mypokeType1] || 1;
  const wtype1S4ChartT2 = wtype1S4Chart[mypokeType2] === 0 ? 0 : wtype1S4Chart[mypokeType2] || 1;

  //敵型4技2が自分タイプ1と2
  const wtype2S4ChartT1 = wtype2S4Chart[mypokeType1] === 0 ? 0 : wtype2S4Chart[mypokeType1] || 1;
  const wtype2S4ChartT2 = wtype2S4Chart[mypokeType2] === 0 ? 0 : wtype2S4Chart[mypokeType2] || 1;

  //敵型4技3が自分タイプ1と2
  const wtype3S4ChartT1 = wtype3S4Chart[mypokeType1] === 0 ? 0 : wtype3S4Chart[mypokeType1] || 1;
  const wtype3S4ChartT2 = wtype3S4Chart[mypokeType2] === 0 ? 0 : wtype3S4Chart[mypokeType2] || 1;

  //敵型4技4が自分タイプ1と2
  const wtype4S4ChartT1 = wtype4S4Chart[mypokeType1] === 0 ? 0 : wtype4S4Chart[mypokeType1] || 1;
  const wtype4S4ChartT2 = wtype4S4Chart[mypokeType2] === 0 ? 0 : wtype4S4Chart[mypokeType2] || 1;

  //自分技1
  calc3P1_S1 = Math.floor(Math.floor(calc3P1_S1 * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
  calc3P1_S2 = Math.floor(Math.floor(calc3P1_S2 * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
  calc3P1_S3 = Math.floor(Math.floor(calc3P1_S3 * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
  calc3P1_S4 = Math.floor(Math.floor(calc3P1_S4 * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

  calc3KS1Power1 = Math.floor(Math.floor(calc3KS1Power1 * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1が敵型1への（補正あり）威力
  calc3KS2Power1 = Math.floor(Math.floor(calc3KS2Power1 * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1が敵型2への（補正あり）威力
  calc3KS3Power1 = Math.floor(Math.floor(calc3KS3Power1 * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1が敵型3への（補正あり）威力
  calc3KS4Power1 = Math.floor(Math.floor(calc3KS4Power1 * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1が敵型4への（補正あり）威力

  calc4P1_S1 = Math.floor(Math.floor(calc4P1_S1 * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
  calc4P1_S2 = Math.floor(Math.floor(calc4P1_S2 * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
  calc4P1_S3 = Math.floor(Math.floor(calc4P1_S3 * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
  calc4P1_S4 = Math.floor(Math.floor(calc4P1_S4 * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

  calc4KS1Power1 = Math.floor(Math.floor(calc4KS1Power1 * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1が敵型1への（補正あり）威力
  calc4KS2Power1 = Math.floor(Math.floor(calc4KS2Power1 * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1が敵型2への（補正あり）威力
  calc4KS3Power1 = Math.floor(Math.floor(calc4KS3Power1 * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1が敵型3への（補正あり）威力
  calc4KS4Power1 = Math.floor(Math.floor(calc4KS4Power1 * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1が敵型4への（補正あり）威力

  /////////急所//////////
  calc3P1_S1Critical = Math.floor(Math.floor(calc3P1_S1Critical * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
  calc3P1_S2Critical = Math.floor(Math.floor(calc3P1_S2Critical * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
  calc3P1_S3Critical = Math.floor(Math.floor(calc3P1_S3Critical * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
  calc3P1_S4Critical = Math.floor(Math.floor(calc3P1_S4Critical * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

  calc3KS1Power1Critical = Math.floor(Math.floor(calc3KS1Power1Critical * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1が敵型1への（補正あり）威力
  calc3KS2Power1Critical = Math.floor(Math.floor(calc3KS2Power1Critical * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1が敵型2への（補正あり）威力
  calc3KS3Power1Critical = Math.floor(Math.floor(calc3KS3Power1Critical * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1が敵型3への（補正あり）威力
  calc3KS4Power1Critical = Math.floor(Math.floor(calc3KS4Power1Critical * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1が敵型4への（補正あり）威力

  calc4P1_S1Critical = Math.floor(Math.floor(calc4P1_S1Critical * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
  calc4P1_S2Critical = Math.floor(Math.floor(calc4P1_S2Critical * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
  calc4P1_S3Critical = Math.floor(Math.floor(calc4P1_S3Critical * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
  calc4P1_S4Critical = Math.floor(Math.floor(calc4P1_S4Critical * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

  calc4KS1Power1Critical = Math.floor(Math.floor(calc4KS1Power1Critical * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1が敵型1への（補正あり）威力
  calc4KS2Power1Critical = Math.floor(Math.floor(calc4KS2Power1Critical * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1が敵型2への（補正あり）威力
  calc4KS3Power1Critical = Math.floor(Math.floor(calc4KS3Power1Critical * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1が敵型3への（補正あり）威力
  calc4KS4Power1Critical = Math.floor(Math.floor(calc4KS4Power1Critical * wtype1ChartT1) * wtype1ChartT2); //自分ポケ技1が敵型4への（補正あり）威力

  //自分技2
  calc3P2_S1 = Math.floor(Math.floor(calc3P2_S1 * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
  calc3P2_S2 = Math.floor(Math.floor(calc3P2_S2 * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
  calc3P2_S3 = Math.floor(Math.floor(calc3P2_S3 * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
  calc3P2_S4 = Math.floor(Math.floor(calc3P2_S4 * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

  calc3KS1Power2 = Math.floor(Math.floor(calc3KS1Power2 * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2が敵型1への（補正あり）威力
  calc3KS2Power2 = Math.floor(Math.floor(calc3KS2Power2 * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2が敵型2への（補正あり）威力
  calc3KS3Power2 = Math.floor(Math.floor(calc3KS3Power2 * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2が敵型3への（補正あり）威力
  calc3KS4Power2 = Math.floor(Math.floor(calc3KS4Power2 * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2が敵型4への（補正あり）威力

  calc4P2_S1 = Math.floor(Math.floor(calc4P2_S1 * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
  calc4P2_S2 = Math.floor(Math.floor(calc4P2_S2 * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
  calc4P2_S3 = Math.floor(Math.floor(calc4P2_S3 * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
  calc4P2_S4 = Math.floor(Math.floor(calc4P2_S4 * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

  calc4KS1Power2 = Math.floor(Math.floor(calc4KS1Power2 * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2が敵型1への（補正あり）威力
  calc4KS2Power2 = Math.floor(Math.floor(calc4KS2Power2 * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2が敵型2への（補正あり）威力
  calc4KS3Power2 = Math.floor(Math.floor(calc4KS3Power2 * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2が敵型3への（補正あり）威力
  calc4KS4Power2 = Math.floor(Math.floor(calc4KS4Power2 * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2が敵型4への（補正あり）威力

  /////////急所//////////
  calc3P2_S1Critical = Math.floor(Math.floor(calc3P2_S1Critical * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
  calc3P2_S2Critical = Math.floor(Math.floor(calc3P2_S2Critical * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
  calc3P2_S3Critical = Math.floor(Math.floor(calc3P2_S3Critical * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
  calc3P2_S4Critical = Math.floor(Math.floor(calc3P2_S4Critical * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

  calc3KS1Power2Critical = Math.floor(Math.floor(calc3KS1Power2Critical * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2が敵型1への（補正あり）威力
  calc3KS2Power2Critical = Math.floor(Math.floor(calc3KS2Power2Critical * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2が敵型2への（補正あり）威力
  calc3KS3Power2Critical = Math.floor(Math.floor(calc3KS3Power2Critical * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2が敵型3への（補正あり）威力
  calc3KS4Power2Critical = Math.floor(Math.floor(calc3KS4Power2Critical * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2が敵型4への（補正あり）威力

  calc4P2_S1Critical = Math.floor(Math.floor(calc4P2_S1Critical * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
  calc4P2_S2Critical = Math.floor(Math.floor(calc4P2_S2Critical * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
  calc4P2_S3Critical = Math.floor(Math.floor(calc4P2_S3Critical * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
  calc4P2_S4Critical = Math.floor(Math.floor(calc4P2_S4Critical * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

  calc4KS1Power2Critical = Math.floor(Math.floor(calc4KS1Power2Critical * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2が敵型1への（補正あり）威力
  calc4KS2Power2Critical = Math.floor(Math.floor(calc4KS2Power2Critical * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2が敵型2への（補正あり）威力
  calc4KS3Power2Critical = Math.floor(Math.floor(calc4KS3Power2Critical * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2が敵型3への（補正あり）威力
  calc4KS4Power2Critical = Math.floor(Math.floor(calc4KS4Power2Critical * wtype2ChartT1) * wtype2ChartT2); //自分ポケ技2が敵型4への（補正あり）威力

  //自分技3
  calc3P3_S1 = Math.floor(Math.floor(calc3P3_S1 * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
  calc3P3_S2 = Math.floor(Math.floor(calc3P3_S2 * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
  calc3P3_S3 = Math.floor(Math.floor(calc3P3_S3 * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
  calc3P3_S4 = Math.floor(Math.floor(calc3P3_S4 * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

  calc3KS1Power3 = Math.floor(Math.floor(calc3KS1Power3 * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3が敵型1への（補正あり）威力
  calc3KS2Power3 = Math.floor(Math.floor(calc3KS2Power3 * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3が敵型2への（補正あり）威力
  calc3KS3Power3 = Math.floor(Math.floor(calc3KS3Power3 * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3が敵型3への（補正あり）威力
  calc3KS4Power3 = Math.floor(Math.floor(calc3KS4Power3 * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3が敵型4への（補正あり）威力

  calc4P3_S1 = Math.floor(Math.floor(calc4P3_S1 * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
  calc4P3_S2 = Math.floor(Math.floor(calc4P3_S2 * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
  calc4P3_S3 = Math.floor(Math.floor(calc4P3_S3 * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
  calc4P3_S4 = Math.floor(Math.floor(calc4P3_S4 * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

  calc4KS1Power3 = Math.floor(Math.floor(calc4KS1Power3 * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3が敵型1への（補正あり）威力
  calc4KS2Power3 = Math.floor(Math.floor(calc4KS2Power3 * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3が敵型2への（補正あり）威力
  calc4KS3Power3 = Math.floor(Math.floor(calc4KS3Power3 * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3が敵型3への（補正あり）威力
  calc4KS4Power3 = Math.floor(Math.floor(calc4KS4Power3 * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3が敵型4への（補正あり）威力

  /////////急所//////////
  calc3P3_S1Critical = Math.floor(Math.floor(calc3P3_S1Critical * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
  calc3P3_S2Critical = Math.floor(Math.floor(calc3P3_S2Critical * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
  calc3P3_S3Critical = Math.floor(Math.floor(calc3P3_S3Critical * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
  calc3P3_S4Critical = Math.floor(Math.floor(calc3P3_S4Critical * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

  calc3KS1Power3Critical = Math.floor(Math.floor(calc3KS1Power3Critical * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3が敵型1への（補正あり）威力
  calc3KS2Power3Critical = Math.floor(Math.floor(calc3KS2Power3Critical * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3が敵型2への（補正あり）威力
  calc3KS3Power3Critical = Math.floor(Math.floor(calc3KS3Power3Critical * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3が敵型3への（補正あり）威力
  calc3KS4Power3Critical = Math.floor(Math.floor(calc3KS4Power3Critical * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3が敵型4への（補正あり）威力

  calc4P3_S1Critical = Math.floor(Math.floor(calc4P3_S1Critical * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
  calc4P3_S2Critical = Math.floor(Math.floor(calc4P3_S2Critical * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
  calc4P3_S3Critical = Math.floor(Math.floor(calc4P3_S3Critical * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
  calc4P3_S4Critical = Math.floor(Math.floor(calc4P3_S4Critical * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

  calc4KS1Power3Critical = Math.floor(Math.floor(calc4KS1Power3Critical * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3が敵型1への（補正あり）威力
  calc4KS2Power3Critical = Math.floor(Math.floor(calc4KS2Power3Critical * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3が敵型2への（補正あり）威力
  calc4KS3Power3Critical = Math.floor(Math.floor(calc4KS3Power3Critical * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3が敵型3への（補正あり）威力
  calc4KS4Power3Critical = Math.floor(Math.floor(calc4KS4Power3Critical * wtype3ChartT1) * wtype3ChartT2); //自分ポケ技3が敵型4への（補正あり）威力

  //自分技4
  calc3P4_S1 = Math.floor(Math.floor(calc3P4_S1 * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
  calc3P4_S2 = Math.floor(Math.floor(calc3P4_S2 * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
  calc3P4_S3 = Math.floor(Math.floor(calc3P4_S3 * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
  calc3P4_S4 = Math.floor(Math.floor(calc3P4_S4 * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

  calc3KS1Power4 = Math.floor(Math.floor(calc3KS1Power4 * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4が敵型1への（補正あり）威力
  calc3KS2Power4 = Math.floor(Math.floor(calc3KS2Power4 * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4が敵型2への（補正あり）威力
  calc3KS3Power4 = Math.floor(Math.floor(calc3KS3Power4 * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4が敵型3への（補正あり）威力
  calc3KS4Power4 = Math.floor(Math.floor(calc3KS4Power4 * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4が敵型4への（補正あり）威力

  calc4P4_S1 = Math.floor(Math.floor(calc4P4_S1 * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
  calc4P4_S2 = Math.floor(Math.floor(calc4P4_S2 * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
  calc4P4_S3 = Math.floor(Math.floor(calc4P4_S3 * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
  calc4P4_S4 = Math.floor(Math.floor(calc4P4_S4 * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

  calc4KS1Power4 = Math.floor(Math.floor(calc4KS1Power4 * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4が敵型1への（補正あり）威力
  calc4KS2Power4 = Math.floor(Math.floor(calc4KS2Power4 * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4が敵型2への（補正あり）威力
  calc4KS3Power4 = Math.floor(Math.floor(calc4KS3Power4 * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4が敵型3への（補正あり）威力
  calc4KS4Power4 = Math.floor(Math.floor(calc4KS4Power4 * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4が敵型4への（補正あり）威力

  /////////急所//////////
  calc3P4_S1Critical = Math.floor(Math.floor(calc3P4_S1Critical * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
  calc3P4_S2Critical = Math.floor(Math.floor(calc3P4_S2Critical * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
  calc3P4_S3Critical = Math.floor(Math.floor(calc3P4_S3Critical * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
  calc3P4_S4Critical = Math.floor(Math.floor(calc3P4_S4Critical * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

  calc3KS1Power4Critical = Math.floor(Math.floor(calc3KS1Power4Critical * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4が敵型1への（補正あり）威力
  calc3KS2Power4Critical = Math.floor(Math.floor(calc3KS2Power4Critical * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4が敵型2への（補正あり）威力
  calc3KS3Power4Critical = Math.floor(Math.floor(calc3KS3Power4Critical * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4が敵型3への（補正あり）威力
  calc3KS4Power4Critical = Math.floor(Math.floor(calc3KS4Power4Critical * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4が敵型4への（補正あり）威力

  calc4P4_S1Critical = Math.floor(Math.floor(calc4P4_S1Critical * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
  calc4P4_S2Critical = Math.floor(Math.floor(calc4P4_S2Critical * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
  calc4P4_S3Critical = Math.floor(Math.floor(calc4P4_S3Critical * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
  calc4P4_S4Critical = Math.floor(Math.floor(calc4P4_S4Critical * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

  calc4KS1Power4Critical = Math.floor(Math.floor(calc4KS1Power4Critical * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4が敵型1への（補正あり）威力
  calc4KS2Power4Critical = Math.floor(Math.floor(calc4KS2Power4Critical * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4が敵型2への（補正あり）威力
  calc4KS3Power4Critical = Math.floor(Math.floor(calc4KS3Power4Critical * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4が敵型3への（補正あり）威力
  calc4KS4Power4Critical = Math.floor(Math.floor(calc4KS4Power4Critical * wtype4ChartT1) * wtype4ChartT2); //自分ポケ技4が敵型4への（補正あり）威力

  //敵型1技1

  calc4P1S1 = Math.floor(Math.floor(calc4P1S1 * wtype1S1ChartT1) * wtype1S1ChartT2); //敵ポケ１技1例外補正なし威力
  calc4KPower1S1 = Math.floor(Math.floor(calc4KPower1S1 * wtype1S1ChartT1) * wtype1S1ChartT2); //敵1ポケ技1（補正あり）威力
  calc4P1S1Critical = Math.floor(Math.floor(calc4P1S1Critical * wtype1S1ChartT1) * wtype1S1ChartT2); //敵ポケ１技1例外補正なし威力
  calc4KPower1S1Critical = Math.floor(Math.floor(calc4KPower1S1Critical * wtype1S1ChartT1) * wtype1S1ChartT2); //敵1ポケ技1（補正あり）威力
  calc3P1S1 = Math.floor(Math.floor(calc3P1S1 * wtype1S1ChartT1) * wtype1S1ChartT2); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower1S1 = Math.floor(Math.floor(calc3KPower1S1 * wtype1S1ChartT1) * wtype1S1ChartT2); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1S1Critical = Math.floor(Math.floor(calc3P1S1Critical * wtype1S1ChartT1) * wtype1S1ChartT2); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3KPower1S1Critical = Math.floor(Math.floor(calc3KPower1S1Critical * wtype1S1ChartT1) * wtype1S1ChartT2); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //敵型1技2

  calc4P2S1 = Math.floor(Math.floor(calc4P2S1 * wtype2S1ChartT1) * wtype2S1ChartT2); //敵ポケ１技2例外補正なし威力
  calc4KPower2S1 = Math.floor(Math.floor(calc4KPower2S1 * wtype2S1ChartT1) * wtype2S1ChartT2); //敵1ポケ技2（補正あり）威力
  calc4P2S1Critical = Math.floor(Math.floor(calc4P2S1Critical * wtype2S1ChartT1) * wtype2S1ChartT2); //敵ポケ１技2例外補正なし威力
  calc4KPower2S1Critical = Math.floor(Math.floor(calc4KPower2S1Critical * wtype2S1ChartT1) * wtype2S1ChartT2); //敵1ポケ技2（補正あり）威力
  calc3P2S1 = Math.floor(Math.floor(calc3P2S1 * wtype2S1ChartT1) * wtype2S1ChartT2); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower2S1 = Math.floor(Math.floor(calc3KPower2S1 * wtype2S1ChartT1) * wtype2S1ChartT2); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2S1Critical = Math.floor(Math.floor(calc3P2S1Critical * wtype2S1ChartT1) * wtype2S1ChartT2); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3KPower2S1Critical = Math.floor(Math.floor(calc3KPower2S1Critical * wtype2S1ChartT1) * wtype2S1ChartT2); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //敵型1技3

  calc4P3S1 = Math.floor(Math.floor(calc4P3S1 * wtype3S1ChartT1) * wtype3S1ChartT2); //敵ポケ１技3例外補正なし威力
  calc4KPower3S1 = Math.floor(Math.floor(calc4KPower3S1 * wtype3S1ChartT1) * wtype3S1ChartT2); //敵1ポケ技3（補正あり）威力
  calc4P3S1Critical = Math.floor(Math.floor(calc4P3S1Critical * wtype3S1ChartT1) * wtype3S1ChartT2); //敵ポケ１技3例外補正なし威力
  calc4KPower3S1Critical = Math.floor(Math.floor(calc4KPower3S1Critical * wtype3S1ChartT1) * wtype3S1ChartT2); //敵1ポケ技3（補正あり）威力
  calc3P3S1 = Math.floor(Math.floor(calc3P3S1 * wtype3S1ChartT1) * wtype3S1ChartT2); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower3S1 = Math.floor(Math.floor(calc3KPower3S1 * wtype3S1ChartT1) * wtype3S1ChartT2); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3S1Critical = Math.floor(Math.floor(calc3P3S1Critical * wtype3S1ChartT1) * wtype3S1ChartT2); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
  calc3KPower3S1Critical = Math.floor(Math.floor(calc3KPower3S1Critical * wtype3S1ChartT1) * wtype3S1ChartT2); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //敵型1技4

  calc4P4S1 = Math.floor(Math.floor(calc4P4S1 * wtype4S1ChartT1) * wtype4S1ChartT2); //敵ポケ１技4例外補正なし威力
  calc4KPower4S1 = Math.floor(Math.floor(calc4KPower4S1 * wtype4S1ChartT1) * wtype4S1ChartT2); //敵1ポケ技4（補正あり）威力
  calc4P4S1Critical = Math.floor(Math.floor(calc4P4S1Critical * wtype4S1ChartT1) * wtype4S1ChartT2); //敵ポケ１技4例外補正なし威力
  calc4KPower4S1Critical = Math.floor(Math.floor(calc4KPower4S1Critical * wtype4S1ChartT1) * wtype4S1ChartT2); //敵1ポケ技4（補正あり）威力
  calc3P4S1 = Math.floor(Math.floor(calc3P4S1 * wtype4S1ChartT1) * wtype4S1ChartT2); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower4S1 = Math.floor(Math.floor(calc3KPower4S1 * wtype4S1ChartT1) * wtype4S1ChartT2); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4S1Critical = Math.floor(Math.floor(calc3P4S1Critical * wtype4S1ChartT1) * wtype4S1ChartT2); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3KPower4S1Critical = Math.floor(Math.floor(calc3KPower4S1Critical * wtype4S1ChartT1) * wtype4S1ChartT2); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //敵型2技1

  calc4P1S2 = Math.floor(Math.floor(calc4P1S2 * wtype1S2ChartT1) * wtype1S2ChartT2); //敵ポケ2技1例外補正なし威力
  calc4KPower1S2 = Math.floor(Math.floor(calc4KPower1S2 * wtype1S2ChartT1) * wtype1S2ChartT2); //敵2ポケ技1（補正あり）威力
  calc4P1S2Critical = Math.floor(Math.floor(calc4P1S2Critical * wtype1S2ChartT1) * wtype1S2ChartT2); //敵ポケ2技1例外補正なし威力
  calc4KPower1S2Critical = Math.floor(Math.floor(calc4KPower1S2Critical * wtype1S2ChartT1) * wtype1S2ChartT2); //敵2ポケ技1（補正あり）威力
  calc3P1S2 = Math.floor(Math.floor(calc3P1S2 * wtype1S2ChartT1) * wtype1S2ChartT2); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower1S2 = Math.floor(Math.floor(calc3KPower1S2 * wtype1S2ChartT1) * wtype1S2ChartT2); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1S2Critical = Math.floor(Math.floor(calc3P1S2Critical * wtype1S2ChartT1) * wtype1S2ChartT2); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3KPower1S2Critical = Math.floor(Math.floor(calc3KPower1S2Critical * wtype1S2ChartT1) * wtype1S2ChartT2); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //敵型2技2

  calc4P2S2 = Math.floor(Math.floor(calc4P2S2 * wtype2S2ChartT1) * wtype2S2ChartT2); //敵ポケ2技2例外補正なし威力
  calc4KPower2S2 = Math.floor(Math.floor(calc4KPower2S2 * wtype2S2ChartT1) * wtype2S2ChartT2); //敵2ポケ技2（補正あり）威力
  calc4P2S2Critical = Math.floor(Math.floor(calc4P2S2Critical * wtype2S2ChartT1) * wtype2S2ChartT2); //敵ポケ2技2例外補正なし威力
  calc4KPower2S2Critical = Math.floor(Math.floor(calc4KPower2S2Critical * wtype2S2ChartT1) * wtype2S2ChartT2); //敵2ポケ技2（補正あり）威力
  calc3P2S2 = Math.floor(Math.floor(calc3P2S2 * wtype2S2ChartT1) * wtype2S2ChartT2); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower2S2 = Math.floor(Math.floor(calc3KPower2S2 * wtype2S2ChartT1) * wtype2S2ChartT2); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2S2Critical = Math.floor(Math.floor(calc3P2S2Critical * wtype2S2ChartT1) * wtype2S2ChartT2); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3KPower2S2Critical = Math.floor(Math.floor(calc3KPower2S2Critical * wtype2S2ChartT1) * wtype2S2ChartT2); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //敵型2技3

  calc4P3S2 = Math.floor(Math.floor(calc4P3S2 * wtype3S2ChartT1) * wtype3S2ChartT2); //敵ポケ2技3例外補正なし威力
  calc4KPower3S2 = Math.floor(Math.floor(calc4KPower3S2 * wtype3S2ChartT1) * wtype3S2ChartT2); //敵2ポケ技3（補正あり）威力
  calc4P3S2Critical = Math.floor(Math.floor(calc4P3S2Critical * wtype3S2ChartT1) * wtype3S2ChartT2); //敵ポケ2技3例外補正なし威力
  calc4KPower3S2Critical = Math.floor(Math.floor(calc4KPower3S2Critical * wtype3S2ChartT1) * wtype3S2ChartT2); //敵2ポケ技3（補正あり）威力
  calc3P3S2 = Math.floor(Math.floor(calc3P3S2 * wtype3S2ChartT1) * wtype3S2ChartT2); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower3S2 = Math.floor(Math.floor(calc3KPower3S2 * wtype3S2ChartT1) * wtype3S2ChartT2); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3S2Critical = Math.floor(Math.floor(calc3P3S2Critical * wtype3S2ChartT1) * wtype3S2ChartT2); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3KPower3S2Critical = Math.floor(Math.floor(calc3KPower3S2Critical * wtype3S2ChartT1) * wtype3S2ChartT2); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //敵型2技4

  calc4P4S2 = Math.floor(Math.floor(calc4P4S2 * wtype4S2ChartT1) * wtype4S2ChartT2); //敵ポケ2技4例外補正なし威力
  calc4KPower4S2 = Math.floor(Math.floor(calc4KPower4S2 * wtype4S2ChartT1) * wtype4S2ChartT2); //敵2ポケ技4（補正あり）威力
  calc4P4S2Critical = Math.floor(Math.floor(calc4P4S2Critical * wtype4S2ChartT1) * wtype4S2ChartT2); //敵ポケ2技4例外補正なし威力
  calc4KPower4S2Critical = Math.floor(Math.floor(calc4KPower4S2Critical * wtype4S2ChartT1) * wtype4S2ChartT2); //敵2ポケ技4（補正あり）威力
  calc3P4S2 = Math.floor(Math.floor(calc3P4S2 * wtype4S2ChartT1) * wtype4S2ChartT2); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower4S2 = Math.floor(Math.floor(calc3KPower4S2 * wtype4S2ChartT1) * wtype4S2ChartT2); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4S2Critical = Math.floor(Math.floor(calc3P4S2Critical * wtype4S2ChartT1) * wtype4S2ChartT2); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3KPower4S2Critical = Math.floor(Math.floor(calc3KPower4S2Critical * wtype4S2ChartT1) * wtype4S2ChartT2); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //敵型3技1

  calc4P1S3 = Math.floor(Math.floor(calc4P1S3 * wtype1S3ChartT1) * wtype1S3ChartT2); //敵ポケ3技1例外補正なし威力
  calc4KPower1S3 = Math.floor(Math.floor(calc4KPower1S3 * wtype1S3ChartT1) * wtype1S3ChartT2); //敵3ポケ技1（補正あり）威力
  calc4P1S3Critical = Math.floor(Math.floor(calc4P1S3Critical * wtype1S3ChartT1) * wtype1S3ChartT2); //敵ポケ3技1例外補正なし威力
  calc4KPower1S3Critical = Math.floor(Math.floor(calc4KPower1S3Critical * wtype1S3ChartT1) * wtype1S3ChartT2); //敵3ポケ技1（補正あり）威力
  calc3P1S3 = Math.floor(Math.floor(calc3P1S3 * wtype1S3ChartT1) * wtype1S3ChartT2); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower1S3 = Math.floor(Math.floor(calc3KPower1S3 * wtype1S3ChartT1) * wtype1S3ChartT2); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1S3Critical = Math.floor(Math.floor(calc3P1S3Critical * wtype1S3ChartT1) * wtype1S3ChartT2); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3KPower1S3Critical = Math.floor(Math.floor(calc3KPower1S3Critical * wtype1S3ChartT1) * wtype1S3ChartT2); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //敵型3技2

  calc4P2S3 = Math.floor(Math.floor(calc4P2S3 * wtype2S3ChartT1) * wtype2S3ChartT2); //敵ポケ3技2例外補正なし威力
  calc4KPower2S3 = Math.floor(Math.floor(calc4KPower2S3 * wtype2S3ChartT1) * wtype2S3ChartT2); //敵3ポケ技2（補正あり）威力
  calc4P2S3Critical = Math.floor(Math.floor(calc4P2S3Critical * wtype2S3ChartT1) * wtype2S3ChartT2); //敵ポケ3技2例外補正なし威力
  calc4KPower2S3Critical = Math.floor(Math.floor(calc4KPower2S3Critical * wtype2S3ChartT1) * wtype2S3ChartT2); //敵3ポケ技2（補正あり）威力
  calc3P2S3 = Math.floor(Math.floor(calc3P2S3 * wtype2S3ChartT1) * wtype2S3ChartT2); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower2S3 = Math.floor(Math.floor(calc3KPower2S3 * wtype2S3ChartT1) * wtype2S3ChartT2); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2S3Critical = Math.floor(Math.floor(calc3P2S3Critical * wtype2S3ChartT1) * wtype2S3ChartT2); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
  calc3KPower2S3Critical = Math.floor(Math.floor(calc3KPower2S3Critical * wtype2S3ChartT1) * wtype2S3ChartT2); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //敵型3技3

  calc4P3S3 = Math.floor(Math.floor(calc4P3S3 * wtype3S3ChartT1) * wtype3S3ChartT2); //敵ポケ3技3例外補正なし威力
  calc4KPower3S3 = Math.floor(Math.floor(calc4KPower3S3 * wtype3S3ChartT1) * wtype3S3ChartT2); //敵3ポケ技3（補正あり）威力
  calc4P3S3Critical = Math.floor(Math.floor(calc4P3S3Critical * wtype3S3ChartT1) * wtype3S3ChartT2); //敵ポケ3技3例外補正なし威力
  calc4KPower3S3Critical = Math.floor(Math.floor(calc4KPower3S3Critical * wtype3S3ChartT1) * wtype3S3ChartT2); //敵3ポケ技3（補正あり）威力
  calc3P3S3 = Math.floor(Math.floor(calc3P3S3 * wtype3S3ChartT1) * wtype3S3ChartT2); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower3S3 = Math.floor(Math.floor(calc3KPower3S3 * wtype3S3ChartT1) * wtype3S3ChartT2); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3S3Critical = Math.floor(Math.floor(calc3P3S3Critical * wtype3S3ChartT1) * wtype3S3ChartT2); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3KPower3S3Critical = Math.floor(Math.floor(calc3KPower3S3Critical * wtype3S3ChartT1) * wtype3S3ChartT2); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //敵型3技4

  calc4P4S3 = Math.floor(Math.floor(calc4P4S3 * wtype4S3ChartT1) * wtype4S3ChartT2); //敵ポケ3技4例外補正なし威力
  calc4KPower4S3 = Math.floor(Math.floor(calc4KPower4S3 * wtype4S3ChartT1) * wtype4S3ChartT2); //敵3ポケ技4（補正あり）威力
  calc4P4S3Critical = Math.floor(Math.floor(calc4P4S3Critical * wtype4S3ChartT1) * wtype4S3ChartT2); //敵ポケ3技4例外補正なし威力
  calc4KPower4S3Critical = Math.floor(Math.floor(calc4KPower4S3Critical * wtype4S3ChartT1) * wtype4S3ChartT2); //敵3ポケ技4（補正あり）威力
  calc3P4S3 = Math.floor(Math.floor(calc3P4S3 * wtype4S3ChartT1) * wtype4S3ChartT2); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower4S3 = Math.floor(Math.floor(calc3KPower4S3 * wtype4S3ChartT1) * wtype4S3ChartT2); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4S3Critical = Math.floor(Math.floor(calc3P4S3Critical * wtype4S3ChartT1) * wtype4S3ChartT2); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3KPower4S3Critical = Math.floor(Math.floor(calc3KPower4S3Critical * wtype4S3ChartT1) * wtype4S3ChartT2); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  calc4P1S4 = Math.floor(Math.floor(calc4P1S4 * wtype1S4ChartT1) * wtype1S4ChartT2); //敵ポケ4技1例外補正なし威力
  calc4KPower1S4 = Math.floor(Math.floor(calc4KPower1S4 * wtype1S4ChartT1) * wtype1S4ChartT2); //敵4ポケ技1（補正あり）威力
  calc4P1S4Critical = Math.floor(Math.floor(calc4P1S4Critical * wtype1S4ChartT1) * wtype1S4ChartT2); //敵ポケ4技1例外補正なし威力
  calc4KPower1S4Critical = Math.floor(Math.floor(calc4KPower1S4Critical * wtype1S4ChartT1) * wtype1S4ChartT2); //敵4ポケ技1（補正あり）威力
  calc3P1S4 = Math.floor(Math.floor(calc3P1S4 * wtype1S4ChartT1) * wtype1S4ChartT2); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower1S4 = Math.floor(Math.floor(calc3KPower1S4 * wtype1S4ChartT1) * wtype1S4ChartT2); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3P1S4Critical = Math.floor(Math.floor(calc3P1S4Critical * wtype1S4ChartT1) * wtype1S4ChartT2); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3KPower1S4Critical = Math.floor(Math.floor(calc3KPower1S4Critical * wtype1S4ChartT1) * wtype1S4ChartT2); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //敵型4技2

  calc4P2S4 = Math.floor(Math.floor(calc4P2S4 * wtype2S4ChartT1) * wtype2S4ChartT2); //敵ポケ4技2例外補正なし威力
  calc4KPower2S4 = Math.floor(Math.floor(calc4KPower2S4 * wtype2S4ChartT1) * wtype2S4ChartT2); //敵4ポケ技2（補正あり）威力
  calc4P2S4Critical = Math.floor(Math.floor(calc4P2S4Critical * wtype2S4ChartT1) * wtype2S4ChartT2); //敵ポケ4技2例外補正なし威力
  calc4KPower2S4Critical = Math.floor(Math.floor(calc4KPower2S4Critical * wtype2S4ChartT1) * wtype2S4ChartT2); //敵4ポケ技2（補正あり）威力
  calc3P2S4 = Math.floor(Math.floor(calc3P2S4 * wtype2S4ChartT1) * wtype2S4ChartT2); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower2S4 = Math.floor(Math.floor(calc3KPower2S4 * wtype2S4ChartT1) * wtype2S4ChartT2); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3P2S4Critical = Math.floor(Math.floor(calc3P2S4Critical * wtype2S4ChartT1) * wtype2S4ChartT2); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3KPower2S4Critical = Math.floor(Math.floor(calc3KPower2S4Critical * wtype2S4ChartT1) * wtype2S4ChartT2); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //敵型4技3

  calc4P3S4 = Math.floor(Math.floor(calc4P3S4 * wtype3S4ChartT1) * wtype3S4ChartT2); //敵ポケ4技3例外補正なし威力
  calc4KPower3S4 = Math.floor(Math.floor(calc4KPower3S4 * wtype3S4ChartT1) * wtype3S4ChartT2); //敵4ポケ技3（補正あり）威力
  calc4P3S4Critical = Math.floor(Math.floor(calc4P3S4Critical * wtype3S4ChartT1) * wtype3S4ChartT2); //敵ポケ4技3例外補正なし威力
  calc4KPower3S4Critical = Math.floor(Math.floor(calc4KPower3S4Critical * wtype3S4ChartT1) * wtype3S4ChartT2); //敵4ポケ技3（補正あり）威力
  calc3P3S4 = Math.floor(Math.floor(calc3P3S4 * wtype3S4ChartT1) * wtype3S4ChartT2); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower3S4 = Math.floor(Math.floor(calc3KPower3S4 * wtype3S4ChartT1) * wtype3S4ChartT2); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3P3S4Critical = Math.floor(Math.floor(calc3P3S4Critical * wtype3S4ChartT1) * wtype3S4ChartT2); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  calc3KPower3S4Critical = Math.floor(Math.floor(calc3KPower3S4Critical * wtype3S4ChartT1) * wtype3S4ChartT2); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //敵型4技4

  calc4P4S4 = Math.floor(Math.floor(calc4P4S4 * wtype4S4ChartT1) * wtype4S4ChartT2); //敵ポケ4技4例外補正なし威力
  calc4KPower4S4 = Math.floor(Math.floor(calc4KPower4S4 * wtype4S4ChartT1) * wtype4S4ChartT2); //敵4ポケ技4（補正あり）威力
  calc4P4S4Critical = Math.floor(Math.floor(calc4P4S4Critical * wtype4S4ChartT1) * wtype4S4ChartT2); //敵ポケ4技4例外補正なし威力
  calc4KPower4S4Critical = Math.floor(Math.floor(calc4KPower4S4Critical * wtype4S4ChartT1) * wtype4S4ChartT2); //敵4ポケ技4（補正あり）威力
  calc3P4S4 = Math.floor(Math.floor(calc3P4S4 * wtype4S4ChartT1) * wtype4S4ChartT2); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower4S4 = Math.floor(Math.floor(calc3KPower4S4 * wtype4S4ChartT1) * wtype4S4ChartT2); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  calc3P4S4Critical = Math.floor(Math.floor(calc3P4S4Critical * wtype4S4ChartT1) * wtype4S4ChartT2); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  calc3KPower4S4Critical = Math.floor(Math.floor(calc3KPower4S4Critical * wtype4S4ChartT1) * wtype4S4ChartT2); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //!ハドロ　フィルターハドロ　フィルターハドロ　フィルターハドロ　フィルターハドロ　フィルターハドロ　フィルター
  //!ハドロ　フィルターハドロ　フィルターハドロ　フィルターハドロ　フィルターハドロ　フィルターハドロ　フィルター
  //!ハドロ　フィルターハドロ　フィルターハドロ　フィルターハドロ　フィルターハドロ　フィルターハドロ　フィルター

  // 敵の特性がダメージ減少系だった場合
  let tekiAbiDamageGENDisplay1 = "";
  let tekiAbiDamageGENDisplay2 = "";
  let tekiAbiDamageGENDisplay3 = "";
  let tekiAbiDamageGENDisplay4 = "";
  // 敵1の攻撃を自分の特性でダメージ減らすケース
  let myAbiDamageGENDisplayS1W1 = "";
  let myAbiDamageGENDisplayS1W2 = "";
  let myAbiDamageGENDisplayS1W3 = "";
  let myAbiDamageGENDisplayS1W4 = "";
  // 敵2の攻撃を自分の特性でダメージ減らすケース
  let myAbiDamageGENDisplayS2W1 = "";
  let myAbiDamageGENDisplayS2W2 = "";
  let myAbiDamageGENDisplayS2W3 = "";
  let myAbiDamageGENDisplayS2W4 = "";
  // 敵3の攻撃を自分の特性でダメージ減らすケース
  let myAbiDamageGENDisplayS3W1 = "";
  let myAbiDamageGENDisplayS3W2 = "";
  let myAbiDamageGENDisplayS3W3 = "";
  let myAbiDamageGENDisplayS3W4 = "";
  // 敵4の攻撃を自分の特性でダメージ減らすケース
  let myAbiDamageGENDisplayS4W1 = "";
  let myAbiDamageGENDisplayS4W2 = "";
  let myAbiDamageGENDisplayS4W3 = "";
  let myAbiDamageGENDisplayS4W4 = "";

  if (selectedTekiAbility === "ハードロック" || selectedTekiAbility === "フィルター") {
    if (wtype1ChartT1 * wtype1ChartT2 >= 2) {
      tekiAbiDamageGENDisplay1 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //自分技1
      calc3P1_S1 = Math.floor((calc3P1_S1 * 75) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 75) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 75) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 75) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 75) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 75) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 75) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 75) / 100); //自分ポケ技1が敵型4への（補正あり）威力

      calc4P1_S1 = Math.floor((calc4P1_S1 * 75) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 75) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 75) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 75) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 75) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 75) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 75) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 75) / 100); //自分ポケ技1が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 75) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 75) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 75) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 75) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 75) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 75) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 75) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 75) / 100); //自分ポケ技1が敵型4への（補正あり）威力

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 75) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 75) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 75) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 75) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 75) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 75) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 75) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 75) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    }

    if (wtype2ChartT1 * wtype2ChartT2 >= 2) {
      tekiAbiDamageGENDisplay2 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //自分技2
      calc3P2_S1 = Math.floor((calc3P2_S1 * 75) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 75) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 75) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 75) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 75) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 75) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 75) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 75) / 100); //自分ポケ技2が敵型4への（補正あり）威力

      calc4P2_S1 = Math.floor((calc4P2_S1 * 75) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 75) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 75) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 75) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 75) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 75) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 75) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 75) / 100); //自分ポケ技2が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 75) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 75) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 75) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 75) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 75) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 75) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 75) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 75) / 100); //自分ポケ技2が敵型4への（補正あり）威力

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 75) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 75) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 75) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 75) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 75) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 75) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 75) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 75) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    }

    if (wtype3ChartT1 * wtype3ChartT2 >= 2) {
      tekiAbiDamageGENDisplay3 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //自分技3
      calc3P3_S1 = Math.floor((calc3P3_S1 * 75) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 75) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 75) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 75) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 75) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 75) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 75) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 75) / 100); //自分ポケ技3が敵型4への（補正あり）威力

      calc4P3_S1 = Math.floor((calc4P3_S1 * 75) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 75) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 75) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 75) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 75) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 75) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 75) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 75) / 100); //自分ポケ技3が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 75) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 75) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 75) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 75) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 75) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 75) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 75) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 75) / 100); //自分ポケ技3が敵型4への（補正あり）威力

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 75) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 75) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 75) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 75) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 75) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 75) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 75) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 75) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    }

    if (wtype4ChartT1 * wtype4ChartT2 >= 2) {
      tekiAbiDamageGENDisplay4 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //自分技4
      calc3P4_S1 = Math.floor((calc3P4_S1 * 75) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 75) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 75) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 75) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 75) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 75) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 75) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 75) / 100); //自分ポケ技4が敵型4への（補正あり）威力

      calc4P4_S1 = Math.floor((calc4P4_S1 * 75) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 75) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 75) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 75) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 75) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 75) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 75) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 75) / 100); //自分ポケ技4が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 75) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 75) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 75) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 75) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 75) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 75) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 75) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 75) / 100); //自分ポケ技4が敵型4への（補正あり）威力

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 75) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 75) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 75) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 75) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 75) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 75) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 75) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 75) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  //!敵ハドロ・フィルター補正敵ハドロ・フィルター補正敵ハドロ・フィルター補正敵ハドロ・フィルター補正
  //!敵ハドロ・フィルター補正敵ハドロ・フィルター補正敵ハドロ・フィルター補正敵ハドロ・フィルター補正
  //!敵ハドロ・フィルター補正敵ハドロ・フィルター補正敵ハドロ・フィルター補正敵ハドロ・フィルター補正
  if (selectedAbility === "ハードロック" || selectedAbility === "フィルター") {
    if (wtype1S1ChartT1 * wtype1S1ChartT2 >= 2) {
      myAbiDamageGENDisplayS1W1 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //敵型1技1
      calc4P1S1 = Math.floor((calc4P1S1 * 75) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 75) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 75) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 75) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 75) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 75) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 75) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 75) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype2S1ChartT1 * wtype2S1ChartT2 >= 2) {
      myAbiDamageGENDisplayS1W2 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //敵型1技2
      calc4P2S1 = Math.floor((calc4P2S1 * 75) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 75) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 75) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 75) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 75) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 75) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 75) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 75) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype3S1ChartT1 * wtype3S1ChartT2 >= 2) {
      myAbiDamageGENDisplayS1W3 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //敵型1技3
      calc4P3S1 = Math.floor((calc4P3S1 * 75) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 75) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 75) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 75) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 75) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 75) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 75) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 75) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype4S1ChartT1 * wtype4S1ChartT2 >= 2) {
      myAbiDamageGENDisplayS1W4 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //敵型1技4
      calc4P4S1 = Math.floor((calc4P4S1 * 75) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 75) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 75) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 75) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 75) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 75) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 75) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 75) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S2ChartT1 * wtype1S2ChartT2 >= 2) {
      myAbiDamageGENDisplayS2W1 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //敵型2技1
      calc4P1S2 = Math.floor((calc4P1S2 * 75) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 75) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 75) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 75) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 75) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 75) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 75) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 75) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype2S2ChartT1 * wtype2S2ChartT2 >= 2) {
      myAbiDamageGENDisplayS2W2 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //敵型2技2

      calc4P2S2 = Math.floor((calc4P2S2 * 75) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 75) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 75) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 75) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 75) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 75) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 75) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 75) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S2ChartT1 * wtype3S2ChartT2 >= 2) {
      myAbiDamageGENDisplayS2W3 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //敵型2技3
      calc4P3S2 = Math.floor((calc4P3S2 * 75) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 75) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 75) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 75) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 75) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 75) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 75) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 75) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype4S2ChartT1 * wtype4S2ChartT2 >= 2) {
      myAbiDamageGENDisplayS2W4 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //敵型2技4
      calc4P4S2 = Math.floor((calc4P4S2 * 75) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 75) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 75) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 75) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 75) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 75) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 75) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 75) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S3ChartT1 * wtype1S3ChartT2 >= 2) {
      myAbiDamageGENDisplayS3W1 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //敵型3技1

      calc4P1S3 = Math.floor((calc4P1S3 * 75) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 75) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 75) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 75) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 75) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 75) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 75) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 75) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype2S3ChartT1 * wtype2S3ChartT2 >= 2) {
      myAbiDamageGENDisplayS3W2 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //敵型3技2
      calc4P2S3 = Math.floor((calc4P2S3 * 75) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 75) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 75) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 75) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 75) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 75) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 75) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 75) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype3S3ChartT1 * wtype3S3ChartT2 >= 2) {
      myAbiDamageGENDisplayS3W3 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //敵型3技3
      calc4P3S3 = Math.floor((calc4P3S3 * 75) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 75) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 75) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 75) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 75) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 75) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 75) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 75) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype4S3ChartT1 * wtype4S3ChartT2 >= 2) {
      myAbiDamageGENDisplayS3W4 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //敵型3技4
      calc4P4S3 = Math.floor((calc4P4S3 * 75) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 75) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 75) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 75) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 75) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 75) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 75) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 75) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S4ChartT1 * wtype1S4ChartT2 >= 2) {
      myAbiDamageGENDisplayS4W1 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      calc4P1S4 = Math.floor((calc4P1S4 * 75) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 75) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 75) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 75) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 75) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 75) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 75) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 75) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype2S4ChartT1 * wtype2S4ChartT2 >= 2) {
      myAbiDamageGENDisplayS4W2 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //敵型4技2
      calc4P2S4 = Math.floor((calc4P2S4 * 75) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 75) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 75) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 75) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 75) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 75) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 75) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 75) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype3S4ChartT1 * wtype3S4ChartT2 >= 2) {
      myAbiDamageGENDisplayS4W3 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //敵型4技3
      calc4P3S4 = Math.floor((calc4P3S4 * 75) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 75) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 75) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 75) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 75) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 75) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 75) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 75) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype4S4ChartT1 * wtype4S4ChartT2 >= 2) {
      myAbiDamageGENDisplayS4W4 = "[ﾊﾄﾞﾛ/ﾌｨﾙﾀｰ]";
      //敵型4技4
      calc4P4S4 = Math.floor((calc4P4S4 * 75) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 75) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 75) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 75) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 75) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 75) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 75) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 75) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //!たつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおび
  //!たつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおび
  //!たつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおび
  //!たつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおびたつおび
  if (myItem_tab3 === "たつじんのおび") {
    // if (wtype1ChartT1 === 2 || wtype1ChartT2 === 2) {
    if (wtype1ChartT1 * wtype1ChartT2 >= 2) {
      myDamageHoseiDisplay1 = "[達人の帯]";
      //自分技1
      calc3P1_S1 = Math.floor((calc3P1_S1 * 120) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 120) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 120) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 120) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 120) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 120) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 120) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 120) / 100); //自分ポケ技1が敵型4への（補正あり）威力

      calc4P1_S1 = Math.floor((calc4P1_S1 * 120) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 120) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 120) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 120) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 120) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 120) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 120) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 120) / 100); //自分ポケ技1が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 120) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 120) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 120) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 120) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 120) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 120) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 120) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 120) / 100); //自分ポケ技1が敵型4への（補正あり）威力

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 120) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 120) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 120) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 120) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 120) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 120) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 120) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 120) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    }

    if (wtype2ChartT1 * wtype2ChartT2 >= 2) {
      myDamageHoseiDisplay2 = "[達人の帯]";

      //自分技2
      calc3P2_S1 = Math.floor((calc3P2_S1 * 120) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 120) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 120) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 120) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 120) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 120) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 120) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 120) / 100); //自分ポケ技2が敵型4への（補正あり）威力

      calc4P2_S1 = Math.floor((calc4P2_S1 * 120) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 120) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 120) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 120) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 120) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 120) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 120) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 120) / 100); //自分ポケ技2が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 120) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 120) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 120) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 120) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 120) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 120) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 120) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 120) / 100); //自分ポケ技2が敵型4への（補正あり）威力

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 120) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 120) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 120) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 120) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 120) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 120) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 120) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 120) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    }

    if (wtype3ChartT1 * wtype3ChartT2 >= 2) {
      myDamageHoseiDisplay3 = "[達人の帯]";

      //自分技3
      calc3P3_S1 = Math.floor((calc3P3_S1 * 120) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 120) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 120) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 120) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 120) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 120) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 120) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 120) / 100); //自分ポケ技3が敵型4への（補正あり）威力

      calc4P3_S1 = Math.floor((calc4P3_S1 * 120) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 120) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 120) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 120) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 120) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 120) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 120) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 120) / 100); //自分ポケ技3が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 120) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 120) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 120) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 120) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 120) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 120) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 120) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 120) / 100); //自分ポケ技3が敵型4への（補正あり）威力

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 120) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 120) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 120) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 120) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 120) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 120) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 120) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 120) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    }

    if (wtype4ChartT1 * wtype4ChartT2 >= 2) {
      myDamageHoseiDisplay4 = "[達人の帯]";
      //自分技4
      calc3P4_S1 = Math.floor((calc3P4_S1 * 120) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 120) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 120) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 120) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 120) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 120) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 120) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 120) / 100); //自分ポケ技4が敵型4への（補正あり）威力

      calc4P4_S1 = Math.floor((calc4P4_S1 * 120) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 120) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 120) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 120) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 120) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 120) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 120) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 120) / 100); //自分ポケ技4が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 120) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 120) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 120) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 120) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 120) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 120) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 120) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 120) / 100); //自分ポケ技4が敵型4への（補正あり）威力

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 120) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 120) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 120) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 120) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 120) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 120) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 120) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 120) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  //!敵たつおび補正敵たつおび補正敵たつおび補正敵たつおび補正敵たつおび補正敵たつおび補正敵たつおび補正
  //!敵たつおび補正敵たつおび補正敵たつおび補正敵たつおび補正敵たつおび補正敵たつおび補正敵たつおび補正
  //!敵たつおび補正敵たつおび補正敵たつおび補正敵たつおび補正敵たつおび補正敵たつおび補正敵たつおび補正
  if (tekiItem1_tab3 === "たつじんのおび") {
    if (wtype1S1ChartT1 * wtype1S1ChartT2 >= 2) {
      teki1DamageHoseiDisplay1 = "[達人の帯]";

      //敵型1技1
      calc4P1S1 = Math.floor((calc4P1S1 * 120) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 120) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 120) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 120) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 120) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 120) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 120) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 120) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype2S1ChartT1 * wtype2S1ChartT2 >= 2) {
      teki1DamageHoseiDisplay2 = "[達人の帯]";

      //敵型1技2
      calc4P2S1 = Math.floor((calc4P2S1 * 120) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 120) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 120) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 120) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 120) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 120) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 120) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 120) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype3S1ChartT1 * wtype3S1ChartT2 >= 2) {
      teki1DamageHoseiDisplay3 = "[達人の帯]";

      //敵型1技3
      calc4P3S1 = Math.floor((calc4P3S1 * 120) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 120) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 120) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 120) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 120) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 120) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 120) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 120) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype4S1ChartT1 * wtype4S1ChartT2 >= 2) {
      teki1DamageHoseiDisplay4 = "[達人の帯]";

      //敵型1技4
      calc4P4S1 = Math.floor((calc4P4S1 * 120) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 120) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 120) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 120) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 120) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 120) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 120) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 120) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  if (tekiItem2_tab3 === "たつじんのおび") {
    if (wtype1S2ChartT1 * wtype1S2ChartT2 >= 2) {
      teki2DamageHoseiDisplay1 = "[達人の帯]";

      //敵型2技1
      calc4P1S2 = Math.floor((calc4P1S2 * 120) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 120) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 120) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 120) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 120) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 120) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 120) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 120) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype2S2ChartT1 * wtype2S2ChartT2 >= 2) {
      //敵型2技2
      teki2DamageHoseiDisplay2 = "[達人の帯]";

      calc4P2S2 = Math.floor((calc4P2S2 * 120) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 120) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 120) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 120) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 120) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 120) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 120) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 120) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S2ChartT1 * wtype3S2ChartT2 >= 2) {
      teki2DamageHoseiDisplay3 = "[達人の帯]";

      //敵型2技3
      calc4P3S2 = Math.floor((calc4P3S2 * 120) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 120) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 120) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 120) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 120) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 120) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 120) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 120) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype4S2ChartT1 * wtype4S2ChartT2 >= 2) {
      teki2DamageHoseiDisplay4 = "[達人の帯]";

      //敵型2技4
      calc4P4S2 = Math.floor((calc4P4S2 * 120) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 120) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 120) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 120) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 120) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 120) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 120) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 120) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  if (tekiItem3_tab3 === "たつじんのおび") {
    if (wtype1S3ChartT1 * wtype1S3ChartT2 >= 2) {
      teki3DamageHoseiDisplay1 = "[達人の帯]";

      //敵型3技1

      calc4P1S3 = Math.floor((calc4P1S3 * 120) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 120) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 120) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 120) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 120) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 120) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 120) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 120) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype2S3ChartT1 * wtype2S3ChartT2 >= 2) {
      teki3DamageHoseiDisplay2 = "[達人の帯]";

      //敵型3技2
      calc4P2S3 = Math.floor((calc4P2S3 * 120) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 120) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 120) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 120) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 120) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 120) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 120) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 120) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype3S3ChartT1 * wtype3S3ChartT2 >= 2) {
      teki3DamageHoseiDisplay3 = "[達人の帯]";

      //敵型3技3
      calc4P3S3 = Math.floor((calc4P3S3 * 120) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 120) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 120) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 120) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 120) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 120) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 120) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 120) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype4S3ChartT1 * wtype4S3ChartT2 >= 2) {
      teki3DamageHoseiDisplay4 = "[達人の帯]";

      //敵型3技4
      calc4P4S3 = Math.floor((calc4P4S3 * 120) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 120) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 120) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 120) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 120) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 120) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 120) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 120) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  if (tekiItem4_tab3 === "たつじんのおび") {
    if (wtype1S4ChartT1 * wtype1S4ChartT2 >= 2) {
      teki4DamageHoseiDisplay1 = "[達人の帯]";

      calc4P1S4 = Math.floor((calc4P1S4 * 120) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 120) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 120) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 120) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 120) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 120) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 120) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 120) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype2S4ChartT1 * wtype2S4ChartT2 >= 2) {
      teki4DamageHoseiDisplay2 = "[達人の帯]";

      //敵型4技2
      calc4P2S4 = Math.floor((calc4P2S4 * 120) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 120) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 120) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 120) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 120) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 120) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 120) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 120) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype3S4ChartT1 * wtype3S4ChartT2 >= 2) {
      teki4DamageHoseiDisplay3 = "[達人の帯]";

      //敵型4技3
      calc4P3S4 = Math.floor((calc4P3S4 * 120) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 120) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 120) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 120) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 120) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 120) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 120) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 120) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype4S4ChartT1 * wtype4S4ChartT2 >= 2) {
      teki4DamageHoseiDisplay4 = "[達人の帯]";

      //敵型4技4
      calc4P4S4 = Math.floor((calc4P4S4 * 120) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 120) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 120) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 120) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 120) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 120) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 120) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 120) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  let myAbiIromegaDisplay1 = "";
  let myAbiIromegaDisplay2 = "";
  let myAbiIromegaDisplay3 = "";
  let myAbiIromegaDisplay4 = "";

  let tekiAbiIromegaDisplayS1W1 = "";
  let tekiAbiIromegaDisplayS1W2 = "";
  let tekiAbiIromegaDisplayS1W3 = "";
  let tekiAbiIromegaDisplayS1W4 = "";

  let tekiAbiIromegaDisplayS2W1 = "";
  let tekiAbiIromegaDisplayS2W2 = "";
  let tekiAbiIromegaDisplayS2W3 = "";
  let tekiAbiIromegaDisplayS2W4 = "";

  let tekiAbiIromegaDisplayS3W1 = "";
  let tekiAbiIromegaDisplayS3W2 = "";
  let tekiAbiIromegaDisplayS3W3 = "";
  let tekiAbiIromegaDisplayS3W4 = "";

  let tekiAbiIromegaDisplayS4W1 = "";
  let tekiAbiIromegaDisplayS4W2 = "";
  let tekiAbiIromegaDisplayS4W3 = "";
  let tekiAbiIromegaDisplayS4W4 = "";

  //!いろめがね
  if (selectedAbility === "いろめがね") {
    if (wtype1ChartT1 * wtype1ChartT2 <= 0.5) {
      myAbiIromegaDisplay1 = "[色眼鏡]";
      //自分技1
      calc3P1_S1 = Math.floor((calc3P1_S1 * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 200) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 200) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 200) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 200) / 100); //自分ポケ技1が敵型4への（補正あり）威力

      calc4P1_S1 = Math.floor((calc4P1_S1 * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 200) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 200) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 200) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 200) / 100); //自分ポケ技1が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 200) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 200) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 200) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 200) / 100); //自分ポケ技1が敵型4への（補正あり）威力

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 200) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 200) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 200) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 200) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 200) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    }

    if (wtype2ChartT1 * wtype2ChartT2 <= 0.5) {
      myAbiIromegaDisplay2 = "[色眼鏡]";
      //自分技2
      calc3P2_S1 = Math.floor((calc3P2_S1 * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 200) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 200) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 200) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 200) / 100); //自分ポケ技2が敵型4への（補正あり）威力

      calc4P2_S1 = Math.floor((calc4P2_S1 * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 200) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 200) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 200) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 200) / 100); //自分ポケ技2が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 200) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 200) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 200) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 200) / 100); //自分ポケ技2が敵型4への（補正あり）威力

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 200) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 200) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 200) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 200) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 200) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    }

    if (wtype3ChartT1 * wtype3ChartT2 <= 0.5) {
      myAbiIromegaDisplay3 = "[色眼鏡]";
      //自分技3
      calc3P3_S1 = Math.floor((calc3P3_S1 * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 200) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 200) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 200) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 200) / 100); //自分ポケ技3が敵型4への（補正あり）威力

      calc4P3_S1 = Math.floor((calc4P3_S1 * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 200) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 200) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 200) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 200) / 100); //自分ポケ技3が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 200) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 200) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 200) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 200) / 100); //自分ポケ技3が敵型4への（補正あり）威力

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 200) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 200) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 200) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 200) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 200) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    }

    if (wtype4ChartT1 * wtype4ChartT2 <= 0.5) {
      myAbiIromegaDisplay4 = "[色眼鏡]";
      //自分技4
      calc3P4_S1 = Math.floor((calc3P4_S1 * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 200) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 200) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 200) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 200) / 100); //自分ポケ技4が敵型4への（補正あり）威力

      calc4P4_S1 = Math.floor((calc4P4_S1 * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 200) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 200) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 200) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 200) / 100); //自分ポケ技4が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 200) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 200) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 200) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 200) / 100); //自分ポケ技4が敵型4への（補正あり）威力

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 200) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 200) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 200) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 200) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 200) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  //!いろめがね補正
  if (selectedTekiAbility === "いろめがね") {
    if (wtype1S1ChartT1 * wtype1S1ChartT2 <= 0.5) {
      tekiAbiIromegaDisplayS1W1 = "[色眼鏡]";
      //敵型1技1
      calc4P1S1 = Math.floor((calc4P1S1 * 200) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 200) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 200) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 200) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 200) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 200) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 200) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 200) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype2S1ChartT1 * wtype2S1ChartT2 <= 0.5) {
      tekiAbiIromegaDisplayS1W2 = "[色眼鏡]";
      //敵型1技2
      calc4P2S1 = Math.floor((calc4P2S1 * 200) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 200) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 200) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 200) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 200) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 200) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 200) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 200) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype3S1ChartT1 * wtype3S1ChartT2 <= 0.5) {
      tekiAbiIromegaDisplayS1W3 = "[色眼鏡]";
      //敵型1技3
      calc4P3S1 = Math.floor((calc4P3S1 * 200) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 200) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 200) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 200) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 200) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 200) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 200) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 200) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype4S1ChartT1 * wtype4S1ChartT2 <= 0.5) {
      tekiAbiIromegaDisplayS1W4 = "[色眼鏡]";
      //敵型1技4
      calc4P4S1 = Math.floor((calc4P4S1 * 200) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 200) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 200) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 200) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 200) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 200) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 200) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 200) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S2ChartT1 * wtype1S2ChartT2 <= 0.5) {
      tekiAbiIromegaDisplayS2W1 = "[色眼鏡]";
      //敵型2技1
      calc4P1S2 = Math.floor((calc4P1S2 * 200) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 200) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 200) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 200) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 200) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 200) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 200) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 200) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype2S2ChartT1 * wtype2S2ChartT2 <= 0.5) {
      tekiAbiIromegaDisplayS2W2 = "[色眼鏡]";
      //敵型2技2

      calc4P2S2 = Math.floor((calc4P2S2 * 200) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 200) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 200) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 200) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 200) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 200) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 200) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 200) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S2ChartT1 * wtype3S2ChartT2 <= 0.5) {
      tekiAbiIromegaDisplayS2W3 = "[色眼鏡]";
      //敵型2技3
      calc4P3S2 = Math.floor((calc4P3S2 * 200) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 200) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 200) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 200) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 200) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 200) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 200) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 200) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype4S2ChartT1 * wtype4S2ChartT2 <= 0.5) {
      tekiAbiIromegaDisplayS2W4 = "[色眼鏡]";
      //敵型2技4
      calc4P4S2 = Math.floor((calc4P4S2 * 200) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 200) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 200) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 200) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 200) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 200) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 200) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 200) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S3ChartT1 * wtype1S3ChartT2 <= 0.5) {
      tekiAbiIromegaDisplayS3W1 = "[色眼鏡]";
      //敵型3技1

      calc4P1S3 = Math.floor((calc4P1S3 * 200) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 200) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 200) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 200) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 200) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 200) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 200) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 200) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype2S3ChartT1 * wtype2S3ChartT2 <= 0.5) {
      tekiAbiIromegaDisplayS3W2 = "[色眼鏡]";
      //敵型3技2
      calc4P2S3 = Math.floor((calc4P2S3 * 200) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 200) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 200) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 200) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 200) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 200) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 200) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 200) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype3S3ChartT1 * wtype3S3ChartT2 <= 0.5) {
      tekiAbiIromegaDisplayS3W3 = "[色眼鏡]";
      //敵型3技3
      calc4P3S3 = Math.floor((calc4P3S3 * 200) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 200) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 200) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 200) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 200) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 200) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 200) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 200) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype4S3ChartT1 * wtype4S3ChartT2 <= 0.5) {
      tekiAbiIromegaDisplayS3W4 = "[色眼鏡]";
      //敵型3技4
      calc4P4S3 = Math.floor((calc4P4S3 * 200) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 200) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 200) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 200) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 200) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 200) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 200) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 200) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S4ChartT1 * wtype1S4ChartT2 <= 0.5) {
      tekiAbiIromegaDisplayS4W1 = "[色眼鏡]";
      calc4P1S4 = Math.floor((calc4P1S4 * 200) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 200) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 200) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 200) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 200) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 200) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 200) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 200) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype2S4ChartT1 * wtype2S4ChartT2 <= 0.5) {
      tekiAbiIromegaDisplayS4W2 = "[色眼鏡]";
      //敵型4技2
      calc4P2S4 = Math.floor((calc4P2S4 * 200) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 200) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 200) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 200) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 200) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 200) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 200) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 200) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype3S4ChartT1 * wtype3S4ChartT2 <= 0.5) {
      tekiAbiIromegaDisplayS4W3 = "[色眼鏡]";
      //敵型4技3
      calc4P3S4 = Math.floor((calc4P3S4 * 200) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 200) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 200) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 200) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 200) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 200) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 200) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 200) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype4S4ChartT1 * wtype4S4ChartT2 <= 0.5) {
      tekiAbiIromegaDisplayS4W4 = "[色眼鏡]";
      //敵型4技4
      calc4P4S4 = Math.floor((calc4P4S4 * 200) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 200) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 200) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 200) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 200) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 200) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 200) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 200) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //! 半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正
  //! 半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正
  //! 半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正半減の実補正

  //自分の持ち物が半減きのみで敵1の攻撃を受けたケース
  let myKinomiDisplayS1W1 = "";
  let myKinomiDisplayS1W2 = "";
  let myKinomiDisplayS1W3 = "";
  let myKinomiDisplayS1W4 = "";
  //自分の持ち物が半減きのみで敵2の攻撃を受けたケース
  let myKinomiDisplayS2W1 = "";
  let myKinomiDisplayS2W2 = "";
  let myKinomiDisplayS2W3 = "";
  let myKinomiDisplayS2W4 = "";
  //自分の持ち物が半減きのみで敵3の攻撃を受けたケース
  let myKinomiDisplayS3W1 = "";
  let myKinomiDisplayS3W2 = "";
  let myKinomiDisplayS3W3 = "";
  let myKinomiDisplayS3W4 = "";
  //自分の持ち物が半減きのみで敵4の攻撃を受けたケース
  let myKinomiDisplayS4W1 = "";
  let myKinomiDisplayS4W2 = "";
  let myKinomiDisplayS4W3 = "";
  let myKinomiDisplayS4W4 = "";

  //敵1の持ち物が半減きのみで自分が攻撃をしたケース
  let teki1kinomiDisplay1 = "";
  let teki1kinomiDisplay2 = "";
  let teki1kinomiDisplay3 = "";
  let teki1kinomiDisplay4 = "";
  //敵2の持ち物が半減きのみで自分が攻撃をしたケース
  let teki2kinomiDisplay1 = "";
  let teki2kinomiDisplay2 = "";
  let teki2kinomiDisplay3 = "";
  let teki2kinomiDisplay4 = "";
  //敵3の持ち物が半減きのみで自分が攻撃をしたケース
  let teki3kinomiDisplay1 = "";
  let teki3kinomiDisplay2 = "";
  let teki3kinomiDisplay3 = "";
  let teki3kinomiDisplay4 = "";
  //敵4の持ち物が半減きのみで自分が攻撃をしたケース
  let teki4kinomiDisplay1 = "";
  let teki4kinomiDisplay2 = "";
  let teki4kinomiDisplay3 = "";
  let teki4kinomiDisplay4 = "";

  if (tekiItem1_tab3 === "イトケのみ") {
    if (wtype1 === "みず") {
      teki1kinomiDisplay1 = "[イトケ]";

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S1 = Math.floor((calc4P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
    }
    if (wtype2 === "みず") {
      teki1kinomiDisplay2 = "[イトケ]";

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S1 = Math.floor((calc4P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
    }
    if (wtype3 === "みず") {
      teki1kinomiDisplay3 = "[イトケ]";

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S1 = Math.floor((calc4P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
    }
    if (wtype4 === "みず") {
      teki1kinomiDisplay4 = "[イトケ]";

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S1 = Math.floor((calc4P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
    }
  }

  if (tekiItem2_tab3 === "イトケのみ") {
    if (wtype1 === "みず") {
      teki2kinomiDisplay1 = "[イトケ]";

      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
    }
    if (wtype2 === "みず") {
      teki2kinomiDisplay2 = "[イトケ]";

      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
    }
    if (wtype3 === "みず") {
      teki2kinomiDisplay3 = "[イトケ]";

      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
    }
    if (wtype4 === "みず") {
      teki2kinomiDisplay4 = "[イトケ]";

      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
    }
  }

  if (tekiItem3_tab3 === "イトケのみ") {
    if (wtype1 === "みず") {
      teki3kinomiDisplay1 = "[イトケ]";

      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
    }
    if (wtype2 === "みず") {
      teki3kinomiDisplay2 = "[イトケ]";

      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
    }
    if (wtype3 === "みず") {
      teki3kinomiDisplay3 = "[イトケ]";

      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
    }
    if (wtype4 === "みず") {
      teki3kinomiDisplay4 = "[イトケ]";

      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
    }
  }

  if (tekiItem4_tab3 === "イトケのみ") {
    if (wtype1 === "みず") {
      teki4kinomiDisplay1 = "[イトケ]";

      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    }
    if (wtype2 === "みず") {
      teki4kinomiDisplay2 = "[イトケ]";

      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    }
    if (wtype3 === "みず") {
      teki4kinomiDisplay3 = "[イトケ]";

      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    }
    if (wtype4 === "みず") {
      teki4kinomiDisplay4 = "[イトケ]";

      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  if (tekiItem1_tab3 === "ウタンのみ") {
    if (wtype1 === "エスパー") {
      teki1kinomiDisplay1 = "[ウタン]";

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S1 = Math.floor((calc4P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
    }
    if (wtype2 === "エスパー") {
      teki1kinomiDisplay2 = "[ウタン]";

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S1 = Math.floor((calc4P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
    }
    if (wtype3 === "エスパー") {
      teki1kinomiDisplay3 = "[ウタン]";

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S1 = Math.floor((calc4P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
    }
    if (wtype4 === "エスパー") {
      teki1kinomiDisplay4 = "[ウタン]";

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S1 = Math.floor((calc4P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
    }
  }
  if (tekiItem2_tab3 === "ウタンのみ") {
    if (wtype1 === "エスパー") {
      teki2kinomiDisplay1 = "[ウタン]";

      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
    }
    if (wtype2 === "エスパー") {
      teki2kinomiDisplay2 = "[ウタン]";

      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
    }
    if (wtype3 === "エスパー") {
      teki2kinomiDisplay3 = "[ウタン]";

      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
    }
    if (wtype4 === "エスパー") {
      teki2kinomiDisplay4 = "[ウタン]";

      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
    }
  }
  if (tekiItem3_tab3 === "ウタンのみ") {
    if (wtype1 === "エスパー") {
      teki3kinomiDisplay1 = "[ウタン]";

      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
    }
    if (wtype2 === "エスパー") {
      teki3kinomiDisplay2 = "[ウタン]";

      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
    }
    if (wtype3 === "エスパー") {
      teki3kinomiDisplay3 = "[ウタン]";

      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
    }
    if (wtype4 === "エスパー") {
      teki3kinomiDisplay4 = "[ウタン]";

      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
    }
  }
  if (tekiItem4_tab3 === "ウタンのみ") {
    if (wtype1 === "エスパー") {
      teki4kinomiDisplay1 = "[ウタン]";

      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    }
    if (wtype2 === "エスパー") {
      teki4kinomiDisplay2 = "[ウタン]";

      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    }
    if (wtype3 === "エスパー") {
      teki4kinomiDisplay3 = "[ウタン]";

      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    }
    if (wtype4 === "エスパー") {
      teki4kinomiDisplay4 = "[ウタン]";

      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  if (tekiItem1_tab3 === "オッカのみ") {
    if (wtype1 === "ほのお") {
      teki1kinomiDisplay1 = "[オッカ]";

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S1 = Math.floor((calc4P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
    }
    if (wtype2 === "ほのお") {
      teki1kinomiDisplay2 = "[オッカ]";

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S1 = Math.floor((calc4P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
    }
    if (wtype3 === "ほのお") {
      teki1kinomiDisplay3 = "[オッカ]";

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S1 = Math.floor((calc4P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
    }
    if (wtype4 === "ほのお") {
      teki1kinomiDisplay4 = "[オッカ]";

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S1 = Math.floor((calc4P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
    }
  }
  if (tekiItem2_tab3 === "オッカのみ") {
    if (wtype1 === "ほのお") {
      teki2kinomiDisplay1 = "[オッカ]";

      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
    }
    if (wtype2 === "ほのお") {
      teki2kinomiDisplay2 = "[オッカ]";

      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
    }
    if (wtype3 === "ほのお") {
      teki2kinomiDisplay3 = "[オッカ]";

      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
    }
    if (wtype4 === "ほのお") {
      teki2kinomiDisplay4 = "[オッカ]";

      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
    }
  }
  if (tekiItem3_tab3 === "オッカのみ") {
    if (wtype1 === "ほのお") {
      teki3kinomiDisplay1 = "[オッカ]";

      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
    }
    if (wtype2 === "ほのお") {
      teki3kinomiDisplay2 = "[オッカ]";

      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
    }
    if (wtype3 === "ほのお") {
      teki3kinomiDisplay3 = "[オッカ]";

      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
    }
    if (wtype4 === "ほのお") {
      teki3kinomiDisplay4 = "[オッカ]";

      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
    }
  }
  if (tekiItem4_tab3 === "オッカのみ") {
    if (wtype1 === "ほのお") {
      teki4kinomiDisplay1 = "[オッカ]";

      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    }
    if (wtype2 === "ほのお") {
      teki4kinomiDisplay2 = "[オッカ]";

      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    }
    if (wtype3 === "ほのお") {
      teki4kinomiDisplay3 = "[オッカ]";

      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    }
    if (wtype4 === "ほのお") {
      teki4kinomiDisplay4 = "[オッカ]";

      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  if (tekiItem1_tab3 === "シュカのみ") {
    if (wtype1 === "じめん") {
      teki1kinomiDisplay1 = "[シュカ]";

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S1 = Math.floor((calc4P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
    }
    if (wtype2 === "じめん") {
      teki1kinomiDisplay2 = "[シュカ]";

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S1 = Math.floor((calc4P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
    }
    if (wtype3 === "じめん") {
      teki1kinomiDisplay3 = "[シュカ]";

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S1 = Math.floor((calc4P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
    }
    if (wtype4 === "じめん") {
      teki1kinomiDisplay4 = "[シュカ]";

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S1 = Math.floor((calc4P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
    }
  }

  if (tekiItem2_tab3 === "シュカのみ") {
    if (wtype1 === "じめん") {
      teki2kinomiDisplay1 = "[シュカ]";

      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
    }
    if (wtype2 === "じめん") {
      teki2kinomiDisplay2 = "[シュカ]";

      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
    }
    if (wtype3 === "じめん") {
      teki2kinomiDisplay3 = "[シュカ]";

      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
    }
    if (wtype4 === "じめん") {
      teki2kinomiDisplay4 = "[シュカ]";

      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
    }
  }

  if (tekiItem3_tab3 === "シュカのみ") {
    if (wtype1 === "じめん") {
      teki3kinomiDisplay1 = "[シュカ]";

      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
    }
    if (wtype2 === "じめん") {
      teki3kinomiDisplay2 = "[シュカ]";

      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
    }
    if (wtype3 === "じめん") {
      teki3kinomiDisplay3 = "[シュカ]";

      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
    }
    if (wtype4 === "じめん") {
      teki3kinomiDisplay4 = "[シュカ]";

      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
    }
  }

  if (tekiItem4_tab3 === "シュカのみ") {
    if (wtype1 === "じめん") {
      teki4kinomiDisplay1 = "[シュカ]";

      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    }
    if (wtype2 === "じめん") {
      teki4kinomiDisplay2 = "[シュカ]";

      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    }
    if (wtype3 === "じめん") {
      teki4kinomiDisplay3 = "[シュカ]";

      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    }
    if (wtype4 === "じめん") {
      teki4kinomiDisplay4 = "[シュカ]";

      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  if (tekiItem1_tab3 === "ソクノのみ") {
    if (wtype1 === "でんき") {
      teki1kinomiDisplay1 = "[ソクノ]";

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S1 = Math.floor((calc4P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
    }
    if (wtype2 === "でんき") {
      teki1kinomiDisplay2 = "[ソクノ]";

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S1 = Math.floor((calc4P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
    }
    if (wtype3 === "でんき") {
      teki1kinomiDisplay3 = "[ソクノ]";

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S1 = Math.floor((calc4P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
    }
    if (wtype4 === "でんき") {
      teki1kinomiDisplay4 = "[ソクノ]";

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S1 = Math.floor((calc4P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
    }
  }
  if (tekiItem2_tab3 === "ソクノのみ") {
    if (wtype1 === "でんき") {
      teki2kinomiDisplay1 = "[ソクノ]";

      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
    }
    if (wtype2 === "でんき") {
      teki2kinomiDisplay2 = "[ソクノ]";

      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
    }
    if (wtype3 === "でんき") {
      teki2kinomiDisplay3 = "[ソクノ]";

      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
    }
    if (wtype4 === "でんき") {
      teki2kinomiDisplay4 = "[ソクノ]";

      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
    }
  }
  if (tekiItem3_tab3 === "ソクノのみ") {
    if (wtype1 === "でんき") {
      teki3kinomiDisplay1 = "[ソクノ]";

      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
    }
    if (wtype2 === "でんき") {
      teki3kinomiDisplay2 = "[ソクノ]";

      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
    }
    if (wtype3 === "でんき") {
      teki3kinomiDisplay3 = "[ソクノ]";

      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
    }
    if (wtype4 === "でんき") {
      teki3kinomiDisplay4 = "[ソクノ]";

      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
    }
  }
  if (tekiItem4_tab3 === "ソクノのみ") {
    if (wtype1 === "でんき") {
      teki4kinomiDisplay1 = "[ソクノ]";

      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    }
    if (wtype2 === "でんき") {
      teki4kinomiDisplay2 = "[ソクノ]";

      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    }
    if (wtype3 === "でんき") {
      teki4kinomiDisplay3 = "[ソクノ]";

      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    }
    if (wtype4 === "でんき") {
      teki4kinomiDisplay4 = "[ソクノ]";

      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  if (tekiItem1_tab3 === "ナモのみ") {
    if (wtype1 === "あく") {
      teki1kinomiDisplay1 = "[ナモ]";

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S1 = Math.floor((calc4P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
    }
    if (wtype2 === "あく") {
      teki1kinomiDisplay2 = "[ナモ]";

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S1 = Math.floor((calc4P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
    }
    if (wtype3 === "あく") {
      teki1kinomiDisplay3 = "[ナモ]";

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S1 = Math.floor((calc4P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
    }
    if (wtype4 === "あく") {
      teki1kinomiDisplay4 = "[ナモ]";

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S1 = Math.floor((calc4P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
    }
  }
  if (tekiItem2_tab3 === "ナモのみ") {
    if (wtype1 === "あく") {
      teki2kinomiDisplay1 = "[ナモ]";

      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
    }
    if (wtype2 === "あく") {
      teki2kinomiDisplay2 = "[ナモ]";

      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
    }
    if (wtype3 === "あく") {
      teki2kinomiDisplay3 = "[ナモ]";

      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
    }
    if (wtype4 === "あく") {
      teki2kinomiDisplay4 = "[ナモ]";

      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
    }
  }
  if (tekiItem3_tab3 === "ナモのみ") {
    if (wtype1 === "あく") {
      teki3kinomiDisplay1 = "[ナモ]";

      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
    }
    if (wtype2 === "あく") {
      teki3kinomiDisplay2 = "[ナモ]";

      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
    }
    if (wtype3 === "あく") {
      teki3kinomiDisplay3 = "[ナモ]";

      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
    }
    if (wtype4 === "あく") {
      teki3kinomiDisplay4 = "[ナモ]";

      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
    }
  }
  if (tekiItem4_tab3 === "ナモのみ") {
    if (wtype1 === "あく") {
      teki4kinomiDisplay1 = "[ナモ]";

      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    }
    if (wtype2 === "あく") {
      teki4kinomiDisplay2 = "[ナモ]";

      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    }
    if (wtype3 === "あく") {
      teki4kinomiDisplay3 = "[ナモ]";

      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    }
    if (wtype4 === "あく") {
      teki4kinomiDisplay4 = "[ナモ]";

      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  if (tekiItem1_tab3 === "バコウのみ") {
    if (wtype1 === "ひこう") {
      teki1kinomiDisplay1 = "[バコウ]";

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S1 = Math.floor((calc4P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
    }
    if (wtype2 === "ひこう") {
      teki1kinomiDisplay2 = "[バコウ]";

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S1 = Math.floor((calc4P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
    }
    if (wtype3 === "ひこう") {
      teki1kinomiDisplay3 = "[バコウ]";

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S1 = Math.floor((calc4P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
    }
    if (wtype4 === "ひこう") {
      teki1kinomiDisplay4 = "[バコウ]";

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S1 = Math.floor((calc4P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
    }
  }
  if (tekiItem2_tab3 === "バコウのみ") {
    if (wtype1 === "ひこう") {
      teki2kinomiDisplay1 = "[バコウ]";

      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
    }
    if (wtype2 === "ひこう") {
      teki2kinomiDisplay2 = "[バコウ]";

      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
    }
    if (wtype3 === "ひこう") {
      teki2kinomiDisplay3 = "[バコウ]";

      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
    }
    if (wtype4 === "ひこう") {
      teki2kinomiDisplay4 = "[バコウ]";

      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
    }
  }
  if (tekiItem3_tab3 === "バコウのみ") {
    if (wtype1 === "ひこう") {
      teki3kinomiDisplay1 = "[バコウ]";

      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
    }
    if (wtype2 === "ひこう") {
      teki3kinomiDisplay2 = "[バコウ]";

      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
    }
    if (wtype3 === "ひこう") {
      teki3kinomiDisplay3 = "[バコウ]";

      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
    }
    if (wtype4 === "ひこう") {
      teki3kinomiDisplay4 = "[バコウ]";

      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
    }
  }
  if (tekiItem4_tab3 === "バコウのみ") {
    if (wtype1 === "ひこう") {
      teki4kinomiDisplay1 = "[バコウ]";

      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    }
    if (wtype2 === "ひこう") {
      teki4kinomiDisplay2 = "[バコウ]";

      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    }
    if (wtype3 === "ひこう") {
      teki4kinomiDisplay3 = "[バコウ]";

      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    }
    if (wtype4 === "ひこう") {
      teki4kinomiDisplay4 = "[バコウ]";

      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  if (tekiItem1_tab3 === "ハバンのみ") {
    if (wtype1 === "ドラゴン") {
      teki1kinomiDisplay1 = "[ハバン]";

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S1 = Math.floor((calc4P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
    }
    if (wtype2 === "ドラゴン") {
      teki1kinomiDisplay2 = "[ハバン]";

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S1 = Math.floor((calc4P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
    }
    if (wtype3 === "ドラゴン") {
      teki1kinomiDisplay3 = "[ハバン]";

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S1 = Math.floor((calc4P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
    }
    if (wtype4 === "ドラゴン") {
      teki1kinomiDisplay4 = "[ハバン]";

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S1 = Math.floor((calc4P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
    }
  }
  if (tekiItem2_tab3 === "ハバンのみ") {
    if (wtype1 === "ドラゴン") {
      teki2kinomiDisplay1 = "[ハバン]";

      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
    }
    if (wtype2 === "ドラゴン") {
      teki2kinomiDisplay2 = "[ハバン]";

      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
    }
    if (wtype3 === "ドラゴン") {
      teki2kinomiDisplay3 = "[ハバン]";

      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
    }
    if (wtype4 === "ドラゴン") {
      teki2kinomiDisplay4 = "[ハバン]";

      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
    }
  }
  if (tekiItem3_tab3 === "ハバンのみ") {
    if (wtype1 === "ドラゴン") {
      teki3kinomiDisplay1 = "[ハバン]";

      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
    }
    if (wtype2 === "ドラゴン") {
      teki3kinomiDisplay2 = "[ハバン]";

      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
    }
    if (wtype3 === "ドラゴン") {
      teki3kinomiDisplay3 = "[ハバン]";

      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
    }
    if (wtype4 === "ドラゴン") {
      teki3kinomiDisplay4 = "[ハバン]";

      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
    }
  }
  if (tekiItem4_tab3 === "ハバンのみ") {
    if (wtype1 === "ドラゴン") {
      teki4kinomiDisplay1 = "[ハバン]";

      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    }
    if (wtype2 === "ドラゴン") {
      teki4kinomiDisplay2 = "[ハバン]";

      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    }
    if (wtype3 === "ドラゴン") {
      teki4kinomiDisplay3 = "[ハバン]";

      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    }
    if (wtype4 === "ドラゴン") {
      teki4kinomiDisplay4 = "[ハバン]";

      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  if (tekiItem1_tab3 === "ヤチェのみ") {
    if (wtype1 === "こおり") {
      teki1kinomiDisplay1 = "[ヤチェ]";

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S1 = Math.floor((calc4P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
    }
    if (wtype2 === "こおり") {
      teki1kinomiDisplay2 = "[ヤチェ]";

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S1 = Math.floor((calc4P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
    }
    if (wtype3 === "こおり") {
      teki1kinomiDisplay3 = "[ヤチェ]";

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S1 = Math.floor((calc4P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
    }
    if (wtype4 === "こおり") {
      teki1kinomiDisplay4 = "[ヤチェ]";

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S1 = Math.floor((calc4P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
    }
  }
  if (tekiItem2_tab3 === "ヤチェのみ") {
    if (wtype1 === "こおり") {
      teki2kinomiDisplay1 = "[ヤチェ]";

      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
    }
    if (wtype2 === "こおり") {
      teki2kinomiDisplay2 = "[ヤチェ]";

      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
    }
    if (wtype3 === "こおり") {
      teki2kinomiDisplay3 = "[ヤチェ]";

      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
    }
    if (wtype4 === "こおり") {
      teki2kinomiDisplay4 = "[ヤチェ]";

      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
    }
  }
  if (tekiItem3_tab3 === "ヤチェのみ") {
    if (wtype1 === "こおり") {
      teki3kinomiDisplay1 = "[ヤチェ]";

      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
    }
    if (wtype2 === "こおり") {
      teki3kinomiDisplay2 = "[ヤチェ]";

      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
    }
    if (wtype3 === "こおり") {
      teki3kinomiDisplay3 = "[ヤチェ]";

      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
    }
    if (wtype4 === "こおり") {
      teki3kinomiDisplay4 = "[ヤチェ]";

      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
    }
  }
  if (tekiItem4_tab3 === "ヤチェのみ") {
    if (wtype1 === "こおり") {
      teki4kinomiDisplay1 = "[ヤチェ]";

      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    }
    if (wtype2 === "こおり") {
      teki4kinomiDisplay2 = "[ヤチェ]";

      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    }
    if (wtype3 === "こおり") {
      teki4kinomiDisplay3 = "[ヤチェ]";

      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    }
    if (wtype4 === "こおり") {
      teki4kinomiDisplay4 = "[ヤチェ]";

      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  if (tekiItem1_tab3 === "ヨプのみ") {
    if (wtype1 === "かくとう") {
      teki1kinomiDisplay1 = "[ヨプ]";

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S1 = Math.floor((calc4P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
    }
    if (wtype2 === "かくとう") {
      teki1kinomiDisplay2 = "[ヨプ]";

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S1 = Math.floor((calc4P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
    }
    if (wtype3 === "かくとう") {
      teki1kinomiDisplay3 = "[ヨプ]";

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S1 = Math.floor((calc4P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
    }
    if (wtype4 === "かくとう") {
      teki1kinomiDisplay4 = "[ヨプ]";

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S1 = Math.floor((calc4P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
    }
  }
  if (tekiItem2_tab3 === "ヨプのみ") {
    if (wtype1 === "かくとう") {
      teki2kinomiDisplay1 = "[ヨプ]";

      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
    }
    if (wtype2 === "かくとう") {
      teki2kinomiDisplay2 = "[ヨプ]";

      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
    }
    if (wtype3 === "かくとう") {
      teki2kinomiDisplay3 = "[ヨプ]";

      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
    }
    if (wtype4 === "かくとう") {
      teki2kinomiDisplay4 = "[ヨプ]";

      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
    }
  }
  if (tekiItem3_tab3 === "ヨプのみ") {
    if (wtype1 === "かくとう") {
      teki3kinomiDisplay1 = "[ヨプ]";

      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
    }
    if (wtype2 === "かくとう") {
      teki3kinomiDisplay2 = "[ヨプ]";

      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
    }
    if (wtype3 === "かくとう") {
      teki3kinomiDisplay3 = "[ヨプ]";

      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
    }
    if (wtype4 === "かくとう") {
      teki3kinomiDisplay4 = "[ヨプ]";

      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
    }
  }
  if (tekiItem4_tab3 === "ヨプのみ") {
    if (wtype1 === "かくとう") {
      teki4kinomiDisplay1 = "[ヨプ]";

      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    }
    if (wtype2 === "かくとう") {
      teki4kinomiDisplay2 = "[ヨプ]";

      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    }
    if (wtype3 === "かくとう") {
      teki4kinomiDisplay3 = "[ヨプ]";

      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    }
    if (wtype4 === "かくとう") {
      teki4kinomiDisplay4 = "[ヨプ]";

      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  if (tekiItem1_tab3 === "ヨロギのみ") {
    if (wtype1 === "いわ") {
      teki1kinomiDisplay1 = "[ヨロギ]";

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S1 = Math.floor((calc4P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
    }
    if (wtype2 === "いわ") {
      teki1kinomiDisplay2 = "[ヨロギ]";

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S1 = Math.floor((calc4P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
    }
    if (wtype3 === "いわ") {
      teki1kinomiDisplay3 = "[ヨロギ]";

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S1 = Math.floor((calc4P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
    }
    if (wtype4 === "いわ") {
      teki1kinomiDisplay4 = "[ヨロギ]";

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S1 = Math.floor((calc4P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
    }
  }
  if (tekiItem2_tab3 === "ヨロギのみ") {
    if (wtype1 === "いわ") {
      teki2kinomiDisplay1 = "[ヨロギ]";

      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
    }
    if (wtype2 === "いわ") {
      teki2kinomiDisplay2 = "[ヨロギ]";

      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
    }
    if (wtype3 === "いわ") {
      teki2kinomiDisplay3 = "[ヨロギ]";

      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
    }
    if (wtype4 === "いわ") {
      teki2kinomiDisplay4 = "[ヨロギ]";

      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
    }
  }
  if (tekiItem3_tab3 === "ヨロギのみ") {
    if (wtype1 === "いわ") {
      teki3kinomiDisplay1 = "[ヨロギ]";

      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
    }
    if (wtype2 === "いわ") {
      teki3kinomiDisplay2 = "[ヨロギ]";

      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
    }
    if (wtype3 === "いわ") {
      teki3kinomiDisplay3 = "[ヨロギ]";

      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
    }
    if (wtype4 === "いわ") {
      teki3kinomiDisplay4 = "[ヨロギ]";

      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
    }
  }
  if (tekiItem4_tab3 === "ヨロギのみ") {
    if (wtype1 === "いわ") {
      teki4kinomiDisplay1 = "[ヨロギ]";

      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    }
    if (wtype2 === "いわ") {
      teki4kinomiDisplay2 = "[ヨロギ]";

      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    }
    if (wtype3 === "いわ") {
      teki4kinomiDisplay3 = "[ヨロギ]";

      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    }
    if (wtype4 === "いわ") {
      teki4kinomiDisplay4 = "[ヨロギ]";

      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  if (tekiItem1_tab3 === "リンドのみ") {
    if (wtype1 === "くさ") {
      teki1kinomiDisplay1 = "[リンド]";

      calc4P1_S1Critical = Math.floor((calc4P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S1 = Math.floor((calc4P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power1Critical = Math.floor((calc4KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS1Power1 = Math.floor((calc4KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3P1_S1Critical = Math.floor((calc3P1_S1Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S1 = Math.floor((calc3P1_S1 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power1Critical = Math.floor((calc3KS1Power1Critical * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS1Power1 = Math.floor((calc3KS1Power1 * 50) / 100); //自分ポケ技1が敵型1への（補正あり）威力
    }
    if (wtype2 === "くさ") {
      teki1kinomiDisplay2 = "[リンド]";

      calc4P2_S1Critical = Math.floor((calc4P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S1 = Math.floor((calc4P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power2Critical = Math.floor((calc4KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS1Power2 = Math.floor((calc4KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3P2_S1Critical = Math.floor((calc3P2_S1Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S1 = Math.floor((calc3P2_S1 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power2Critical = Math.floor((calc3KS1Power2Critical * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS1Power2 = Math.floor((calc3KS1Power2 * 50) / 100); //自分ポケ技2が敵型1への（補正あり）威力
    }
    if (wtype3 === "くさ") {
      teki1kinomiDisplay3 = "[リンド]";

      calc4P3_S1Critical = Math.floor((calc4P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S1 = Math.floor((calc4P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power3Critical = Math.floor((calc4KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS1Power3 = Math.floor((calc4KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3P3_S1Critical = Math.floor((calc3P3_S1Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S1 = Math.floor((calc3P3_S1 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power3Critical = Math.floor((calc3KS1Power3Critical * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS1Power3 = Math.floor((calc3KS1Power3 * 50) / 100); //自分ポケ技3が敵型1への（補正あり）威力
    }
    if (wtype4 === "くさ") {
      teki1kinomiDisplay4 = "[リンド]";

      calc4P4_S1Critical = Math.floor((calc4P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S1 = Math.floor((calc4P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4KS1Power4Critical = Math.floor((calc4KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS1Power4 = Math.floor((calc4KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3P4_S1Critical = Math.floor((calc3P4_S1Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S1 = Math.floor((calc3P4_S1 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3KS1Power4Critical = Math.floor((calc3KS1Power4Critical * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS1Power4 = Math.floor((calc3KS1Power4 * 50) / 100); //自分ポケ技4が敵型1への（補正あり）威力
    }
  }
  if (tekiItem2_tab3 === "リンドのみ") {
    if (wtype1 === "くさ") {
      teki2kinomiDisplay1 = "[リンド]";

      calc4P1_S2Critical = Math.floor((calc4P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S2 = Math.floor((calc4P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power1Critical = Math.floor((calc4KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS2Power1 = Math.floor((calc4KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3P1_S2Critical = Math.floor((calc3P1_S2Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S2 = Math.floor((calc3P1_S2 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power1Critical = Math.floor((calc3KS2Power1Critical * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS2Power1 = Math.floor((calc3KS2Power1 * 50) / 100); //自分ポケ技1が敵型2への（補正あり）威力
    }
    if (wtype2 === "くさ") {
      teki2kinomiDisplay2 = "[リンド]";

      calc4P2_S2Critical = Math.floor((calc4P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S2 = Math.floor((calc4P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power2Critical = Math.floor((calc4KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS2Power2 = Math.floor((calc4KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3P2_S2Critical = Math.floor((calc3P2_S2Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S2 = Math.floor((calc3P2_S2 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power2Critical = Math.floor((calc3KS2Power2Critical * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS2Power2 = Math.floor((calc3KS2Power2 * 50) / 100); //自分ポケ技2が敵型2への（補正あり）威力
    }
    if (wtype3 === "くさ") {
      teki2kinomiDisplay3 = "[リンド]";

      calc4P3_S2Critical = Math.floor((calc4P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S2 = Math.floor((calc4P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power3Critical = Math.floor((calc4KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS2Power3 = Math.floor((calc4KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3P3_S2Critical = Math.floor((calc3P3_S2Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S2 = Math.floor((calc3P3_S2 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power3Critical = Math.floor((calc3KS2Power3Critical * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS2Power3 = Math.floor((calc3KS2Power3 * 50) / 100); //自分ポケ技3が敵型2への（補正あり）威力
    }
    if (wtype4 === "くさ") {
      teki2kinomiDisplay4 = "[リンド]";

      calc4P4_S2Critical = Math.floor((calc4P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S2 = Math.floor((calc4P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4KS2Power4Critical = Math.floor((calc4KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS2Power4 = Math.floor((calc4KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3P4_S2Critical = Math.floor((calc3P4_S2Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S2 = Math.floor((calc3P4_S2 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3KS2Power4Critical = Math.floor((calc3KS2Power4Critical * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS2Power4 = Math.floor((calc3KS2Power4 * 50) / 100); //自分ポケ技4が敵型2への（補正あり）威力
    }
  }
  if (tekiItem3_tab3 === "リンドのみ") {
    if (wtype1 === "くさ") {
      teki3kinomiDisplay1 = "[リンド]";

      calc4P1_S3Critical = Math.floor((calc4P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S3 = Math.floor((calc4P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power1Critical = Math.floor((calc4KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS3Power1 = Math.floor((calc4KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3P1_S3Critical = Math.floor((calc3P1_S3Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S3 = Math.floor((calc3P1_S3 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power1Critical = Math.floor((calc3KS3Power1Critical * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS3Power1 = Math.floor((calc3KS3Power1 * 50) / 100); //自分ポケ技1が敵型3への（補正あり）威力
    }
    if (wtype2 === "くさ") {
      teki3kinomiDisplay2 = "[リンド]";

      calc4P2_S3Critical = Math.floor((calc4P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S3 = Math.floor((calc4P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power2Critical = Math.floor((calc4KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS3Power2 = Math.floor((calc4KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3P2_S3Critical = Math.floor((calc3P2_S3Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S3 = Math.floor((calc3P2_S3 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power2Critical = Math.floor((calc3KS3Power2Critical * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS3Power2 = Math.floor((calc3KS3Power2 * 50) / 100); //自分ポケ技2が敵型3への（補正あり）威力
    }
    if (wtype3 === "くさ") {
      teki3kinomiDisplay3 = "[リンド]";

      calc4P3_S3Critical = Math.floor((calc4P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S3 = Math.floor((calc4P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power3Critical = Math.floor((calc4KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS3Power3 = Math.floor((calc4KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3P3_S3Critical = Math.floor((calc3P3_S3Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S3 = Math.floor((calc3P3_S3 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power3Critical = Math.floor((calc3KS3Power3Critical * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS3Power3 = Math.floor((calc3KS3Power3 * 50) / 100); //自分ポケ技3が敵型3への（補正あり）威力
    }
    if (wtype4 === "くさ") {
      teki3kinomiDisplay4 = "[リンド]";

      calc4P4_S3Critical = Math.floor((calc4P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S3 = Math.floor((calc4P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4KS3Power4Critical = Math.floor((calc4KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS3Power4 = Math.floor((calc4KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3P4_S3Critical = Math.floor((calc3P4_S3Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S3 = Math.floor((calc3P4_S3 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3KS3Power4Critical = Math.floor((calc3KS3Power4Critical * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS3Power4 = Math.floor((calc3KS3Power4 * 50) / 100); //自分ポケ技4が敵型3への（補正あり）威力
    }
  }
  if (tekiItem4_tab3 === "リンドのみ") {
    if (wtype1 === "くさ") {
      teki4kinomiDisplay1 = "[リンド]";

      calc4P1_S4Critical = Math.floor((calc4P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4P1_S4 = Math.floor((calc4P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power1Critical = Math.floor((calc4KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc4KS4Power1 = Math.floor((calc4KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3P1_S4Critical = Math.floor((calc3P1_S4Critical * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3P1_S4 = Math.floor((calc3P1_S4 * 50) / 100); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power1Critical = Math.floor((calc3KS4Power1Critical * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
      calc3KS4Power1 = Math.floor((calc3KS4Power1 * 50) / 100); //自分ポケ技1が敵型4への（補正あり）威力
    }
    if (wtype2 === "くさ") {
      teki4kinomiDisplay2 = "[リンド]";

      calc4P2_S4Critical = Math.floor((calc4P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4P2_S4 = Math.floor((calc4P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power2Critical = Math.floor((calc4KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc4KS4Power2 = Math.floor((calc4KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3P2_S4Critical = Math.floor((calc3P2_S4Critical * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3P2_S4 = Math.floor((calc3P2_S4 * 50) / 100); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power2Critical = Math.floor((calc3KS4Power2Critical * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
      calc3KS4Power2 = Math.floor((calc3KS4Power2 * 50) / 100); //自分ポケ技2が敵型4への（補正あり）威力
    }
    if (wtype3 === "くさ") {
      teki4kinomiDisplay3 = "[リンド]";

      calc4P3_S4Critical = Math.floor((calc4P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4P3_S4 = Math.floor((calc4P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power3Critical = Math.floor((calc4KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc4KS4Power3 = Math.floor((calc4KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3P3_S4Critical = Math.floor((calc3P3_S4Critical * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3P3_S4 = Math.floor((calc3P3_S4 * 50) / 100); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power3Critical = Math.floor((calc3KS4Power3Critical * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
      calc3KS4Power3 = Math.floor((calc3KS4Power3 * 50) / 100); //自分ポケ技3が敵型4への（補正あり）威力
    }
    if (wtype4 === "くさ") {
      teki4kinomiDisplay4 = "[リンド]";

      calc4P4_S4Critical = Math.floor((calc4P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4P4_S4 = Math.floor((calc4P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc4KS4Power4Critical = Math.floor((calc4KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc4KS4Power4 = Math.floor((calc4KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3P4_S4Critical = Math.floor((calc3P4_S4Critical * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3P4_S4 = Math.floor((calc3P4_S4 * 50) / 100); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力
      calc3KS4Power4Critical = Math.floor((calc3KS4Power4Critical * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
      calc3KS4Power4 = Math.floor((calc3KS4Power4 * 50) / 100); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  if (myItem_tab3 === "イトケのみ") {
    if (wtype1S1 === "みず") {
      myKinomiDisplayS1W1 = "[イトケ]";

      calc4P1S1 = Math.floor((calc4P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S1 === "みず") {
      myKinomiDisplayS1W2 = "[イトケ]";

      //敵型1技2
      calc4P2S1 = Math.floor((calc4P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S1 === "みず") {
      myKinomiDisplayS1W3 = "[イトケ]";

      //敵型1技3
      calc4P3S1 = Math.floor((calc4P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S1 === "みず") {
      myKinomiDisplayS1W4 = "[イトケ]";

      //敵型1技4
      calc4P4S1 = Math.floor((calc4P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S2 === "みず") {
      myKinomiDisplayS2W1 = "[イトケ]";

      calc4P1S2 = Math.floor((calc4P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S2 === "みず") {
      myKinomiDisplayS2W2 = "[イトケ]";

      //敵型2技2
      calc4P2S2 = Math.floor((calc4P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S2 === "みず") {
      myKinomiDisplayS2W3 = "[イトケ]";

      //敵型2技3
      calc4P3S2 = Math.floor((calc4P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S2 === "みず") {
      myKinomiDisplayS2W4 = "[イトケ]";

      calc4P4S2 = Math.floor((calc4P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S3 === "みず") {
      myKinomiDisplayS3W1 = "[イトケ]";

      calc4P1S3 = Math.floor((calc4P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S3 === "みず") {
      myKinomiDisplayS3W2 = "[イトケ]";

      //敵型3技2
      calc4P2S3 = Math.floor((calc4P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S3 === "みず") {
      myKinomiDisplayS3W3 = "[イトケ]";

      //敵型3技3
      calc4P3S3 = Math.floor((calc4P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S3 === "みず") {
      myKinomiDisplayS3W4 = "[イトケ]";

      //敵型3技4
      calc4P4S3 = Math.floor((calc4P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S4 === "みず") {
      myKinomiDisplayS4W1 = "[イトケ]";

      calc4P1S4 = Math.floor((calc4P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S4 === "みず") {
      myKinomiDisplayS4W2 = "[イトケ]";

      //敵型4技2
      calc4P2S4 = Math.floor((calc4P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S4 === "みず") {
      myKinomiDisplayS4W3 = "[イトケ]";

      //敵型4技3
      calc4P3S4 = Math.floor((calc4P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S4 === "みず") {
      myKinomiDisplayS4W4 = "[イトケ]";

      //敵型4技4
      calc4P4S4 = Math.floor((calc4P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }
  if (myItem_tab3 === "ウタンのみ") {
    if (wtype1S1 === "エスパー") {
      myKinomiDisplayS1W1 = "[ウタン]";

      calc4P1S1 = Math.floor((calc4P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S1 === "エスパー") {
      myKinomiDisplayS1W2 = "[ウタン]";

      //敵型1技2
      calc4P2S1 = Math.floor((calc4P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S1 === "エスパー") {
      myKinomiDisplayS1W3 = "[ウタン]";

      //敵型1技3
      calc4P3S1 = Math.floor((calc4P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S1 === "エスパー") {
      myKinomiDisplayS1W4 = "[ウタン]";

      //敵型1技4
      calc4P4S1 = Math.floor((calc4P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S2 === "エスパー") {
      myKinomiDisplayS2W1 = "[ウタン]";

      calc4P1S2 = Math.floor((calc4P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S2 === "エスパー") {
      myKinomiDisplayS2W2 = "[ウタン]";

      //敵型2技2
      calc4P2S2 = Math.floor((calc4P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S2 === "エスパー") {
      myKinomiDisplayS2W3 = "[ウタン]";

      //敵型2技3
      calc4P3S2 = Math.floor((calc4P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S2 === "エスパー") {
      myKinomiDisplayS2W4 = "[ウタン]";

      calc4P4S2 = Math.floor((calc4P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S3 === "エスパー") {
      myKinomiDisplayS3W1 = "[ウタン]";

      calc4P1S3 = Math.floor((calc4P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S3 === "エスパー") {
      myKinomiDisplayS3W2 = "[ウタン]";

      //敵型3技2
      calc4P2S3 = Math.floor((calc4P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S3 === "エスパー") {
      myKinomiDisplayS3W3 = "[ウタン]";

      //敵型3技3
      calc4P3S3 = Math.floor((calc4P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S3 === "エスパー") {
      myKinomiDisplayS3W4 = "[ウタン]";

      //敵型3技4
      calc4P4S3 = Math.floor((calc4P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S4 === "エスパー") {
      myKinomiDisplayS4W1 = "[ウタン]";

      calc4P1S4 = Math.floor((calc4P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S4 === "エスパー") {
      myKinomiDisplayS4W2 = "[ウタン]";

      //敵型4技2
      calc4P2S4 = Math.floor((calc4P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S4 === "エスパー") {
      myKinomiDisplayS4W3 = "[ウタン]";

      //敵型4技3
      calc4P3S4 = Math.floor((calc4P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S4 === "エスパー") {
      myKinomiDisplayS4W4 = "[ウタン]";

      //敵型4技4
      calc4P4S4 = Math.floor((calc4P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }
  if (myItem_tab3 === "オッカのみ") {
    if (wtype1S1 === "ほのお") {
      myKinomiDisplayS1W1 = "[オッカ]";
      calc4P1S1 = Math.floor((calc4P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S1 === "ほのお") {
      myKinomiDisplayS1W2 = "[オッカ]";
      //敵型1技2
      calc4P2S1 = Math.floor((calc4P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S1 === "ほのお") {
      myKinomiDisplayS1W3 = "[オッカ]";
      //敵型1技3
      calc4P3S1 = Math.floor((calc4P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S1 === "ほのお") {
      myKinomiDisplayS1W4 = "[オッカ]";
      //敵型1技4
      calc4P4S1 = Math.floor((calc4P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S2 === "ほのお") {
      myKinomiDisplayS2W1 = "[オッカ]";
      calc4P1S2 = Math.floor((calc4P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S2 === "ほのお") {
      myKinomiDisplayS2W2 = "[オッカ]";
      //敵型2技2
      calc4P2S2 = Math.floor((calc4P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S2 === "ほのお") {
      myKinomiDisplayS2W3 = "[オッカ]";
      //敵型2技3
      calc4P3S2 = Math.floor((calc4P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S2 === "ほのお") {
      myKinomiDisplayS2W4 = "[オッカ]";
      calc4P4S2 = Math.floor((calc4P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S3 === "ほのお") {
      myKinomiDisplayS3W1 = "[オッカ]";
      calc4P1S3 = Math.floor((calc4P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S3 === "ほのお") {
      myKinomiDisplayS3W2 = "[オッカ]";
      //敵型3技2
      calc4P2S3 = Math.floor((calc4P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S3 === "ほのお") {
      myKinomiDisplayS3W3 = "[オッカ]";
      //敵型3技3
      calc4P3S3 = Math.floor((calc4P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S3 === "ほのお") {
      myKinomiDisplayS3W4 = "[オッカ]";
      //敵型3技4
      calc4P4S3 = Math.floor((calc4P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S4 === "ほのお") {
      myKinomiDisplayS4W1 = "[オッカ]";
      calc4P1S4 = Math.floor((calc4P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S4 === "ほのお") {
      myKinomiDisplayS4W2 = "[オッカ]";
      //敵型4技2
      calc4P2S4 = Math.floor((calc4P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S4 === "ほのお") {
      myKinomiDisplayS4W3 = "[オッカ]";
      //敵型4技3
      calc4P3S4 = Math.floor((calc4P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S4 === "ほのお") {
      myKinomiDisplayS4W4 = "[オッカ]";
      //敵型4技4
      calc4P4S4 = Math.floor((calc4P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }
  if (myItem_tab3 === "シュカのみ") {
    if (wtype1S1 === "じめん") {
      myKinomiDisplayS1W1 = "[シュカ]";
      calc4P1S1 = Math.floor((calc4P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S1 === "じめん") {
      myKinomiDisplayS1W2 = "[シュカ]";
      //敵型1技2
      calc4P2S1 = Math.floor((calc4P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S1 === "じめん") {
      myKinomiDisplayS1W3 = "[シュカ]";
      //敵型1技3
      calc4P3S1 = Math.floor((calc4P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S1 === "じめん") {
      myKinomiDisplayS1W4 = "[シュカ]";
      //敵型1技4
      calc4P4S1 = Math.floor((calc4P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S2 === "じめん") {
      myKinomiDisplayS2W1 = "[シュカ]";
      calc4P1S2 = Math.floor((calc4P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S2 === "じめん") {
      myKinomiDisplayS2W2 = "[シュカ]";
      //敵型2技2
      calc4P2S2 = Math.floor((calc4P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S2 === "じめん") {
      myKinomiDisplayS2W3 = "[シュカ]";
      //敵型2技3
      calc4P3S2 = Math.floor((calc4P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S2 === "じめん") {
      myKinomiDisplayS2W4 = "[シュカ]";
      calc4P4S2 = Math.floor((calc4P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S3 === "じめん") {
      myKinomiDisplayS3W1 = "[シュカ]";
      calc4P1S3 = Math.floor((calc4P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S3 === "じめん") {
      myKinomiDisplayS3W2 = "[シュカ]";
      //敵型3技2
      calc4P2S3 = Math.floor((calc4P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S3 === "じめん") {
      myKinomiDisplayS3W3 = "[シュカ]";
      //敵型3技3
      calc4P3S3 = Math.floor((calc4P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S3 === "じめん") {
      myKinomiDisplayS3W4 = "[シュカ]";
      //敵型3技4
      calc4P4S3 = Math.floor((calc4P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S4 === "じめん") {
      myKinomiDisplayS4W1 = "[シュカ]";
      calc4P1S4 = Math.floor((calc4P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S4 === "じめん") {
      myKinomiDisplayS4W2 = "[シュカ]";
      //敵型4技2
      calc4P2S4 = Math.floor((calc4P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S4 === "じめん") {
      myKinomiDisplayS4W3 = "[シュカ]";
      //敵型4技3
      calc4P3S4 = Math.floor((calc4P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S4 === "じめん") {
      myKinomiDisplayS4W4 = "[シュカ]";
      //敵型4技4
      calc4P4S4 = Math.floor((calc4P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }
  if (myItem_tab3 === "ソクノのみ") {
    if (wtype1S1 === "でんき") {
      myKinomiDisplayS1W1 = "[ソクノ]";
      calc4P1S1 = Math.floor((calc4P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S1 === "でんき") {
      myKinomiDisplayS1W2 = "[ソクノ]";
      //敵型1技2
      calc4P2S1 = Math.floor((calc4P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S1 === "でんき") {
      myKinomiDisplayS1W3 = "[ソクノ]";
      //敵型1技3
      calc4P3S1 = Math.floor((calc4P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S1 === "でんき") {
      myKinomiDisplayS1W4 = "[ソクノ]";
      //敵型1技4
      calc4P4S1 = Math.floor((calc4P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S2 === "でんき") {
      myKinomiDisplayS2W1 = "[ソクノ]";
      calc4P1S2 = Math.floor((calc4P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S2 === "でんき") {
      myKinomiDisplayS2W2 = "[ソクノ]";
      //敵型2技2
      calc4P2S2 = Math.floor((calc4P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S2 === "でんき") {
      myKinomiDisplayS2W3 = "[ソクノ]";
      //敵型2技3
      calc4P3S2 = Math.floor((calc4P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S2 === "でんき") {
      myKinomiDisplayS2W4 = "[ソクノ]";
      calc4P4S2 = Math.floor((calc4P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S3 === "でんき") {
      myKinomiDisplayS3W1 = "[ソクノ]";
      calc4P1S3 = Math.floor((calc4P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S3 === "でんき") {
      myKinomiDisplayS3W2 = "[ソクノ]";
      //敵型3技2
      calc4P2S3 = Math.floor((calc4P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S3 === "でんき") {
      myKinomiDisplayS3W3 = "[ソクノ]";
      //敵型3技3
      calc4P3S3 = Math.floor((calc4P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S3 === "でんき") {
      myKinomiDisplayS3W4 = "[ソクノ]";
      //敵型3技4
      calc4P4S3 = Math.floor((calc4P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S4 === "でんき") {
      myKinomiDisplayS4W1 = "[ソクノ]";
      calc4P1S4 = Math.floor((calc4P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S4 === "でんき") {
      myKinomiDisplayS4W2 = "[ソクノ]";
      //敵型4技2
      calc4P2S4 = Math.floor((calc4P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S4 === "でんき") {
      myKinomiDisplayS4W3 = "[ソクノ]";
      //敵型4技3
      calc4P3S4 = Math.floor((calc4P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S4 === "でんき") {
      myKinomiDisplayS4W4 = "[ソクノ]";
      //敵型4技4
      calc4P4S4 = Math.floor((calc4P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }
  if (myItem_tab3 === "ナモのみ") {
    if (wtype1S1 === "あく") {
      myKinomiDisplayS1W1 = "[ナモ]";
      calc4P1S1 = Math.floor((calc4P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S1 === "あく") {
      myKinomiDisplayS1W2 = "[ナモ]";
      //敵型1技2
      calc4P2S1 = Math.floor((calc4P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S1 === "あく") {
      myKinomiDisplayS1W3 = "[ナモ]";
      //敵型1技3
      calc4P3S1 = Math.floor((calc4P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S1 === "あく") {
      myKinomiDisplayS1W4 = "[ナモ]";
      //敵型1技4
      calc4P4S1 = Math.floor((calc4P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S2 === "あく") {
      myKinomiDisplayS2W1 = "[ナモ]";
      calc4P1S2 = Math.floor((calc4P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S2 === "あく") {
      myKinomiDisplayS2W2 = "[ナモ]";
      //敵型2技2
      calc4P2S2 = Math.floor((calc4P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S2 === "あく") {
      myKinomiDisplayS2W3 = "[ナモ]";
      //敵型2技3
      calc4P3S2 = Math.floor((calc4P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S2 === "あく") {
      myKinomiDisplayS2W4 = "[ナモ]";
      calc4P4S2 = Math.floor((calc4P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S3 === "あく") {
      myKinomiDisplayS3W1 = "[ナモ]";
      calc4P1S3 = Math.floor((calc4P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S3 === "あく") {
      myKinomiDisplayS3W2 = "[ナモ]";
      //敵型3技2
      calc4P2S3 = Math.floor((calc4P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S3 === "あく") {
      myKinomiDisplayS3W3 = "[ナモ]";
      //敵型3技3
      calc4P3S3 = Math.floor((calc4P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S3 === "あく") {
      myKinomiDisplayS3W4 = "[ナモ]";
      //敵型3技4
      calc4P4S3 = Math.floor((calc4P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S4 === "あく") {
      myKinomiDisplayS4W1 = "[ナモ]";
      calc4P1S4 = Math.floor((calc4P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S4 === "あく") {
      myKinomiDisplayS4W2 = "[ナモ]";
      //敵型4技2
      calc4P2S4 = Math.floor((calc4P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S4 === "あく") {
      myKinomiDisplayS4W3 = "[ナモ]";
      //敵型4技3
      calc4P3S4 = Math.floor((calc4P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S4 === "あく") {
      myKinomiDisplayS4W4 = "[ナモ]";
      //敵型4技4
      calc4P4S4 = Math.floor((calc4P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }
  if (myItem_tab3 === "バコウのみ") {
    if (wtype1S1 === "ひこう") {
      myKinomiDisplayS1W1 = "[バコウ]";
      calc4P1S1 = Math.floor((calc4P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S1 === "ひこう") {
      myKinomiDisplayS1W2 = "[バコウ]";
      //敵型1技2
      calc4P2S1 = Math.floor((calc4P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S1 === "ひこう") {
      myKinomiDisplayS1W3 = "[バコウ]";
      //敵型1技3
      calc4P3S1 = Math.floor((calc4P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S1 === "ひこう") {
      myKinomiDisplayS1W4 = "[バコウ]";
      //敵型1技4
      calc4P4S1 = Math.floor((calc4P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S2 === "ひこう") {
      myKinomiDisplayS2W1 = "[バコウ]";
      calc4P1S2 = Math.floor((calc4P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S2 === "ひこう") {
      myKinomiDisplayS2W2 = "[バコウ]";
      //敵型2技2
      calc4P2S2 = Math.floor((calc4P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S2 === "ひこう") {
      myKinomiDisplayS2W3 = "[バコウ]";
      //敵型2技3
      calc4P3S2 = Math.floor((calc4P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S2 === "ひこう") {
      myKinomiDisplayS2W4 = "[バコウ]";
      calc4P4S2 = Math.floor((calc4P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S3 === "ひこう") {
      myKinomiDisplayS3W1 = "[バコウ]";
      calc4P1S3 = Math.floor((calc4P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S3 === "ひこう") {
      myKinomiDisplayS3W2 = "[バコウ]";
      //敵型3技2
      calc4P2S3 = Math.floor((calc4P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S3 === "ひこう") {
      myKinomiDisplayS3W3 = "[バコウ]";
      //敵型3技3
      calc4P3S3 = Math.floor((calc4P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S3 === "ひこう") {
      myKinomiDisplayS3W4 = "[バコウ]";
      //敵型3技4
      calc4P4S3 = Math.floor((calc4P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S4 === "ひこう") {
      myKinomiDisplayS4W1 = "[バコウ]";
      calc4P1S4 = Math.floor((calc4P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S4 === "ひこう") {
      myKinomiDisplayS4W2 = "[バコウ]";
      //敵型4技2
      calc4P2S4 = Math.floor((calc4P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S4 === "ひこう") {
      myKinomiDisplayS4W3 = "[バコウ]";
      //敵型4技3
      calc4P3S4 = Math.floor((calc4P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S4 === "ひこう") {
      myKinomiDisplayS4W4 = "[バコウ]";
      //敵型4技4
      calc4P4S4 = Math.floor((calc4P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }
  if (myItem_tab3 === "ハバンのみ") {
    if (wtype1S1 === "ドラゴン") {
      myKinomiDisplayS1W1 = "[ハバン]";
      calc4P1S1 = Math.floor((calc4P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S1 === "ドラゴン") {
      myKinomiDisplayS1W2 = "[ハバン]";
      //敵型1技2
      calc4P2S1 = Math.floor((calc4P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S1 === "ドラゴン") {
      myKinomiDisplayS1W3 = "[ハバン]";
      //敵型1技3
      calc4P3S1 = Math.floor((calc4P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S1 === "ドラゴン") {
      myKinomiDisplayS1W4 = "[ハバン]";
      //敵型1技4
      calc4P4S1 = Math.floor((calc4P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S2 === "ドラゴン") {
      myKinomiDisplayS2W1 = "[ハバン]";
      calc4P1S2 = Math.floor((calc4P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S2 === "ドラゴン") {
      myKinomiDisplayS2W2 = "[ハバン]";
      //敵型2技2
      calc4P2S2 = Math.floor((calc4P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S2 === "ドラゴン") {
      myKinomiDisplayS2W3 = "[ハバン]";
      //敵型2技3
      calc4P3S2 = Math.floor((calc4P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S2 === "ドラゴン") {
      myKinomiDisplayS2W4 = "[ハバン]";
      calc4P4S2 = Math.floor((calc4P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S3 === "ドラゴン") {
      myKinomiDisplayS3W1 = "[ハバン]";
      calc4P1S3 = Math.floor((calc4P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S3 === "ドラゴン") {
      myKinomiDisplayS3W2 = "[ハバン]";
      //敵型3技2
      calc4P2S3 = Math.floor((calc4P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S3 === "ドラゴン") {
      myKinomiDisplayS3W3 = "[ハバン]";
      //敵型3技3
      calc4P3S3 = Math.floor((calc4P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S3 === "ドラゴン") {
      myKinomiDisplayS3W4 = "[ハバン]";
      //敵型3技4
      calc4P4S3 = Math.floor((calc4P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S4 === "ドラゴン") {
      myKinomiDisplayS4W1 = "[ハバン]";
      calc4P1S4 = Math.floor((calc4P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S4 === "ドラゴン") {
      myKinomiDisplayS4W2 = "[ハバン]";
      //敵型4技2
      calc4P2S4 = Math.floor((calc4P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S4 === "ドラゴン") {
      myKinomiDisplayS4W3 = "[ハバン]";
      //敵型4技3
      calc4P3S4 = Math.floor((calc4P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S4 === "ドラゴン") {
      myKinomiDisplayS4W4 = "[ハバン]";
      //敵型4技4
      calc4P4S4 = Math.floor((calc4P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }
  if (myItem_tab3 === "ヤチェのみ") {
    if (wtype1S1 === "こおり") {
      myKinomiDisplayS1W1 = "[ヤチェ]";
      calc4P1S1 = Math.floor((calc4P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S1 === "こおり") {
      myKinomiDisplayS1W2 = "[ヤチェ]";
      //敵型1技2
      calc4P2S1 = Math.floor((calc4P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S1 === "こおり") {
      myKinomiDisplayS1W3 = "[ヤチェ]";
      //敵型1技3
      calc4P3S1 = Math.floor((calc4P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S1 === "こおり") {
      myKinomiDisplayS1W4 = "[ヤチェ]";
      //敵型1技4
      calc4P4S1 = Math.floor((calc4P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S2 === "こおり") {
      myKinomiDisplayS2W1 = "[ヤチェ]";
      calc4P1S2 = Math.floor((calc4P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S2 === "こおり") {
      myKinomiDisplayS2W2 = "[ヤチェ]";
      //敵型2技2
      calc4P2S2 = Math.floor((calc4P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S2 === "こおり") {
      myKinomiDisplayS2W3 = "[ヤチェ]";
      //敵型2技3
      calc4P3S2 = Math.floor((calc4P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S2 === "こおり") {
      myKinomiDisplayS2W4 = "[ヤチェ]";
      calc4P4S2 = Math.floor((calc4P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S3 === "こおり") {
      myKinomiDisplayS3W1 = "[ヤチェ]";
      calc4P1S3 = Math.floor((calc4P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S3 === "こおり") {
      myKinomiDisplayS3W2 = "[ヤチェ]";
      //敵型3技2
      calc4P2S3 = Math.floor((calc4P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S3 === "こおり") {
      myKinomiDisplayS3W3 = "[ヤチェ]";
      //敵型3技3
      calc4P3S3 = Math.floor((calc4P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S3 === "こおり") {
      myKinomiDisplayS3W4 = "[ヤチェ]";
      //敵型3技4
      calc4P4S3 = Math.floor((calc4P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S4 === "こおり") {
      myKinomiDisplayS4W1 = "[ヤチェ]";
      calc4P1S4 = Math.floor((calc4P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S4 === "こおり") {
      myKinomiDisplayS4W2 = "[ヤチェ]";
      //敵型4技2
      calc4P2S4 = Math.floor((calc4P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S4 === "こおり") {
      myKinomiDisplayS4W3 = "[ヤチェ]";
      //敵型4技3
      calc4P3S4 = Math.floor((calc4P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S4 === "こおり") {
      myKinomiDisplayS4W4 = "[ヤチェ]";
      //敵型4技4
      calc4P4S4 = Math.floor((calc4P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }
  if (myItem_tab3 === "ヨプのみ") {
    if (wtype1S1 === "かくとう") {
      myKinomiDisplayS1W1 = "[ヨプ]";
      calc4P1S1 = Math.floor((calc4P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S1 === "かくとう") {
      myKinomiDisplayS1W2 = "[ヨプ]";
      //敵型1技2
      calc4P2S1 = Math.floor((calc4P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S1 === "かくとう") {
      myKinomiDisplayS1W3 = "[ヨプ]";
      //敵型1技3
      calc4P3S1 = Math.floor((calc4P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S1 === "かくとう") {
      myKinomiDisplayS1W4 = "[ヨプ]";
      //敵型1技4
      calc4P4S1 = Math.floor((calc4P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S2 === "かくとう") {
      myKinomiDisplayS2W1 = "[ヨプ]";
      calc4P1S2 = Math.floor((calc4P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S2 === "かくとう") {
      myKinomiDisplayS2W2 = "[ヨプ]";
      //敵型2技2
      calc4P2S2 = Math.floor((calc4P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S2 === "かくとう") {
      myKinomiDisplayS2W3 = "[ヨプ]";
      //敵型2技3
      calc4P3S2 = Math.floor((calc4P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S2 === "かくとう") {
      myKinomiDisplayS2W4 = "[ヨプ]";
      calc4P4S2 = Math.floor((calc4P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S3 === "かくとう") {
      myKinomiDisplayS3W1 = "[ヨプ]";
      calc4P1S3 = Math.floor((calc4P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S3 === "かくとう") {
      myKinomiDisplayS3W2 = "[ヨプ]";
      //敵型3技2
      calc4P2S3 = Math.floor((calc4P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S3 === "かくとう") {
      myKinomiDisplayS3W3 = "[ヨプ]";
      //敵型3技3
      calc4P3S3 = Math.floor((calc4P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S3 === "かくとう") {
      myKinomiDisplayS3W4 = "[ヨプ]";
      //敵型3技4
      calc4P4S3 = Math.floor((calc4P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S4 === "かくとう") {
      myKinomiDisplayS4W1 = "[ヨプ]";
      calc4P1S4 = Math.floor((calc4P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S4 === "かくとう") {
      myKinomiDisplayS4W2 = "[ヨプ]";
      //敵型4技2
      calc4P2S4 = Math.floor((calc4P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S4 === "かくとう") {
      myKinomiDisplayS4W3 = "[ヨプ]";
      //敵型4技3
      calc4P3S4 = Math.floor((calc4P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S4 === "かくとう") {
      myKinomiDisplayS4W4 = "[ヨプ]";
      //敵型4技4
      calc4P4S4 = Math.floor((calc4P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }
  if (myItem_tab3 === "ヨロギのみ") {
    if (wtype1S1 === "いわ") {
      myKinomiDisplayS1W1 = "[ヨロギ]";
      calc4P1S1 = Math.floor((calc4P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S1 === "いわ") {
      myKinomiDisplayS1W2 = "[ヨロギ]";
      //敵型1技2
      calc4P2S1 = Math.floor((calc4P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S1 === "いわ") {
      myKinomiDisplayS1W3 = "[ヨロギ]";
      //敵型1技3
      calc4P3S1 = Math.floor((calc4P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S1 === "いわ") {
      myKinomiDisplayS1W4 = "[ヨロギ]";
      //敵型1技4
      calc4P4S1 = Math.floor((calc4P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S2 === "いわ") {
      myKinomiDisplayS2W1 = "[ヨロギ]";
      calc4P1S2 = Math.floor((calc4P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S2 === "いわ") {
      myKinomiDisplayS2W2 = "[ヨロギ]";
      //敵型2技2
      calc4P2S2 = Math.floor((calc4P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S2 === "いわ") {
      myKinomiDisplayS2W3 = "[ヨロギ]";
      //敵型2技3
      calc4P3S2 = Math.floor((calc4P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S2 === "いわ") {
      myKinomiDisplayS2W4 = "[ヨロギ]";
      calc4P4S2 = Math.floor((calc4P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S3 === "いわ") {
      myKinomiDisplayS3W1 = "[ヨロギ]";
      calc4P1S3 = Math.floor((calc4P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S3 === "いわ") {
      myKinomiDisplayS3W2 = "[ヨロギ]";
      //敵型3技2
      calc4P2S3 = Math.floor((calc4P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S3 === "いわ") {
      myKinomiDisplayS3W3 = "[ヨロギ]";
      //敵型3技3
      calc4P3S3 = Math.floor((calc4P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S3 === "いわ") {
      myKinomiDisplayS3W4 = "[ヨロギ]";
      //敵型3技4
      calc4P4S3 = Math.floor((calc4P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S4 === "いわ") {
      myKinomiDisplayS4W1 = "[ヨロギ]";
      calc4P1S4 = Math.floor((calc4P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S4 === "いわ") {
      myKinomiDisplayS4W2 = "[ヨロギ]";
      //敵型4技2
      calc4P2S4 = Math.floor((calc4P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S4 === "いわ") {
      myKinomiDisplayS4W3 = "[ヨロギ]";
      //敵型4技3
      calc4P3S4 = Math.floor((calc4P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S4 === "いわ") {
      myKinomiDisplayS4W4 = "[ヨロギ]";
      //敵型4技4
      calc4P4S4 = Math.floor((calc4P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }
  if (myItem_tab3 === "リンドのみ") {
    if (wtype1S1 === "くさ") {
      myKinomiDisplayS1W1 = "[リンド]";
      calc4P1S1 = Math.floor((calc4P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor((calc4KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor((calc4P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor((calc4KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor((calc3P1S1 * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor((calc3KPower1S1 * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor((calc3P1S1Critical * 50) / 100); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor((calc3KPower1S1Critical * 50) / 100); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S1 === "くさ") {
      myKinomiDisplayS1W2 = "[リンド]";
      //敵型1技2
      calc4P2S1 = Math.floor((calc4P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor((calc4KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor((calc4P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor((calc4KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor((calc3P2S1 * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor((calc3KPower2S1 * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor((calc3P2S1Critical * 50) / 100); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor((calc3KPower2S1Critical * 50) / 100); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S1 === "くさ") {
      myKinomiDisplayS1W3 = "[リンド]";
      //敵型1技3
      calc4P3S1 = Math.floor((calc4P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor((calc4KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor((calc4P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor((calc4KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor((calc3P3S1 * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor((calc3KPower3S1 * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor((calc3P3S1Critical * 50) / 100); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor((calc3KPower3S1Critical * 50) / 100); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S1 === "くさ") {
      myKinomiDisplayS1W4 = "[リンド]";
      //敵型1技4
      calc4P4S1 = Math.floor((calc4P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor((calc4KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor((calc4P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor((calc4KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor((calc3P4S1 * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor((calc3KPower4S1 * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor((calc3P4S1Critical * 50) / 100); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor((calc3KPower4S1Critical * 50) / 100); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S2 === "くさ") {
      myKinomiDisplayS2W1 = "[リンド]";
      calc4P1S2 = Math.floor((calc4P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor((calc4KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor((calc4P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor((calc4KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor((calc3P1S2 * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor((calc3KPower1S2 * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor((calc3P1S2Critical * 50) / 100); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor((calc3KPower1S2Critical * 50) / 100); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S2 === "くさ") {
      myKinomiDisplayS2W2 = "[リンド]";
      //敵型2技2
      calc4P2S2 = Math.floor((calc4P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor((calc4KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor((calc4P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor((calc4KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor((calc3P2S2 * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor((calc3KPower2S2 * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor((calc3P2S2Critical * 50) / 100); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor((calc3KPower2S2Critical * 50) / 100); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S2 === "くさ") {
      myKinomiDisplayS2W3 = "[リンド]";
      //敵型2技3
      calc4P3S2 = Math.floor((calc4P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor((calc4KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor((calc4P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor((calc4KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor((calc3P3S2 * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor((calc3KPower3S2 * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor((calc3P3S2Critical * 50) / 100); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor((calc3KPower3S2Critical * 50) / 100); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S2 === "くさ") {
      myKinomiDisplayS2W4 = "[リンド]";
      calc4P4S2 = Math.floor((calc4P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor((calc4KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor((calc4P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor((calc4KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor((calc3P4S2 * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor((calc3KPower4S2 * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor((calc3P4S2Critical * 50) / 100); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor((calc3KPower4S2Critical * 50) / 100); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S3 === "くさ") {
      myKinomiDisplayS3W1 = "[リンド]";
      calc4P1S3 = Math.floor((calc4P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor((calc4KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor((calc4P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor((calc4KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor((calc3P1S3 * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor((calc3KPower1S3 * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor((calc3P1S3Critical * 50) / 100); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor((calc3KPower1S3Critical * 50) / 100); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S3 === "くさ") {
      myKinomiDisplayS3W2 = "[リンド]";
      //敵型3技2
      calc4P2S3 = Math.floor((calc4P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor((calc4KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor((calc4P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor((calc4KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor((calc3P2S3 * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor((calc3KPower2S3 * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor((calc3P2S3Critical * 50) / 100); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor((calc3KPower2S3Critical * 50) / 100); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S3 === "くさ") {
      myKinomiDisplayS3W3 = "[リンド]";
      //敵型3技3
      calc4P3S3 = Math.floor((calc4P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor((calc4KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor((calc4P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor((calc4KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor((calc3P3S3 * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor((calc3KPower3S3 * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor((calc3P3S3Critical * 50) / 100); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor((calc3KPower3S3Critical * 50) / 100); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S3 === "くさ") {
      myKinomiDisplayS3W4 = "[リンド]";
      //敵型3技4
      calc4P4S3 = Math.floor((calc4P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor((calc4KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor((calc4P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor((calc4KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor((calc3P4S3 * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor((calc3KPower4S3 * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor((calc3P4S3Critical * 50) / 100); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor((calc3KPower4S3Critical * 50) / 100); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S4 === "くさ") {
      myKinomiDisplayS4W1 = "[リンド]";
      calc4P1S4 = Math.floor((calc4P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor((calc4KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor((calc4P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor((calc4KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor((calc3P1S4 * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor((calc3KPower1S4 * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor((calc3P1S4Critical * 50) / 100); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor((calc3KPower1S4Critical * 50) / 100); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype2S4 === "くさ") {
      myKinomiDisplayS4W2 = "[リンド]";
      //敵型4技2
      calc4P2S4 = Math.floor((calc4P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor((calc4KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor((calc4P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor((calc4KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor((calc3P2S4 * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor((calc3KPower2S4 * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor((calc3P2S4Critical * 50) / 100); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor((calc3KPower2S4Critical * 50) / 100); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S4 === "くさ") {
      myKinomiDisplayS4W3 = "[リンド]";
      //敵型4技3
      calc4P3S4 = Math.floor((calc4P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor((calc4KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor((calc4P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor((calc4KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor((calc3P3S4 * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor((calc3KPower3S4 * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor((calc3P3S4Critical * 50) / 100); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor((calc3KPower3S4Critical * 50) / 100); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype4S4 === "くさ") {
      myKinomiDisplayS4W4 = "[リンド]";
      //敵型4技4
      calc4P4S4 = Math.floor((calc4P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor((calc4KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor((calc4P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor((calc4KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor((calc3P4S4 * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor((calc3KPower4S4 * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor((calc3P4S4Critical * 50) / 100); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor((calc3KPower4S4Critical * 50) / 100); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  ////////kokokara
  //!ヌケニン判定!ヌケニン判定!ヌケニン判定!ヌケニン判定!ヌケニン判定!ヌケニン判定!ヌケニン判定!ヌケニン判定
  //!ヌケニン判定!ヌケニン判定!ヌケニン判定!ヌケニン判定!ヌケニン判定!ヌケニン判定!ヌケニン判定!ヌケニン判定
  //!ヌケニン判定!ヌケニン判定!ヌケニン判定!ヌケニン判定!ヌケニン判定!ヌケニン判定!ヌケニン判定!ヌケニン判定
  if (tekipokeBaseH == 1) {
    if (wtype1ChartT1 * wtype1ChartT2 < 2) {
      //自分技1
      calc3P1_S1 = Math.floor(calc3P1_S1 * 0); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S2 = Math.floor(calc3P1_S2 * 0); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S3 = Math.floor(calc3P1_S3 * 0); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S4 = Math.floor(calc3P1_S4 * 0); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power1 = Math.floor(calc3KS1Power1 * 0); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS2Power1 = Math.floor(calc3KS2Power1 * 0); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS3Power1 = Math.floor(calc3KS3Power1 * 0); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS4Power1 = Math.floor(calc3KS4Power1 * 0); //自分ポケ技1が敵型4への（補正あり）威力

      calc4P1_S1 = Math.floor(calc4P1_S1 * 0); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S2 = Math.floor(calc4P1_S2 * 0); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S3 = Math.floor(calc4P1_S3 * 0); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S4 = Math.floor(calc4P1_S4 * 0); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power1 = Math.floor(calc4KS1Power1 * 0); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS2Power1 = Math.floor(calc4KS2Power1 * 0); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS3Power1 = Math.floor(calc4KS3Power1 * 0); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS4Power1 = Math.floor(calc4KS4Power1 * 0); //自分ポケ技1が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P1_S1Critical = Math.floor(calc3P1_S1Critical * 0); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc3P1_S2Critical = Math.floor(calc3P1_S2Critical * 0); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc3P1_S3Critical = Math.floor(calc3P1_S3Critical * 0); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc3P1_S4Critical = Math.floor(calc3P1_S4Critical * 0); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power1Critical = Math.floor(calc3KS1Power1Critical * 0); //自分ポケ技1が敵型1への（補正あり）威力
      calc3KS2Power1Critical = Math.floor(calc3KS2Power1Critical * 0); //自分ポケ技1が敵型2への（補正あり）威力
      calc3KS3Power1Critical = Math.floor(calc3KS3Power1Critical * 0); //自分ポケ技1が敵型3への（補正あり）威力
      calc3KS4Power1Critical = Math.floor(calc3KS4Power1Critical * 0); //自分ポケ技1が敵型4への（補正あり）威力

      calc4P1_S1Critical = Math.floor(calc4P1_S1Critical * 0); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
      calc4P1_S2Critical = Math.floor(calc4P1_S2Critical * 0); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
      calc4P1_S3Critical = Math.floor(calc4P1_S3Critical * 0); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
      calc4P1_S4Critical = Math.floor(calc4P1_S4Critical * 0); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power1Critical = Math.floor(calc4KS1Power1Critical * 0); //自分ポケ技1が敵型1への（補正あり）威力
      calc4KS2Power1Critical = Math.floor(calc4KS2Power1Critical * 0); //自分ポケ技1が敵型2への（補正あり）威力
      calc4KS3Power1Critical = Math.floor(calc4KS3Power1Critical * 0); //自分ポケ技1が敵型3への（補正あり）威力
      calc4KS4Power1Critical = Math.floor(calc4KS4Power1Critical * 0); //自分ポケ技1が敵型4への（補正あり）威力
    }

    if (wtype2ChartT1 * wtype2ChartT2 < 2) {
      //自分技2
      calc3P2_S1 = Math.floor(calc3P2_S1 * 0); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S2 = Math.floor(calc3P2_S2 * 0); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S3 = Math.floor(calc3P2_S3 * 0); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S4 = Math.floor(calc3P2_S4 * 0); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power2 = Math.floor(calc3KS1Power2 * 0); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS2Power2 = Math.floor(calc3KS2Power2 * 0); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS3Power2 = Math.floor(calc3KS3Power2 * 0); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS4Power2 = Math.floor(calc3KS4Power2 * 0); //自分ポケ技2が敵型4への（補正あり）威力

      calc4P2_S1 = Math.floor(calc4P2_S1 * 0); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S2 = Math.floor(calc4P2_S2 * 0); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S3 = Math.floor(calc4P2_S3 * 0); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S4 = Math.floor(calc4P2_S4 * 0); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power2 = Math.floor(calc4KS1Power2 * 0); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS2Power2 = Math.floor(calc4KS2Power2 * 0); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS3Power2 = Math.floor(calc4KS3Power2 * 0); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS4Power2 = Math.floor(calc4KS4Power2 * 0); //自分ポケ技2が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P2_S1Critical = Math.floor(calc3P2_S1Critical * 0); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc3P2_S2Critical = Math.floor(calc3P2_S2Critical * 0); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc3P2_S3Critical = Math.floor(calc3P2_S3Critical * 0); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc3P2_S4Critical = Math.floor(calc3P2_S4Critical * 0); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power2Critical = Math.floor(calc3KS1Power2Critical * 0); //自分ポケ技2が敵型1への（補正あり）威力
      calc3KS2Power2Critical = Math.floor(calc3KS2Power2Critical * 0); //自分ポケ技2が敵型2への（補正あり）威力
      calc3KS3Power2Critical = Math.floor(calc3KS3Power2Critical * 0); //自分ポケ技2が敵型3への（補正あり）威力
      calc3KS4Power2Critical = Math.floor(calc3KS4Power2Critical * 0); //自分ポケ技2が敵型4への（補正あり）威力

      calc4P2_S1Critical = Math.floor(calc4P2_S1Critical * 0); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
      calc4P2_S2Critical = Math.floor(calc4P2_S2Critical * 0); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
      calc4P2_S3Critical = Math.floor(calc4P2_S3Critical * 0); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
      calc4P2_S4Critical = Math.floor(calc4P2_S4Critical * 0); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power2Critical = Math.floor(calc4KS1Power2Critical * 0); //自分ポケ技2が敵型1への（補正あり）威力
      calc4KS2Power2Critical = Math.floor(calc4KS2Power2Critical * 0); //自分ポケ技2が敵型2への（補正あり）威力
      calc4KS3Power2Critical = Math.floor(calc4KS3Power2Critical * 0); //自分ポケ技2が敵型3への（補正あり）威力
      calc4KS4Power2Critical = Math.floor(calc4KS4Power2Critical * 0); //自分ポケ技2が敵型4への（補正あり）威力
    }

    if (wtype3ChartT1 * wtype3ChartT2 < 2) {
      //自分技3
      calc3P3_S1 = Math.floor(calc3P3_S1 * 0); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S2 = Math.floor(calc3P3_S2 * 0); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S3 = Math.floor(calc3P3_S3 * 0); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S4 = Math.floor(calc3P3_S4 * 0); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power3 = Math.floor(calc3KS1Power3 * 0); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS2Power3 = Math.floor(calc3KS2Power3 * 0); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS3Power3 = Math.floor(calc3KS3Power3 * 0); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS4Power3 = Math.floor(calc3KS4Power3 * 0); //自分ポケ技3が敵型4への（補正あり）威力

      calc4P3_S1 = Math.floor(calc4P3_S1 * 0); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S2 = Math.floor(calc4P3_S2 * 0); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S3 = Math.floor(calc4P3_S3 * 0); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S4 = Math.floor(calc4P3_S4 * 0); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power3 = Math.floor(calc4KS1Power3 * 0); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS2Power3 = Math.floor(calc4KS2Power3 * 0); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS3Power3 = Math.floor(calc4KS3Power3 * 0); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS4Power3 = Math.floor(calc4KS4Power3 * 0); //自分ポケ技3が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P3_S1Critical = Math.floor(calc3P3_S1Critical * 0); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc3P3_S2Critical = Math.floor(calc3P3_S2Critical * 0); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc3P3_S3Critical = Math.floor(calc3P3_S3Critical * 0); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc3P3_S4Critical = Math.floor(calc3P3_S4Critical * 0); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power3Critical = Math.floor(calc3KS1Power3Critical * 0); //自分ポケ技3が敵型1への（補正あり）威力
      calc3KS2Power3Critical = Math.floor(calc3KS2Power3Critical * 0); //自分ポケ技3が敵型2への（補正あり）威力
      calc3KS3Power3Critical = Math.floor(calc3KS3Power3Critical * 0); //自分ポケ技3が敵型3への（補正あり）威力
      calc3KS4Power3Critical = Math.floor(calc3KS4Power3Critical * 0); //自分ポケ技3が敵型4への（補正あり）威力

      calc4P3_S1Critical = Math.floor(calc4P3_S1Critical * 0); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
      calc4P3_S2Critical = Math.floor(calc4P3_S2Critical * 0); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
      calc4P3_S3Critical = Math.floor(calc4P3_S3Critical * 0); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
      calc4P3_S4Critical = Math.floor(calc4P3_S4Critical * 0); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power3Critical = Math.floor(calc4KS1Power3Critical * 0); //自分ポケ技3が敵型1への（補正あり）威力
      calc4KS2Power3Critical = Math.floor(calc4KS2Power3Critical * 0); //自分ポケ技3が敵型2への（補正あり）威力
      calc4KS3Power3Critical = Math.floor(calc4KS3Power3Critical * 0); //自分ポケ技3が敵型3への（補正あり）威力
      calc4KS4Power3Critical = Math.floor(calc4KS4Power3Critical * 0); //自分ポケ技3が敵型4への（補正あり）威力
    }

    if (wtype4ChartT1 * wtype4ChartT2 < 2) {
      //自分技4
      calc3P4_S1 = Math.floor(calc3P4_S1 * 0); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S2 = Math.floor(calc3P4_S2 * 0); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S3 = Math.floor(calc3P4_S3 * 0); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S4 = Math.floor(calc3P4_S4 * 0); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power4 = Math.floor(calc3KS1Power4 * 0); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS2Power4 = Math.floor(calc3KS2Power4 * 0); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS3Power4 = Math.floor(calc3KS3Power4 * 0); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS4Power4 = Math.floor(calc3KS4Power4 * 0); //自分ポケ技4が敵型4への（補正あり）威力

      calc4P4_S1 = Math.floor(calc4P4_S1 * 0); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S2 = Math.floor(calc4P4_S2 * 0); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S3 = Math.floor(calc4P4_S3 * 0); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S4 = Math.floor(calc4P4_S4 * 0); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power4 = Math.floor(calc4KS1Power4 * 0); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS2Power4 = Math.floor(calc4KS2Power4 * 0); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS3Power4 = Math.floor(calc4KS3Power4 * 0); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS4Power4 = Math.floor(calc4KS4Power4 * 0); //自分ポケ技4が敵型4への（補正あり）威力

      /////////急所//////////
      calc3P4_S1Critical = Math.floor(calc3P4_S1Critical * 0); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc3P4_S2Critical = Math.floor(calc3P4_S2Critical * 0); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc3P4_S3Critical = Math.floor(calc3P4_S3Critical * 0); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc3P4_S4Critical = Math.floor(calc3P4_S4Critical * 0); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc3KS1Power4Critical = Math.floor(calc3KS1Power4Critical * 0); //自分ポケ技4が敵型1への（補正あり）威力
      calc3KS2Power4Critical = Math.floor(calc3KS2Power4Critical * 0); //自分ポケ技4が敵型2への（補正あり）威力
      calc3KS3Power4Critical = Math.floor(calc3KS3Power4Critical * 0); //自分ポケ技4が敵型3への（補正あり）威力
      calc3KS4Power4Critical = Math.floor(calc3KS4Power4Critical * 0); //自分ポケ技4が敵型4への（補正あり）威力

      calc4P4_S1Critical = Math.floor(calc4P4_S1Critical * 0); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
      calc4P4_S2Critical = Math.floor(calc4P4_S2Critical * 0); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
      calc4P4_S3Critical = Math.floor(calc4P4_S3Critical * 0); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
      calc4P4_S4Critical = Math.floor(calc4P4_S4Critical * 0); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

      calc4KS1Power4Critical = Math.floor(calc4KS1Power4Critical * 0); //自分ポケ技4が敵型1への（補正あり）威力
      calc4KS2Power4Critical = Math.floor(calc4KS2Power4Critical * 0); //自分ポケ技4が敵型2への（補正あり）威力
      calc4KS3Power4Critical = Math.floor(calc4KS3Power4Critical * 0); //自分ポケ技4が敵型3への（補正あり）威力
      calc4KS4Power4Critical = Math.floor(calc4KS4Power4Critical * 0); //自分ポケ技4が敵型4への（補正あり）威力
    }
  }

  //!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!
  //!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!
  //!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!
  //!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!!敵ヌケニン判定!
  if (mypokeBaseH == 1) {
    if (wtype1S1ChartT1 * wtype1S1ChartT2 < 2) {
      //敵型1技1
      calc4P1S1 = Math.floor(calc4P1S1 * 0); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1 = Math.floor(calc4KPower1S1 * 0); //敵1ポケ技1（補正あり）威力
      calc4P1S1Critical = Math.floor(calc4P1S1Critical * 0); //敵ポケ１技1例外補正なし威力
      calc4KPower1S1Critical = Math.floor(calc4KPower1S1Critical * 0); //敵1ポケ技1（補正あり）威力
      calc3P1S1 = Math.floor(calc3P1S1 * 0); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S1 = Math.floor(calc3KPower1S1 * 0); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S1Critical = Math.floor(calc3P1S1Critical * 0); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S1Critical = Math.floor(calc3KPower1S1Critical * 0); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype2S1ChartT1 * wtype2S1ChartT2 < 2) {
      //敵型1技2
      calc4P2S1 = Math.floor(calc4P2S1 * 0); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1 = Math.floor(calc4KPower2S1 * 0); //敵1ポケ技2（補正あり）威力
      calc4P2S1Critical = Math.floor(calc4P2S1Critical * 0); //敵ポケ１技2例外補正なし威力
      calc4KPower2S1Critical = Math.floor(calc4KPower2S1Critical * 0); //敵1ポケ技2（補正あり）威力
      calc3P2S1 = Math.floor(calc3P2S1 * 0); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S1 = Math.floor(calc3KPower2S1 * 0); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S1Critical = Math.floor(calc3P2S1Critical * 0); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S1Critical = Math.floor(calc3KPower2S1Critical * 0); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype3S1ChartT1 * wtype3S1ChartT2 < 2) {
      //敵型1技3
      calc4P3S1 = Math.floor(calc4P3S1 * 0); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1 = Math.floor(calc4KPower3S1 * 0); //敵1ポケ技3（補正あり）威力
      calc4P3S1Critical = Math.floor(calc4P3S1Critical * 0); //敵ポケ１技3例外補正なし威力
      calc4KPower3S1Critical = Math.floor(calc4KPower3S1Critical * 0); //敵1ポケ技3（補正あり）威力
      calc3P3S1 = Math.floor(calc3P3S1 * 0); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S1 = Math.floor(calc3KPower3S1 * 0); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S1Critical = Math.floor(calc3P3S1Critical * 0); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower3S1Critical = Math.floor(calc3KPower3S1Critical * 0); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype4S1ChartT1 * wtype4S1ChartT2 < 2) {
      //敵型1技4
      calc4P4S1 = Math.floor(calc4P4S1 * 0); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1 = Math.floor(calc4KPower4S1 * 0); //敵1ポケ技4（補正あり）威力
      calc4P4S1Critical = Math.floor(calc4P4S1Critical * 0); //敵ポケ１技4例外補正なし威力
      calc4KPower4S1Critical = Math.floor(calc4KPower4S1Critical * 0); //敵1ポケ技4（補正あり）威力
      calc3P4S1 = Math.floor(calc3P4S1 * 0); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S1 = Math.floor(calc3KPower4S1 * 0); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S1Critical = Math.floor(calc3P4S1Critical * 0); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S1Critical = Math.floor(calc3KPower4S1Critical * 0); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S2ChartT1 * wtype1S2ChartT2 < 2) {
      //敵型2技1
      calc4P1S2 = Math.floor(calc4P1S2 * 0); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2 = Math.floor(calc4KPower1S2 * 0); //敵2ポケ技1（補正あり）威力
      calc4P1S2Critical = Math.floor(calc4P1S2Critical * 0); //敵ポケ2技1例外補正なし威力
      calc4KPower1S2Critical = Math.floor(calc4KPower1S2Critical * 0); //敵2ポケ技1（補正あり）威力
      calc3P1S2 = Math.floor(calc3P1S2 * 0); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S2 = Math.floor(calc3KPower1S2 * 0); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S2Critical = Math.floor(calc3P1S2Critical * 0); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S2Critical = Math.floor(calc3KPower1S2Critical * 0); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype2S2ChartT1 * wtype2S2ChartT2 < 2) {
      //敵型2技2

      calc4P2S2 = Math.floor(calc4P2S2 * 0); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2 = Math.floor(calc4KPower2S2 * 0); //敵2ポケ技2（補正あり）威力
      calc4P2S2Critical = Math.floor(calc4P2S2Critical * 0); //敵ポケ2技2例外補正なし威力
      calc4KPower2S2Critical = Math.floor(calc4KPower2S2Critical * 0); //敵2ポケ技2（補正あり）威力
      calc3P2S2 = Math.floor(calc3P2S2 * 0); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S2 = Math.floor(calc3KPower2S2 * 0); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S2Critical = Math.floor(calc3P2S2Critical * 0); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S2Critical = Math.floor(calc3KPower2S2Critical * 0); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
    if (wtype3S2ChartT1 * wtype3S2ChartT2 < 2) {
      //敵型2技3
      calc4P3S2 = Math.floor(calc4P3S2 * 0); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2 = Math.floor(calc4KPower3S2 * 0); //敵2ポケ技3（補正あり）威力
      calc4P3S2Critical = Math.floor(calc4P3S2Critical * 0); //敵ポケ2技3例外補正なし威力
      calc4KPower3S2Critical = Math.floor(calc4KPower3S2Critical * 0); //敵2ポケ技3（補正あり）威力
      calc3P3S2 = Math.floor(calc3P3S2 * 0); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S2 = Math.floor(calc3KPower3S2 * 0); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S2Critical = Math.floor(calc3P3S2Critical * 0); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S2Critical = Math.floor(calc3KPower3S2Critical * 0); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype4S2ChartT1 * wtype4S2ChartT2 < 2) {
      //敵型2技4
      calc4P4S2 = Math.floor(calc4P4S2 * 0); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2 = Math.floor(calc4KPower4S2 * 0); //敵2ポケ技4（補正あり）威力
      calc4P4S2Critical = Math.floor(calc4P4S2Critical * 0); //敵ポケ2技4例外補正なし威力
      calc4KPower4S2Critical = Math.floor(calc4KPower4S2Critical * 0); //敵2ポケ技4（補正あり）威力
      calc3P4S2 = Math.floor(calc3P4S2 * 0); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S2 = Math.floor(calc3KPower4S2 * 0); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S2Critical = Math.floor(calc3P4S2Critical * 0); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S2Critical = Math.floor(calc3KPower4S2Critical * 0); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S3ChartT1 * wtype1S3ChartT2 < 2) {
      //敵型3技1

      calc4P1S3 = Math.floor(calc4P1S3 * 0); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3 = Math.floor(calc4KPower1S3 * 0); //敵3ポケ技1（補正あり）威力
      calc4P1S3Critical = Math.floor(calc4P1S3Critical * 0); //敵ポケ3技1例外補正なし威力
      calc4KPower1S3Critical = Math.floor(calc4KPower1S3Critical * 0); //敵3ポケ技1（補正あり）威力
      calc3P1S3 = Math.floor(calc3P1S3 * 0); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S3 = Math.floor(calc3KPower1S3 * 0); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S3Critical = Math.floor(calc3P1S3Critical * 0); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S3Critical = Math.floor(calc3KPower1S3Critical * 0); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype2S3ChartT1 * wtype2S3ChartT2 < 2) {
      //敵型3技2
      calc4P2S3 = Math.floor(calc4P2S3 * 0); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3 = Math.floor(calc4KPower2S3 * 0); //敵3ポケ技2（補正あり）威力
      calc4P2S3Critical = Math.floor(calc4P2S3Critical * 0); //敵ポケ3技2例外補正なし威力
      calc4KPower2S3Critical = Math.floor(calc4KPower2S3Critical * 0); //敵3ポケ技2（補正あり）威力
      calc3P2S3 = Math.floor(calc3P2S3 * 0); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S3 = Math.floor(calc3KPower2S3 * 0); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S3Critical = Math.floor(calc3P2S3Critical * 0); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
      calc3KPower2S3Critical = Math.floor(calc3KPower2S3Critical * 0); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype3S3ChartT1 * wtype3S3ChartT2 < 2) {
      //敵型3技3
      calc4P3S3 = Math.floor(calc4P3S3 * 0); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3 = Math.floor(calc4KPower3S3 * 0); //敵3ポケ技3（補正あり）威力
      calc4P3S3Critical = Math.floor(calc4P3S3Critical * 0); //敵ポケ3技3例外補正なし威力
      calc4KPower3S3Critical = Math.floor(calc4KPower3S3Critical * 0); //敵3ポケ技3（補正あり）威力
      calc3P3S3 = Math.floor(calc3P3S3 * 0); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S3 = Math.floor(calc3KPower3S3 * 0); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S3Critical = Math.floor(calc3P3S3Critical * 0); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S3Critical = Math.floor(calc3KPower3S3Critical * 0); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype4S3ChartT1 * wtype4S3ChartT2 < 2) {
      //敵型3技4
      calc4P4S3 = Math.floor(calc4P4S3 * 0); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3 = Math.floor(calc4KPower4S3 * 0); //敵3ポケ技4（補正あり）威力
      calc4P4S3Critical = Math.floor(calc4P4S3Critical * 0); //敵ポケ3技4例外補正なし威力
      calc4KPower4S3Critical = Math.floor(calc4KPower4S3Critical * 0); //敵3ポケ技4（補正あり）威力
      calc3P4S3 = Math.floor(calc3P4S3 * 0); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S3 = Math.floor(calc3KPower4S3 * 0); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S3Critical = Math.floor(calc3P4S3Critical * 0); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower4S3Critical = Math.floor(calc3KPower4S3Critical * 0); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype1S4ChartT1 * wtype1S4ChartT2 < 2) {
      calc4P1S4 = Math.floor(calc4P1S4 * 0); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4 = Math.floor(calc4KPower1S4 * 0); //敵4ポケ技1（補正あり）威力
      calc4P1S4Critical = Math.floor(calc4P1S4Critical * 0); //敵ポケ4技1例外補正なし威力
      calc4KPower1S4Critical = Math.floor(calc4KPower1S4Critical * 0); //敵4ポケ技1（補正あり）威力
      calc3P1S4 = Math.floor(calc3P1S4 * 0); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower1S4 = Math.floor(calc3KPower1S4 * 0); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P1S4Critical = Math.floor(calc3P1S4Critical * 0); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower1S4Critical = Math.floor(calc3KPower1S4Critical * 0); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype2S4ChartT1 * wtype2S4ChartT2 < 2) {
      //敵型4技2
      calc4P2S4 = Math.floor(calc4P2S4 * 0); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4 = Math.floor(calc4KPower2S4 * 0); //敵4ポケ技2（補正あり）威力
      calc4P2S4Critical = Math.floor(calc4P2S4Critical * 0); //敵ポケ4技2例外補正なし威力
      calc4KPower2S4Critical = Math.floor(calc4KPower2S4Critical * 0); //敵4ポケ技2（補正あり）威力
      calc3P2S4 = Math.floor(calc3P2S4 * 0); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower2S4 = Math.floor(calc3KPower2S4 * 0); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P2S4Critical = Math.floor(calc3P2S4Critical * 0); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower2S4Critical = Math.floor(calc3KPower2S4Critical * 0); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype3S4ChartT1 * wtype3S4ChartT2 < 2) {
      //敵型4技3
      calc4P3S4 = Math.floor(calc4P3S4 * 0); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4 = Math.floor(calc4KPower3S4 * 0); //敵4ポケ技3（補正あり）威力
      calc4P3S4Critical = Math.floor(calc4P3S4Critical * 0); //敵ポケ4技3例外補正なし威力
      calc4KPower3S4Critical = Math.floor(calc4KPower3S4Critical * 0); //敵4ポケ技3（補正あり）威力
      calc3P3S4 = Math.floor(calc3P3S4 * 0); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower3S4 = Math.floor(calc3KPower3S4 * 0); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P3S4Critical = Math.floor(calc3P3S4Critical * 0); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
      calc3KPower3S4Critical = Math.floor(calc3KPower3S4Critical * 0); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }

    if (wtype4S4ChartT1 * wtype4S4ChartT2 < 2) {
      //敵型4技4
      calc4P4S4 = Math.floor(calc4P4S4 * 0); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4 = Math.floor(calc4KPower4S4 * 0); //敵4ポケ技4（補正あり）威力
      calc4P4S4Critical = Math.floor(calc4P4S4Critical * 0); //敵ポケ4技4例外補正なし威力
      calc4KPower4S4Critical = Math.floor(calc4KPower4S4Critical * 0); //敵4ポケ技4（補正あり）威力
      calc3P4S4 = Math.floor(calc3P4S4 * 0); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4 = Math.floor(calc3KPower4S4 * 0); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
      calc3P4S4Critical = Math.floor(calc3P4S4Critical * 0); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
      calc3KPower4S4Critical = Math.floor(calc3KPower4S4Critical * 0); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
    }
  }

  //////////乱数最大//////////
  //////////乱数最大//////////
  //////////乱数最大//////////
  //////////乱数最大//////////
  let calc5P1_S1 = ((calc3P1_S1 / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P2_S1 = ((calc3P2_S1 / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P3_S1 = ((calc3P3_S1 / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P4_S1 = ((calc3P4_S1 / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P1_S2 = ((calc3P1_S2 / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P2_S2 = ((calc3P2_S2 / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P3_S2 = ((calc3P3_S2 / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P4_S2 = ((calc3P4_S2 / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P1_S3 = ((calc3P1_S3 / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P2_S3 = ((calc3P2_S3 / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P3_S3 = ((calc3P3_S3 / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P4_S3 = ((calc3P4_S3 / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P1_S4 = ((calc3P1_S4 / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P2_S4 = ((calc3P2_S4 / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P3_S4 = ((calc3P3_S4 / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P4_S4 = ((calc3P4_S4 / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS1Power1 = ((calc3KS1Power1 / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技1が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS1Power2 = ((calc3KS1Power2 / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技2が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS1Power3 = ((calc3KS1Power3 / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技3が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS1Power4 = ((calc3KS1Power4 / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技4が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS2Power1 = ((calc3KS2Power1 / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技1が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS2Power2 = ((calc3KS2Power2 / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技2が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS2Power3 = ((calc3KS2Power3 / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技3が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS2Power4 = ((calc3KS2Power4 / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技4が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS3Power1 = ((calc3KS3Power1 / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技1が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS3Power2 = ((calc3KS3Power2 / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技2が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS3Power3 = ((calc3KS3Power3 / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技3が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS3Power4 = ((calc3KS3Power4 / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技4が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS4Power1 = ((calc3KS4Power1 / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技1が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS4Power2 = ((calc3KS4Power2 / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技2が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS4Power3 = ((calc3KS4Power3 / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技3が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS4Power4 = ((calc3KS4Power4 / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技4が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P1S1 = ((calc3P1S1 / mypokeStatusH) * 100).toFixed(1); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P2S1 = ((calc3P2S1 / mypokeStatusH) * 100).toFixed(1); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P3S1 = ((calc3P3S1 / mypokeStatusH) * 100).toFixed(1); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P4S1 = ((calc3P4S1 / mypokeStatusH) * 100).toFixed(1); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P1S2 = ((calc3P1S2 / mypokeStatusH) * 100).toFixed(1); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P2S2 = ((calc3P2S2 / mypokeStatusH) * 100).toFixed(1); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P3S2 = ((calc3P3S2 / mypokeStatusH) * 100).toFixed(1); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P4S2 = ((calc3P4S2 / mypokeStatusH) * 100).toFixed(1); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P1S3 = ((calc3P1S3 / mypokeStatusH) * 100).toFixed(1); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P2S3 = ((calc3P2S3 / mypokeStatusH) * 100).toFixed(1); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P3S3 = ((calc3P3S3 / mypokeStatusH) * 100).toFixed(1); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P4S3 = ((calc3P4S3 / mypokeStatusH) * 100).toFixed(1); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P1S4 = ((calc3P1S4 / mypokeStatusH) * 100).toFixed(1); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P2S4 = ((calc3P2S4 / mypokeStatusH) * 100).toFixed(1); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P3S4 = ((calc3P3S4 / mypokeStatusH) * 100).toFixed(1); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P4S4 = ((calc3P4S4 / mypokeStatusH) * 100).toFixed(1); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower1S1 = ((calc3KPower1S1 / mypokeStatusH) * 100).toFixed(1); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower2S1 = ((calc3KPower2S1 / mypokeStatusH) * 100).toFixed(1); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower3S1 = ((calc3KPower3S1 / mypokeStatusH) * 100).toFixed(1); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower4S1 = ((calc3KPower4S1 / mypokeStatusH) * 100).toFixed(1); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower1S2 = ((calc3KPower1S2 / mypokeStatusH) * 100).toFixed(1); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower2S2 = ((calc3KPower2S2 / mypokeStatusH) * 100).toFixed(1); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower3S2 = ((calc3KPower3S2 / mypokeStatusH) * 100).toFixed(1); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower4S2 = ((calc3KPower4S2 / mypokeStatusH) * 100).toFixed(1); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower1S3 = ((calc3KPower1S3 / mypokeStatusH) * 100).toFixed(1); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower2S3 = ((calc3KPower2S3 / mypokeStatusH) * 100).toFixed(1); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower3S3 = ((calc3KPower3S3 / mypokeStatusH) * 100).toFixed(1); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower4S3 = ((calc3KPower4S3 / mypokeStatusH) * 100).toFixed(1); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower1S4 = ((calc3KPower1S4 / mypokeStatusH) * 100).toFixed(1); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower2S4 = ((calc3KPower2S4 / mypokeStatusH) * 100).toFixed(1); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower3S4 = ((calc3KPower3S4 / mypokeStatusH) * 100).toFixed(1); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower4S4 = ((calc3KPower4S4 / mypokeStatusH) * 100).toFixed(1); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P1_S1Critical = ((calc3P1_S1Critical / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P2_S1Critical = ((calc3P2_S1Critical / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P3_S1Critical = ((calc3P3_S1Critical / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P4_S1Critical = ((calc3P4_S1Critical / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P1_S2Critical = ((calc3P1_S2Critical / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P2_S2Critical = ((calc3P2_S2Critical / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P3_S2Critical = ((calc3P3_S2Critical / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P4_S2Critical = ((calc3P4_S2Critical / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P1_S3Critical = ((calc3P1_S3Critical / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P2_S3Critical = ((calc3P2_S3Critical / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P3_S3Critical = ((calc3P3_S3Critical / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P4_S3Critical = ((calc3P4_S3Critical / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P1_S4Critical = ((calc3P1_S4Critical / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P2_S4Critical = ((calc3P2_S4Critical / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P3_S4Critical = ((calc3P3_S4Critical / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P4_S4Critical = ((calc3P4_S4Critical / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS1Power1Critical = ((calc3KS1Power1Critical / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技1が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS1Power2Critical = ((calc3KS1Power2Critical / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技2が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS1Power3Critical = ((calc3KS1Power3Critical / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技3が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS1Power4Critical = ((calc3KS1Power4Critical / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技4が敵型1への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS2Power1Critical = ((calc3KS2Power1Critical / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技1が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS2Power2Critical = ((calc3KS2Power2Critical / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技2が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS2Power3Critical = ((calc3KS2Power3Critical / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技3が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS2Power4Critical = ((calc3KS2Power4Critical / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技4が敵型2への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS3Power1Critical = ((calc3KS3Power1Critical / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技1が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS3Power2Critical = ((calc3KS3Power2Critical / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技2が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS3Power3Critical = ((calc3KS3Power3Critical / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技3が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS3Power4Critical = ((calc3KS3Power4Critical / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技4が敵型3への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS4Power1Critical = ((calc3KS4Power1Critical / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技1が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS4Power2Critical = ((calc3KS4Power2Critical / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技2が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS4Power3Critical = ((calc3KS4Power3Critical / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技3が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KS4Power4Critical = ((calc3KS4Power4Critical / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技4が敵型4への（補正あり）威力 * A/B or C/D(物理か特殊判定) ○
  let calc5P1S1Critical = ((calc3P1S1Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ１技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc5P2S1Critical = ((calc3P2S1Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ１技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc5P3S1Critical = ((calc3P3S1Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ１技3例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
  let calc5P4S1Critical = ((calc3P4S1Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ１技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc5P1S2Critical = ((calc3P1S2Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ2技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc5P2S2Critical = ((calc3P2S2Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ2技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc5P3S2Critical = ((calc3P3S2Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ2技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc5P4S2Critical = ((calc3P4S2Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ2技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc5P1S3Critical = ((calc3P1S3Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ3技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc5P2S3Critical = ((calc3P2S3Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ3技2例外補正なし威力 * A/B or C/D(物理か特殊判定)  ○
  let calc5P3S3Critical = ((calc3P3S3Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ3技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc5P4S3Critical = ((calc3P4S3Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ3技4例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc5P1S4Critical = ((calc3P1S4Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ4技1例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc5P2S4Critical = ((calc3P2S4Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ4技2例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc5P3S4Critical = ((calc3P3S4Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ4技3例外補正なし威力 * A/B or C/D(物理か特殊判定)
  let calc5P4S4Critical = ((calc3P4S4Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ4技4例外補正なし威力 * A/B or C/D(物理か特殊判定) ○
  let calc5KPower1S1Critical = ((calc3KPower1S1Critical / mypokeStatusH) * 100).toFixed(1); //敵1ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc5KPower2S1Critical = ((calc3KPower2S1Critical / mypokeStatusH) * 100).toFixed(1); //敵1ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc5KPower3S1Critical = ((calc3KPower3S1Critical / mypokeStatusH) * 100).toFixed(1); //敵1ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc5KPower4S1Critical = ((calc3KPower4S1Critical / mypokeStatusH) * 100).toFixed(1); //敵1ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc5KPower1S2Critical = ((calc3KPower1S2Critical / mypokeStatusH) * 100).toFixed(1); //敵2ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc5KPower2S2Critical = ((calc3KPower2S2Critical / mypokeStatusH) * 100).toFixed(1); //敵2ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc5KPower3S2Critical = ((calc3KPower3S2Critical / mypokeStatusH) * 100).toFixed(1); //敵2ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc5KPower4S2Critical = ((calc3KPower4S2Critical / mypokeStatusH) * 100).toFixed(1); //敵2ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc5KPower1S3Critical = ((calc3KPower1S3Critical / mypokeStatusH) * 100).toFixed(1); //敵3ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc5KPower2S3Critical = ((calc3KPower2S3Critical / mypokeStatusH) * 100).toFixed(1); //敵3ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc5KPower3S3Critical = ((calc3KPower3S3Critical / mypokeStatusH) * 100).toFixed(1); //敵3ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc5KPower4S3Critical = ((calc3KPower4S3Critical / mypokeStatusH) * 100).toFixed(1); //敵3ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc5KPower1S4Critical = ((calc3KPower1S4Critical / mypokeStatusH) * 100).toFixed(1); //敵4ポケ技1（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc5KPower2S4Critical = ((calc3KPower2S4Critical / mypokeStatusH) * 100).toFixed(1); //敵4ポケ技2（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc5KPower3S4Critical = ((calc3KPower3S4Critical / mypokeStatusH) * 100).toFixed(1); //敵4ポケ技3（補正あり）威力 * A/B or C/D(物理か特殊判定)
  let calc5KPower4S4Critical = ((calc3KPower4S4Critical / mypokeStatusH) * 100).toFixed(1); //敵4ポケ技4（補正あり）威力 * A/B or C/D(物理か特殊判定)

  //////////乱数0.85//////////
  //////////乱数0.85//////////
  //////////乱数0.85//////////
  //////////乱数0.85//////////

  let calc6P1_S1 = ((calc4P1_S1 / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力 ○
  let calc6P1_S2 = ((calc4P1_S2 / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
  let calc6P1_S3 = ((calc4P1_S3 / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
  let calc6P1_S4 = ((calc4P1_S4 / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
  let calc6P2_S1 = ((calc4P2_S1 / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
  let calc6P2_S2 = ((calc4P2_S2 / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
  let calc6P2_S3 = ((calc4P2_S3 / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
  let calc6P2_S4 = ((calc4P2_S4 / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
  let calc6P3_S1 = ((calc4P3_S1 / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
  let calc6P3_S2 = ((calc4P3_S2 / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
  let calc6P3_S3 = ((calc4P3_S3 / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
  let calc6P3_S4 = ((calc4P3_S4 / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
  let calc6P4_S1 = ((calc4P4_S1 / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
  let calc6P4_S2 = ((calc4P4_S2 / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
  let calc6P4_S3 = ((calc4P4_S3 / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
  let calc6P4_S4 = ((calc4P4_S4 / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

  let calc6KS1Power1 = ((calc4KS1Power1 / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技1が敵型1への（補正あり）威力 ○
  let calc6KS1Power2 = ((calc4KS1Power2 / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技2が敵型1への（補正あり）威力
  let calc6KS1Power3 = ((calc4KS1Power3 / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技3が敵型1への（補正あり）威力
  let calc6KS1Power4 = ((calc4KS1Power4 / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技4が敵型1への（補正あり）威力
  let calc6KS2Power1 = ((calc4KS2Power1 / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技1が敵型2への（補正あり）威力
  let calc6KS2Power2 = ((calc4KS2Power2 / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技2が敵型2への（補正あり）威力
  let calc6KS2Power3 = ((calc4KS2Power3 / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技3が敵型2への（補正あり）威力
  let calc6KS2Power4 = ((calc4KS2Power4 / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技4が敵型2への（補正あり）威力
  let calc6KS3Power1 = ((calc4KS3Power1 / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技1が敵型3への（補正あり）威力
  let calc6KS3Power2 = ((calc4KS3Power2 / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技2が敵型3への（補正あり）威力
  let calc6KS3Power3 = ((calc4KS3Power3 / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技3が敵型3への（補正あり）威力
  let calc6KS3Power4 = ((calc4KS3Power4 / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技4が敵型3への（補正あり）威力
  let calc6KS4Power1 = ((calc4KS4Power1 / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技1が敵型4への（補正あり）威力
  let calc6KS4Power2 = ((calc4KS4Power2 / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技2が敵型4への（補正あり）威力
  let calc6KS4Power3 = ((calc4KS4Power3 / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技3が敵型4への（補正あり）威力
  let calc6KS4Power4 = ((calc4KS4Power4 / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技4が敵型4への（補正あり）威力

  //敵ポケ１の型が使う4つの技
  let calc6P1S1 = ((calc4P1S1 / mypokeStatusH) * 100).toFixed(1); //敵ポケ１技1例外補正なし威力
  let calc6P2S1 = ((calc4P2S1 / mypokeStatusH) * 100).toFixed(1); //敵ポケ１技2例外補正なし威力
  let calc6P3S1 = ((calc4P3S1 / mypokeStatusH) * 100).toFixed(1); //敵ポケ１技3例外補正なし威力
  let calc6P4S1 = ((calc4P4S1 / mypokeStatusH) * 100).toFixed(1); //敵ポケ１技4例外補正なし威力
  //敵ポケ2の型が使う4つの技
  let calc6P1S2 = ((calc4P1S2 / mypokeStatusH) * 100).toFixed(1); //敵ポケ2技1例外補正なし威力
  let calc6P2S2 = ((calc4P2S2 / mypokeStatusH) * 100).toFixed(1); //敵ポケ2技2例外補正なし威力
  let calc6P3S2 = ((calc4P3S2 / mypokeStatusH) * 100).toFixed(1); //敵ポケ2技3例外補正なし威力
  let calc6P4S2 = ((calc4P4S2 / mypokeStatusH) * 100).toFixed(1); //敵ポケ2技4例外補正なし威力
  //敵ポケ3の型が使う4つの技
  let calc6P1S3 = ((calc4P1S3 / mypokeStatusH) * 100).toFixed(1); //敵ポケ3技1例外補正なし威力
  let calc6P2S3 = ((calc4P2S3 / mypokeStatusH) * 100).toFixed(1); //敵ポケ3技2例外補正なし威力
  let calc6P3S3 = ((calc4P3S3 / mypokeStatusH) * 100).toFixed(1); //敵ポケ3技3例外補正なし威力
  let calc6P4S3 = ((calc4P4S3 / mypokeStatusH) * 100).toFixed(1); //敵ポケ3技4例外補正なし威力
  //敵ポケ4の型が使う4つの技
  let calc6P1S4 = ((calc4P1S4 / mypokeStatusH) * 100).toFixed(1); //敵ポケ4技1例外補正なし威力
  let calc6P2S4 = ((calc4P2S4 / mypokeStatusH) * 100).toFixed(1); //敵ポケ4技2例外補正なし威力
  let calc6P3S4 = ((calc4P3S4 / mypokeStatusH) * 100).toFixed(1); //敵ポケ4技3例外補正なし威力
  let calc6P4S4 = ((calc4P4S4 / mypokeStatusH) * 100).toFixed(1); //敵ポケ4技4例外補正なし威力

  let calc6KPower1S1 = ((calc4KPower1S1 / mypokeStatusH) * 100).toFixed(1); //敵1ポケ技1（補正あり）威力
  let calc6KPower2S1 = ((calc4KPower2S1 / mypokeStatusH) * 100).toFixed(1); //敵1ポケ技2（補正あり）威力
  let calc6KPower3S1 = ((calc4KPower3S1 / mypokeStatusH) * 100).toFixed(1); //敵1ポケ技3（補正あり）威力
  let calc6KPower4S1 = ((calc4KPower4S1 / mypokeStatusH) * 100).toFixed(1); //敵1ポケ技4（補正あり）威力

  let calc6KPower1S2 = ((calc4KPower1S2 / mypokeStatusH) * 100).toFixed(1); //敵2ポケ技1（補正あり）威力
  let calc6KPower2S2 = ((calc4KPower2S2 / mypokeStatusH) * 100).toFixed(1); //敵2ポケ技2（補正あり）威力
  let calc6KPower3S2 = ((calc4KPower3S2 / mypokeStatusH) * 100).toFixed(1); //敵2ポケ技3（補正あり）威力
  let calc6KPower4S2 = ((calc4KPower4S2 / mypokeStatusH) * 100).toFixed(1); //敵2ポケ技4（補正あり）威力

  let calc6KPower1S3 = ((calc4KPower1S3 / mypokeStatusH) * 100).toFixed(1); //敵3ポケ技1（補正あり）威力
  let calc6KPower2S3 = ((calc4KPower2S3 / mypokeStatusH) * 100).toFixed(1); //敵3ポケ技2（補正あり）威力
  let calc6KPower3S3 = ((calc4KPower3S3 / mypokeStatusH) * 100).toFixed(1); //敵3ポケ技3（補正あり）威力
  let calc6KPower4S3 = ((calc4KPower4S3 / mypokeStatusH) * 100).toFixed(1); //敵3ポケ技4（補正あり）威力

  let calc6KPower1S4 = ((calc4KPower1S4 / mypokeStatusH) * 100).toFixed(1); //敵4ポケ技1（補正あり）威力
  let calc6KPower2S4 = ((calc4KPower2S4 / mypokeStatusH) * 100).toFixed(1); //敵4ポケ技2（補正あり）威力
  let calc6KPower3S4 = ((calc4KPower3S4 / mypokeStatusH) * 100).toFixed(1); //敵4ポケ技3（補正あり）威力
  let calc6KPower4S4 = ((calc4KPower4S4 / mypokeStatusH) * 100).toFixed(1); //敵4ポケ技4（補正あり）威力

  /////////急所//////////
  let calc6P1_S1Critical = ((calc4P1_S1Critical / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技1例外補正なし威力 を敵型1に当てた時の威力
  let calc6P2_S1Critical = ((calc4P2_S1Critical / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技2例外補正なし威力 を敵型1に当てた時の威力
  let calc6P3_S1Critical = ((calc4P3_S1Critical / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技3例外補正なし威力 を敵型1に当てた時の威力
  let calc6P4_S1Critical = ((calc4P4_S1Critical / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技4例外補正なし威力 を敵型1に当てた時の威力
  let calc6P1_S2Critical = ((calc4P1_S2Critical / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技1例外補正なし威力 を敵型2に当てた時の威力
  let calc6P2_S2Critical = ((calc4P2_S2Critical / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技2例外補正なし威力 を敵型2に当てた時の威力
  let calc6P3_S2Critical = ((calc4P3_S2Critical / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技3例外補正なし威力 を敵型2に当てた時の威力
  let calc6P4_S2Critical = ((calc4P4_S2Critical / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技4例外補正なし威力 を敵型2に当てた時の威力
  let calc6P1_S3Critical = ((calc4P1_S3Critical / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技1例外補正なし威力 を敵型3に当てた時の威力
  let calc6P2_S3Critical = ((calc4P2_S3Critical / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技2例外補正なし威力 を敵型3に当てた時の威力
  let calc6P3_S3Critical = ((calc4P3_S3Critical / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技3例外補正なし威力 を敵型3に当てた時の威力
  let calc6P4_S3Critical = ((calc4P4_S3Critical / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技4例外補正なし威力 を敵型3に当てた時の威力
  let calc6P1_S4Critical = ((calc4P1_S4Critical / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技1例外補正なし威力 を敵型4に当てた時の威力
  let calc6P2_S4Critical = ((calc4P2_S4Critical / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技2例外補正なし威力 を敵型4に当てた時の威力
  let calc6P3_S4Critical = ((calc4P3_S4Critical / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技3例外補正なし威力 を敵型4に当てた時の威力
  let calc6P4_S4Critical = ((calc4P4_S4Critical / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技4例外補正なし威力 を敵型4に当てた時の威力

  let calc6KS1Power1Critical = ((calc4KS1Power1Critical / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技1が敵型1への（補正あり）威力
  let calc6KS1Power2Critical = ((calc4KS1Power2Critical / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技2が敵型1への（補正あり）威力
  let calc6KS1Power3Critical = ((calc4KS1Power3Critical / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技3が敵型1への（補正あり）威力
  let calc6KS1Power4Critical = ((calc4KS1Power4Critical / tekipokeStatusHS1) * 100).toFixed(1); //自分ポケ技4が敵型1への（補正あり）威力
  let calc6KS2Power1Critical = ((calc4KS2Power1Critical / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技1が敵型2への（補正あり）威力
  let calc6KS2Power2Critical = ((calc4KS2Power2Critical / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技2が敵型2への（補正あり）威力
  let calc6KS2Power3Critical = ((calc4KS2Power3Critical / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技3が敵型2への（補正あり）威力
  let calc6KS2Power4Critical = ((calc4KS2Power4Critical / tekipokeStatusHS2) * 100).toFixed(1); //自分ポケ技4が敵型2への（補正あり）威力
  let calc6KS3Power1Critical = ((calc4KS3Power1Critical / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技1が敵型3への（補正あり）威力
  let calc6KS3Power2Critical = ((calc4KS3Power2Critical / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技2が敵型3への（補正あり）威力
  let calc6KS3Power3Critical = ((calc4KS3Power3Critical / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技3が敵型3への（補正あり）威力
  let calc6KS3Power4Critical = ((calc4KS3Power4Critical / tekipokeStatusHS3) * 100).toFixed(1); //自分ポケ技4が敵型3への（補正あり）威力
  let calc6KS4Power1Critical = ((calc4KS4Power1Critical / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技1が敵型4への（補正あり）威力
  let calc6KS4Power2Critical = ((calc4KS4Power2Critical / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技2が敵型4への（補正あり）威力
  let calc6KS4Power3Critical = ((calc4KS4Power3Critical / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技3が敵型4への（補正あり）威力
  let calc6KS4Power4Critical = ((calc4KS4Power4Critical / tekipokeStatusHS4) * 100).toFixed(1); //自分ポケ技4が敵型4への（補正あり）威力

  //敵ポケ１の型が使う4つの技
  let calc6P1S1Critical = ((calc4P1S1Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ１技1例外補正なし威力
  let calc6P2S1Critical = ((calc4P2S1Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ１技2例外補正なし威力
  let calc6P3S1Critical = ((calc4P3S1Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ１技3例外補正なし威力
  let calc6P4S1Critical = ((calc4P4S1Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ１技4例外補正なし威力
  let calc6P1S2Critical = ((calc4P1S2Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ2技1例外補正なし威力
  let calc6P2S2Critical = ((calc4P2S2Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ2技2例外補正なし威力
  let calc6P3S2Critical = ((calc4P3S2Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ2技3例外補正なし威力
  let calc6P4S2Critical = ((calc4P4S2Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ2技4例外補正なし威力
  let calc6P1S3Critical = ((calc4P1S3Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ3技1例外補正なし威力
  let calc6P2S3Critical = ((calc4P2S3Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ3技2例外補正なし威力
  let calc6P3S3Critical = ((calc4P3S3Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ3技3例外補正なし威力
  let calc6P4S3Critical = ((calc4P4S3Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ3技4例外補正なし威力
  let calc6P1S4Critical = ((calc4P1S4Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ4技1例外補正なし威力
  let calc6P2S4Critical = ((calc4P2S4Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ4技2例外補正なし威力
  let calc6P3S4Critical = ((calc4P3S4Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ4技3例外補正なし威力
  let calc6P4S4Critical = ((calc4P4S4Critical / mypokeStatusH) * 100).toFixed(1); //敵ポケ4技4例外補正なし威力

  let calc6KPower1S1Critical = ((calc4KPower1S1Critical / mypokeStatusH) * 100).toFixed(1); //敵1ポケ技1（補正あり）威力
  let calc6KPower2S1Critical = ((calc4KPower2S1Critical / mypokeStatusH) * 100).toFixed(1); //敵1ポケ技2（補正あり）威力
  let calc6KPower3S1Critical = ((calc4KPower3S1Critical / mypokeStatusH) * 100).toFixed(1); //敵1ポケ技3（補正あり）威力
  let calc6KPower4S1Critical = ((calc4KPower4S1Critical / mypokeStatusH) * 100).toFixed(1); //敵1ポケ技4（補正あり）威力
  let calc6KPower1S2Critical = ((calc4KPower1S2Critical / mypokeStatusH) * 100).toFixed(1); //敵2ポケ技1（補正あり）威力
  let calc6KPower2S2Critical = ((calc4KPower2S2Critical / mypokeStatusH) * 100).toFixed(1); //敵2ポケ技2（補正あり）威力
  let calc6KPower3S2Critical = ((calc4KPower3S2Critical / mypokeStatusH) * 100).toFixed(1); //敵2ポケ技3（補正あり）威力
  let calc6KPower4S2Critical = ((calc4KPower4S2Critical / mypokeStatusH) * 100).toFixed(1); //敵2ポケ技4（補正あり）威力
  let calc6KPower1S3Critical = ((calc4KPower1S3Critical / mypokeStatusH) * 100).toFixed(1); //敵3ポケ技1（補正あり）威力
  let calc6KPower2S3Critical = ((calc4KPower2S3Critical / mypokeStatusH) * 100).toFixed(1); //敵3ポケ技2（補正あり）威力
  let calc6KPower3S3Critical = ((calc4KPower3S3Critical / mypokeStatusH) * 100).toFixed(1); //敵3ポケ技3（補正あり）威力
  let calc6KPower4S3Critical = ((calc4KPower4S3Critical / mypokeStatusH) * 100).toFixed(1); //敵3ポケ技4（補正あり）威力
  let calc6KPower1S4Critical = ((calc4KPower1S4Critical / mypokeStatusH) * 100).toFixed(1); //敵4ポケ技1（補正あり）威力
  let calc6KPower2S4Critical = ((calc4KPower2S4Critical / mypokeStatusH) * 100).toFixed(1); //敵4ポケ技2（補正あり）威力
  let calc6KPower3S4Critical = ((calc4KPower3S4Critical / mypokeStatusH) * 100).toFixed(1); //敵4ポケ技3（補正あり）威力
  let calc6KPower4S4Critical = ((calc4KPower4S4Critical / mypokeStatusH) * 100).toFixed(1); //敵4ポケ技4（補正あり）威力

  //!自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃
  //!自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃
  //!自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃
  //!自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃
  // 型1へ攻撃
  if (
    tekipokeMove1S1 === undefined ||
    tekipokeMove2S1 === undefined ||
    tekipokeMove3S1 === undefined ||
    tekipokeMove4S1 === undefined
  ) {
    const pokeStatus1 = document.getElementById("M1_tab3");
    pokeStatus1.innerHTML = "該当の型は存在しません";
  } else {
    if (lvVal === 100 && (tekipokeBfNoshape1 < trainerUnder100 || tekipokeBfNoshape1 > trainerTop100)) {
      const pokeStatus1 = document.getElementById("M1_tab3");
      pokeStatus1.innerHTML = `${trainerName}は型${tekipokeShape1}を使用しません。`;
    } else if (lvVal === 50 && (tekipokeBfNoshape1 < trainerUnder50 || tekipokeBfNoshape1 > trainerTop50)) {
      const pokeStatus1 = document.getElementById("M1_tab3");
      pokeStatus1.innerHTML = `${trainerName}は型${tekipokeShape1}を使用しません。`;
    } else {
      // 通常の処理をここに書く

      //   // document.getElementById('iconA').src = 'https://veekun.com/dex/media/pokemon/icons/' + NoA + '.png';

      // ${myTekkyuDisplay}
      // ${tekiTekkyuDisplay}

      const pokeStatus1 = document.getElementById("M1_tab3");
      pokeStatus1.innerHTML = `
      [自]${NAME}<img src="${myImageUrl}">
      →
      [敵]${tekiNAME}型${tekipokeShape1}<img src="${tekiImageUrl}">


      <br><br>
    <p class="ST">
    [自]補正後ステータス<br>
    <span class="itemMoji">@${mypokeItemName}</span><br>
    <span class="moji">H</span>${mypokeStatusH}<br>
    <span class="moji">A</span>${mypokeStatusARanked}<span class="hosei">
    
    ${mySurosutaDisplay}${myYogaDisplay}${myKonjouDisplay}${myKodahachiDisplay}${myHoneDisplay}${myRankADisplay}</span><br>
    
    <span class="moji">B</span>${mypokeStatusBRanked}<span class="hosei">${myRankBDisplay}${myFusiginaurokoDisplay}</span><br>
    <span class="moji">C</span>${mypokeStatusCRanked}<span class="hosei">${myKodamegaDisplay}${myRankCDisplay}</span><br>
    <span class="moji">D</span>${mypokeStatusDRanked}<span class="hosei">${myShinkaiDisplay}${mySunaarashiDisplay}${myRankDDisplay}</span><br>
    <span class="moji">S</span>${mypokeStatusSRanked}<span class="hosei">${mySurosutaDisplay}${myRankSDisplay}${myKodascarfDisplay}${myTekkyuDisplay}${myParalysisDisplay}</span>
    <br>


    [敵(型1)]補正後ステータス<br>
    <span class="itemMoji">@${tekipokeItemName1}</span><br>
    <span class="moji">H</span>${tekipokeStatusHS1}<br>
    <span class="moji">A</span>${tekipokeStatusAS1Ranked}<span class="hosei">
    
    ${tekiSurosutaDisplay}${tekiYogaDisplay}${tekiKonjouDisplay}${tekiKodahachiDisplay1}${tekiHoneDisplay1}${tekiRankADisplay}</span><br>
    
    <span class="moji">B</span>${tekipokeStatusBS1Ranked}<span class="hosei">${tekiRankBDisplay}${tekiFusiginaurokoDisplay}</span><br>
    <span class="moji">C</span>${tekipokeStatusCS1Ranked}<span class="hosei">${tekiKodamegaDisplay1}${tekiRankCDisplay}</span><br>
    <span class="moji">D</span>${tekipokeStatusDS1Ranked}<span class="hosei">${tekiShinkaiDisplay1}${tekiSunaarashiDisplay}${tekiRankDDisplay}</span><br>
    <span class="moji">S</span>${tekipokeStatusSS1Ranked}<span class="hosei">${tekiSurosutaDisplay}${tekiRankSDisplay}${tekiKodascarfDisplay1}${tekiTekkyuDisplay1}
    ${tekiParalysisDisplay}</span>
    </p>




    <div class="A">⒈&nbsp;${name1}</div>
    <div class="B" style="display: none;">
    [${wtype1}]&nbsp;<br>威力:${powerdisplay1}&nbsp;命中:${accuracydisplay1}&nbsp;PP:${pp1}&nbsp;<br>分類:${moveClass1}&nbsp;優先度:${priority1}&nbsp;接触:${contact1}&nbsp;王者:${king1}&nbsp;No:${no1}<br>効果:${effect1}<br>
    </div><br>
    



    <div class="damage">






    ${
      moveClass1 === "変化"
        ? `<p>変化技</p>`
        : power1 === kisoS1Power1
        ? `
    <p id="copy1">威力:${power1}<span class="hosei">${myIryokuDisplay1}${myAbiIryokuDisplay1}${tekiAbiIryokuGENDisplay1}</span><br>[通常]<br>[割合]${calc6KS1Power1}%~${calc5KS1Power1}%<span class="hosei">${myDamageHoseiDisplay1}${teki1kinomiDisplay1}${myTekiouDisplay1}${tekiAbiDamageGENDisplay1}${myAbiIromegaDisplay1}${myYakedoDisplay1}${myReflecDisplay1}${myHikarikabeDisplay1}${myTenkiDisplay1}${myMoraibiDisplay1}</span><br>[ダメージ]${calc4KS1Power1}~${calc3KS1Power1}</p>
    <p>[急所]<br>[割合]${calc6KS1Power1Critical}%~${calc5KS1Power1Critical}%<span class="hosei">${myYakedoDisplay1}</span><br>[ダメージ]${calc4KS1Power1Critical}~${calc3KS1Power1Critical}</p>`
        : `
    ※威力不定

    ${
      power1 === 0
        ? `技効果適用時<p>
    威力:${kisoS1Power1}<span class="hosei">${myIryokuDisplay1}${myAbiIryokuDisplay1}${tekiAbiIryokuGENDisplay1}</span><br>[通常]<br>[割合]${calc6KS1Power1}%~${calc5KS1Power1}%<span class="hosei">${myDamageHoseiDisplay1}${teki1kinomiDisplay1}${myTekiouDisplay1}${tekiAbiDamageGENDisplay1}${myAbiIromegaDisplay1}${myYakedoDisplay1}${myReflecDisplay1}${myHikarikabeDisplay1}${myTenkiDisplay1}${myMoraibiDisplay1}</span><br>[ダメージ]${calc4KS1Power1}~${calc3KS1Power1}</p>
    <p>[急所]<br>[割合]${calc6KS1Power1Critical}%~${calc5KS1Power1Critical}%<span class="hosei">${myYakedoDisplay1}</span><br>[ダメージ]${calc4KS1Power1Critical}~${calc3KS1Power1Critical}</p>`
        : `<p>威力:${power1}<span class="hosei">${myIryokuDisplay1}${myAbiIryokuDisplay1}${tekiAbiIryokuGENDisplay1}</span><br>[通常]<br>[割合]${calc6P1_S1}%~${calc5P1_S1}%<span class="hosei">${myDamageHoseiDisplay1}${teki1kinomiDisplay1}${myTekiouDisplay1}${tekiAbiDamageGENDisplay1}${myAbiIromegaDisplay1}${myYakedoDisplay1}${myReflecDisplay1}${myHikarikabeDisplay1}${myTenkiDisplay1}${myMoraibiDisplay1}</span><br>[ダメージ]${calc4P1_S1}~${calc3P1_S1}</p>
    <p>[急所]<br>[割合]${calc6P1_S1Critical}%~${calc5P1_S1Critical}%<span class="hosei">${myYakedoDisplay1}</span><br>[ダメージ]${calc4P1_S1Critical}~${calc3P1_S1Critical}</p>
    <br>
    技効果適用時<p>
    威力:${kisoS1Power1}<span class="hosei">${myIryokuDisplay1}${myAbiIryokuDisplay1}${tekiAbiIryokuGENDisplay1}</span><br>[通常]<br>[割合]${calc6KS1Power1}%~${calc5KS1Power1}%<span class="hosei">${myDamageHoseiDisplay1}${teki1kinomiDisplay1}${myTekiouDisplay1}${tekiAbiDamageGENDisplay1}${myAbiIromegaDisplay1}${myYakedoDisplay1}${myReflecDisplay1}${myHikarikabeDisplay1}${myTenkiDisplay1}${myMoraibiDisplay1}</span><br>[ダメージ]${calc4KS1Power1}~${calc3KS1Power1}</p>
    <p>[急所]<br>[割合]${calc6KS1Power1Critical}%~${calc5KS1Power1Critical}%<span class="hosei">${myYakedoDisplay1}</span><br>[ダメージ]${calc4KS1Power1Critical}~${calc3KS1Power1Critical}</p>`
    }`
    }
    </div>




    <div class="A">⒉&nbsp;${name2}</div>
    <div class="B" style="display: none;">
    [${wtype2}]&nbsp;<br>威力:${powerdisplay2}&nbsp;命中:${accuracydisplay2}&nbsp;PP:${pp2}&nbsp;<br>分類:${moveClass2}&nbsp;優先度:${priority2}&nbsp;接触:${contact2}&nbsp;王者:${king2}&nbsp;No:${no2}<br>効果:${effect2}<br>
    </div><br>
    <div class="damage">






    ${
      moveClass2 === "変化"
        ? `<p>変化技</p>`
        : power2 === kisoS1Power2
        ? `
    <p>威力:${power2}<span class="hosei">${myIryokuDisplay2}${myAbiIryokuDisplay2}${tekiAbiIryokuGENDisplay2}</span><br>[通常]<br>[割合]${calc6KS1Power2}%~${calc5KS1Power2}%<span class="hosei">${myDamageHoseiDisplay2}${teki1kinomiDisplay2}${myTekiouDisplay2}${tekiAbiDamageGENDisplay2}${myAbiIromegaDisplay2}${myYakedoDisplay2}${myReflecDisplay2}${myHikarikabeDisplay2}${myTenkiDisplay2}${myMoraibiDisplay2}</span><br>[ダメージ]${calc4KS1Power2}~${calc3KS1Power2}</p>
    <p>[急所]<br>[割合]${calc6KS1Power2Critical}%~${calc5KS1Power2Critical}%<span class="hosei">${myYakedoDisplay2}</span><br>[ダメージ]${calc4KS1Power2Critical}~${calc3KS1Power2Critical}</p>`
        : `
    ※威力不定
    ${
      power2 === 0
        ? `技効果適用時<p>
        威力:${kisoS1Power2}<span class="hosei">${myIryokuDisplay2}${myAbiIryokuDisplay2}${tekiAbiIryokuGENDisplay2}</span><br>[通常]<br>[割合]${calc6KS1Power2}%~${calc5KS1Power2}%<span class="hosei">${myDamageHoseiDisplay2}${teki1kinomiDisplay2}${myTekiouDisplay2}${tekiAbiDamageGENDisplay2}${myAbiIromegaDisplay2}${myYakedoDisplay2}${myReflecDisplay2}${myHikarikabeDisplay2}${myTenkiDisplay2}${myMoraibiDisplay2}</span><br>[ダメージ]${calc4KS1Power2}~${calc3KS1Power2}</p>
        <p>[急所]<br>[割合]${calc6KS1Power2Critical}%~${calc5KS1Power2Critical}%<span class="hosei">${myYakedoDisplay2}</span><br>[ダメージ]${calc4KS1Power2Critical}~${calc3KS1Power2Critical}</p>`
        : `<p>威力:${power2}<span class="hosei">${myIryokuDisplay2}${myAbiIryokuDisplay2}${tekiAbiIryokuGENDisplay2}</span><br>[通常]<br>[割合]${calc6P2_S1}%~${calc5P2_S1}%<span class="hosei">${myDamageHoseiDisplay2}${teki1kinomiDisplay2}${myTekiouDisplay2}${tekiAbiDamageGENDisplay2}${myAbiIromegaDisplay2}${myYakedoDisplay2}${myReflecDisplay2}${myHikarikabeDisplay2}${myTenkiDisplay2}${myMoraibiDisplay2}</span><br>[ダメージ]${calc4P2_S1}~${calc3P2_S1}</p>
        <p>[急所]<br>[割合]${calc6P2_S1Critical}%~${calc5P2_S1Critical}%<span class="hosei">${myYakedoDisplay2}</span><br>[ダメージ]${calc4P2_S1Critical}~${calc3P2_S1Critical}</p>
        <br>
        技効果適用時<p>
        威力:${kisoS1Power2}<span class="hosei">${myIryokuDisplay2}${myAbiIryokuDisplay2}${tekiAbiIryokuGENDisplay2}</span><br>[通常]<br>[割合]${calc6KS1Power2}%~${calc5KS1Power2}%<span class="hosei">${myDamageHoseiDisplay2}${teki1kinomiDisplay2}${myTekiouDisplay2}${tekiAbiDamageGENDisplay2}${myAbiIromegaDisplay2}${myYakedoDisplay2}${myReflecDisplay2}${myHikarikabeDisplay2}${myTenkiDisplay2}${myMoraibiDisplay2}</span><br>[ダメージ]${calc4KS1Power2}~${calc3KS1Power2}</p>
        <p>[急所]<br>[割合]${calc6KS1Power2Critical}%~${calc5KS1Power2Critical}%<span class="hosei">${myYakedoDisplay2}</span><br>[ダメージ]${calc4KS1Power2Critical}~${calc3KS1Power2Critical}</p>`
    }`
    }
    </div>




    <div class="A">⒊&nbsp;${name3}</div>
    <div class="B" style="display: none;">
    [${wtype3}]&nbsp;<br>威力:${powerdisplay3}&nbsp;命中:${accuracydisplay3}&nbsp;PP:${pp3}&nbsp;<br>分類:${moveClass3}&nbsp;優先度:${priority3}&nbsp;接触:${contact3}&nbsp;王者:${king3}&nbsp;No:${no3}<br>効果:${effect3}<br>
    </div><br>

    <div class="damage">
    ${
      moveClass3 === "変化"
        ? `<p>変化技</p>`
        : power3 === kisoS1Power3
        ? `
    <p>威力:${power3}<span class="hosei">${myIryokuDisplay3}${myAbiIryokuDisplay3}${tekiAbiIryokuGENDisplay3}</span><br>[通常]<br>[割合]${calc6KS1Power3}%~${calc5KS1Power3}%<span class="hosei">${myDamageHoseiDisplay3}${teki1kinomiDisplay3}${myTekiouDisplay3}${tekiAbiDamageGENDisplay3}${myAbiIromegaDisplay3}${myYakedoDisplay3}${myReflecDisplay3}${myHikarikabeDisplay3}${myTenkiDisplay3}${myMoraibiDisplay3}</span><br>[ダメージ]${calc4KS1Power3}~${calc3KS1Power3}</p>
    <p>[急所]<br>[割合]${calc6KS1Power3Critical}%~${calc5KS1Power3Critical}%<span class="hosei">${myYakedoDisplay3}</span><br>[ダメージ]${calc4KS1Power3Critical}~${calc3KS1Power3Critical}</p>`
        : `
    ※威力不定
    ${
      power3 === 0
        ? `技効果適用時<p>
    威力:${kisoS1Power3}<span class="hosei">${myIryokuDisplay3}${myAbiIryokuDisplay3}${tekiAbiIryokuGENDisplay3}</span><br>[通常]<br>[割合]${calc6KS1Power3}%~${calc5KS1Power3}%<span class="hosei">${myDamageHoseiDisplay3}${teki1kinomiDisplay3}${myTekiouDisplay3}${tekiAbiDamageGENDisplay3}${myAbiIromegaDisplay3}${myYakedoDisplay3}${myReflecDisplay3}${myHikarikabeDisplay3}${myTenkiDisplay3}${myMoraibiDisplay3}</span><br>[ダメージ]${calc4KS1Power3}~${calc3KS1Power3}</p>
    <p>[急所]<br>[割合]${calc6KS1Power3Critical}%~${calc5KS1Power3Critical}%<span class="hosei">${myYakedoDisplay3}</span><br>[ダメージ]${calc4KS1Power3Critical}~${calc3KS1Power3Critical}</p>`
        : `<p>威力:${power3}<span class="hosei">${myIryokuDisplay3}${myAbiIryokuDisplay3}${tekiAbiIryokuGENDisplay3}</span><br>[通常]<br>[割合]${calc6P3_S1}%~${calc5P3_S1}%<span class="hosei">${myDamageHoseiDisplay3}${teki1kinomiDisplay3}${myTekiouDisplay3}${tekiAbiDamageGENDisplay3}${myAbiIromegaDisplay3}${myYakedoDisplay3}${myReflecDisplay3}${myHikarikabeDisplay3}${myTenkiDisplay3}${myMoraibiDisplay3}</span><br>[ダメージ]${calc4P3_S1}~${calc3P3_S1}</p>
        <p>[急所]<br>[割合]${calc6P3_S1Critical}%~${calc5P3_S1Critical}%<span class="hosei">${myYakedoDisplay3}</span><br>[ダメージ]${calc4P3_S1Critical}~${calc3P3_S1Critical}</p>
        <br>
        技効果適用時<p>
        威力:${kisoS1Power3}<span class="hosei">${myIryokuDisplay3}${myAbiIryokuDisplay3}${tekiAbiIryokuGENDisplay3}</span><br>[通常]<br>[割合]${calc6KS1Power3}%~${calc5KS1Power3}%<span class="hosei">${myDamageHoseiDisplay3}${teki1kinomiDisplay3}${myTekiouDisplay3}${tekiAbiDamageGENDisplay3}${myAbiIromegaDisplay3}${myYakedoDisplay3}${myReflecDisplay3}${myHikarikabeDisplay3}${myTenkiDisplay3}${myMoraibiDisplay3}</span><br>[ダメージ]${calc4KS1Power3}~${calc3KS1Power3}</p>
        <p>[急所]<br>[割合]${calc6KS1Power3Critical}%~${calc5KS1Power3Critical}%<span class="hosei">${myYakedoDisplay3}</span><br>[ダメージ]${calc4KS1Power3Critical}~${calc3KS1Power3Critical}</p>`
    }`
    }
    </div>

    
    <div class="A">⒋&nbsp;${name4}</div>
    <div class="B" style="display: none;">
    [${wtype4}]&nbsp;<br>威力:${powerdisplay4}&nbsp;命中:${accuracydisplay4}&nbsp;PP:${pp4}&nbsp;<br>分類:${moveClass4}&nbsp;優先度:${priority4}&nbsp;接触:${contact4}&nbsp;王者:${king4}&nbsp;No:${no4}<br>効果:${effect4}<br>
    </div><br>
    
    
    <div class="damage">
    ${
      moveClass4 === "変化"
        ? `<p>変化技</p>`
        : power4 === kisoS1Power4
        ? `
    <p>威力:${power4}<span class="hosei">${myIryokuDisplay4}${myAbiIryokuDisplay4}${tekiAbiIryokuGENDisplay4}</span><br>[通常]<br>[割合]${calc6KS1Power4}%~${calc5KS1Power4}%<span class="hosei">${myDamageHoseiDisplay4}${teki1kinomiDisplay4}${myTekiouDisplay4}${tekiAbiDamageGENDisplay4}${myAbiIromegaDisplay4}${myYakedoDisplay4}${myReflecDisplay4}${myHikarikabeDisplay4}${myTenkiDisplay4}${myMoraibiDisplay4}</span><br>[ダメージ]${calc4KS1Power4}~${calc3KS1Power4}</p>
    <p>[急所]<br>[割合]${calc6KS1Power4Critical}%~${calc5KS1Power4Critical}%<span class="hosei">${myYakedoDisplay4}</span><br>[ダメージ]${calc4KS1Power4Critical}~${calc3KS1Power4Critical}</p>`
        : `
    ※威力不定
        ${
          power4 === 0
            ? `技効果適用時<p>
    威力:${kisoS1Power4}<span class="hosei">${myIryokuDisplay4}${myAbiIryokuDisplay4}${tekiAbiIryokuGENDisplay4}</span><br>[通常]<br>[割合]${calc6KS1Power4}%~${calc5KS1Power4}%<span class="hosei">${myDamageHoseiDisplay4}${teki1kinomiDisplay4}${myTekiouDisplay4}${tekiAbiDamageGENDisplay4}${myAbiIromegaDisplay4}${myYakedoDisplay4}${myReflecDisplay4}${myHikarikabeDisplay4}${myTenkiDisplay4}${myMoraibiDisplay4}</span><br>[ダメージ]${calc4KS1Power4}~${calc3KS1Power4}</p>
    <p>[急所]<br>[割合]${calc6KS1Power4Critical}%~${calc5KS1Power4Critical}%<span class="hosei">${myYakedoDisplay4}</span><br>[ダメージ]${calc4KS1Power4Critical}~${calc3KS1Power4Critical}</p>`
            : `<p>威力:${power4}<span class="hosei">${myIryokuDisplay4}${myAbiIryokuDisplay4}${tekiAbiIryokuGENDisplay4}</span><br>[通常]<br>[割合]${calc6P4_S1}%~${calc5P4_S1}%<span class="hosei">${myDamageHoseiDisplay4}${teki1kinomiDisplay4}${myTekiouDisplay4}${tekiAbiDamageGENDisplay4}${myAbiIromegaDisplay4}${myYakedoDisplay4}${myReflecDisplay4}${myHikarikabeDisplay4}${myTenkiDisplay4}${myMoraibiDisplay4}</span><br>[ダメージ]${calc4P4_S1}~${calc3P4_S1}</p>
            <p>[急所]<br>[割合]${calc6P4_S1Critical}%~${calc5P4_S1Critical}%<span class="hosei">${myYakedoDisplay4}</span><br>[ダメージ]${calc4P4_S1Critical}~${calc3P4_S1Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoS1Power4}<span class="hosei">${myIryokuDisplay4}${myAbiIryokuDisplay4}${tekiAbiIryokuGENDisplay4}</span><br>[通常]<br>[割合]${calc6KS1Power4}%~${calc5KS1Power4}%<span class="hosei">${myDamageHoseiDisplay4}${teki1kinomiDisplay4}${myTekiouDisplay4}${tekiAbiDamageGENDisplay4}${myAbiIromegaDisplay4}${myYakedoDisplay4}${myReflecDisplay4}${myHikarikabeDisplay4}${myTenkiDisplay4}${myMoraibiDisplay4}</span><br>[ダメージ]${calc4KS1Power4}~${calc3KS1Power4}</p>
            <p>[急所]<br>[割合]${calc6KS1Power4Critical}%~${calc5KS1Power4Critical}%<span class="hosei">${myYakedoDisplay4}</span><br>[ダメージ]${calc4KS1Power4Critical}~${calc3KS1Power4Critical}</p>`
        }`
    }
    </div>
    `;

      // すべてのA要素を取得する
      const trainerDetailAs = pokeStatus1.querySelectorAll(".A");

      trainerDetailAs.forEach((trainerDetailA) => {
        // クリックイベントリスナーを設定する
        trainerDetailA.addEventListener("click", () => {
          // クリックされたA要素の次の兄弟要素を取得する
          const trainerDetailB = trainerDetailA.nextElementSibling;

          // 兄弟要素が存在しているかをチェックし、存在している場合には表示を切り替える
          if (trainerDetailB) {
            trainerDetailB.style.display = trainerDetailB.style.display === "none" ? "block" : "none";
          }
        });
      });
    }
  }

  //!自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃
  // 型2へ攻撃
  if (
    tekipokeMove1S2 === undefined ||
    tekipokeMove2S2 === undefined ||
    tekipokeMove3S2 === undefined ||
    tekipokeMove4S2 === undefined
  ) {
    const pokeStatus2 = document.getElementById("M2_tab3");
    pokeStatus2.innerHTML = "該当の型は存在しません";
  } else {
    if (lvVal === 100 && (tekipokeBfNoshape2 < trainerUnder100 || tekipokeBfNoshape2 > trainerTop100)) {
      const pokeStatus2 = document.getElementById("M2_tab3");
      pokeStatus2.innerHTML = `${trainerName}は型${tekipokeShape2}を使用しません。`;
    } else if (lvVal === 50 && (tekipokeBfNoshape2 < trainerUnder50 || tekipokeBfNoshape2 > trainerTop50)) {
      const pokeStatus2 = document.getElementById("M2_tab3");
      pokeStatus2.innerHTML = `${trainerName}は型${tekipokeShape2}を使用しません。`;
    } else {
      // 通常の処理をここに書く

      //   // document.getElementById('iconA').src = 'https://veekun.com/dex/media/pokemon/icons/' + NoA + '.png';

      const pokeStatus2 = document.getElementById("M2_tab3");
      pokeStatus2.innerHTML = `
      [自]${NAME}<img src="${myImageUrl}">
      →
      [敵]${tekiNAME}型${tekipokeShape2}<img src="${tekiImageUrl}">


      <br><br>
    <p class="ST">
    [自]補正後ステータス<br>
    <span class="itemMoji">@${mypokeItemName}</span><br>
    <span class="moji">H</span>${mypokeStatusH}<br>
    <span class="moji">A</span>${mypokeStatusARanked}<span class="hosei">
    
    ${mySurosutaDisplay}${myYogaDisplay}${myKonjouDisplay}${myKodahachiDisplay}${myHoneDisplay}${myRankADisplay}</span><br>
    
    <span class="moji">B</span>${mypokeStatusBRanked}<span class="hosei">${myRankBDisplay}${myFusiginaurokoDisplay}</span><br>
    <span class="moji">C</span>${mypokeStatusCRanked}<span class="hosei">${myKodamegaDisplay}${myRankCDisplay}</span><br>
    <span class="moji">D</span>${mypokeStatusDRanked}<span class="hosei">${myShinkaiDisplay}${mySunaarashiDisplay}${myRankDDisplay}</span><br>
    <span class="moji">S</span>${mypokeStatusSRanked}<span class="hosei">${mySurosutaDisplay}${myRankSDisplay}${myKodascarfDisplay}${myTekkyuDisplay}${myParalysisDisplay}</span>
    <br>

    [敵(型2)]補正後ステータス<br>
    <span class="itemMoji">@${tekipokeItemName2}</span><br>
    <span class="moji">H</span>${tekipokeStatusHS2}<br>
    <span class="moji">A</span>${tekipokeStatusAS2Ranked}<span class="hosei">
    
    ${tekiSurosutaDisplay}${tekiYogaDisplay}${tekiKonjouDisplay}${tekiKodahachiDisplay2}${tekiHoneDisplay2}${tekiRankADisplay}</span><br>
    
    <span class="moji">B</span>${tekipokeStatusBS2Ranked}<span class="hosei">${tekiRankBDisplay}${tekiFusiginaurokoDisplay}</span><br>
    <span class="moji">C</span>${tekipokeStatusCS2Ranked}<span class="hosei">${tekiKodamegaDisplay2}${tekiRankCDisplay}</span><br>
    <span class="moji">D</span>${tekipokeStatusDS2Ranked}<span class="hosei">${tekiShinkaiDisplay2}${tekiSunaarashiDisplay}${tekiRankDDisplay}</span><br>
    <span class="moji">S</span>${tekipokeStatusSS2Ranked}<span class="hosei">${tekiSurosutaDisplay}${tekiRankSDisplay}${tekiKodascarfDisplay2}${tekiTekkyuDisplay2}
    ${tekiParalysisDisplay}</span>
    </p>




    <div class="A">⒈&nbsp;${name1}</div>
    <div class="B" style="display: none;">
    [${wtype1}]&nbsp;<br>威力:${powerdisplay1}&nbsp;命中:${accuracydisplay1}&nbsp;PP:${pp1}&nbsp;<br>分類:${moveClass1}&nbsp;優先度:${priority1}&nbsp;接触:${contact1}&nbsp;王者:${king1}&nbsp;No:${no1}<br>効果:${effect1}<br>
    </div><br>
    






    <div class="damage">
    ${
      moveClass1 === "変化"
        ? `<p>変化技</p>`
        : power1 === kisoS2Power1
        ? `
    <p>威力:${power1}<span class="hosei">${myIryokuDisplay1}${myAbiIryokuDisplay1}${tekiAbiIryokuGENDisplay1}</span><br>[通常]<br>[割合]${calc6KS2Power1}%~${calc5KS2Power1}%<span class="hosei">${myDamageHoseiDisplay1}${teki2kinomiDisplay1}${myTekiouDisplay1}${tekiAbiDamageGENDisplay1}${myAbiIromegaDisplay1}${myYakedoDisplay1}${myReflecDisplay1}${myHikarikabeDisplay1}${myTenkiDisplay1}${myMoraibiDisplay1}</span><br>[ダメージ]${calc4KS2Power1}~${calc3KS2Power1}</p>
    <p>[急所]<br>[割合]${calc6KS2Power1Critical}%~${calc5KS2Power1Critical}%<span class="hosei">${myYakedoDisplay1}</span><br>[ダメージ]${calc4KS2Power1Critical}~${calc3KS2Power1Critical}</p>`
        : `
    ※威力不定
        ${
          power1 === 0
            ? `技効果適用時<p>
    威力:${kisoS2Power1}<span class="hosei">${myIryokuDisplay1}${myAbiIryokuDisplay1}${tekiAbiIryokuGENDisplay1}</span><br>[通常]<br>[割合]${calc6KS2Power1}%~${calc5KS2Power1}%<span class="hosei">${myDamageHoseiDisplay1}${teki2kinomiDisplay1}${myTekiouDisplay1}${tekiAbiDamageGENDisplay1}${myAbiIromegaDisplay1}${myYakedoDisplay1}${myReflecDisplay1}${myHikarikabeDisplay1}${myTenkiDisplay1}${myMoraibiDisplay1}</span><br>[ダメージ]${calc4KS2Power1}~${calc3KS2Power1}</p>
    <p>[急所]<br>[割合]${calc6KS2Power1Critical}%~${calc5KS2Power1Critical}%<span class="hosei">${myYakedoDisplay1}</span><br>[ダメージ]${calc4KS2Power1Critical}~${calc3KS2Power1Critical}</p>`
            : `<p>威力:${power1}<span class="hosei">${myIryokuDisplay1}${myAbiIryokuDisplay1}${tekiAbiIryokuGENDisplay1}</span><br>[通常]<br>[割合]${calc6P1_S2}%~${calc5P1_S2}%<span class="hosei">${myDamageHoseiDisplay1}${teki2kinomiDisplay1}${myTekiouDisplay1}${tekiAbiDamageGENDisplay1}${myAbiIromegaDisplay1}${myYakedoDisplay1}${myReflecDisplay1}${myHikarikabeDisplay1}${myTenkiDisplay1}${myMoraibiDisplay1}</span><br>[ダメージ]${calc4P1_S2}~${calc3P1_S2}</p>
            <p>[急所]<br>[割合]${calc6P1_S2Critical}%~${calc5P1_S2Critical}%<span class="hosei">${myYakedoDisplay1}</span><br>[ダメージ]${calc4P1_S2Critical}~${calc3P1_S2Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoS2Power1}<span class="hosei">${myIryokuDisplay1}${myAbiIryokuDisplay1}${tekiAbiIryokuGENDisplay1}</span><br>[通常]<br>[割合]${calc6KS2Power1}%~${calc5KS2Power1}%<span class="hosei">${myDamageHoseiDisplay1}${teki2kinomiDisplay1}${myTekiouDisplay1}${tekiAbiDamageGENDisplay1}${myAbiIromegaDisplay1}${myYakedoDisplay1}${myReflecDisplay1}${myHikarikabeDisplay1}${myTenkiDisplay1}${myMoraibiDisplay1}</span><br>[ダメージ]${calc4KS2Power1}~${calc3KS2Power1}</p>
            <p>[急所]<br>[割合]${calc6KS2Power1Critical}%~${calc5KS2Power1Critical}%<span class="hosei">${myYakedoDisplay1}</span><br>[ダメージ]${calc4KS2Power1Critical}~${calc3KS2Power1Critical}</p>`
        }
    `
    }
    </div>




    <div class="A">⒉&nbsp;${name2}</div>
    <div class="B" style="display: none;">
    [${wtype2}]&nbsp;<br>威力:${powerdisplay2}&nbsp;命中:${accuracydisplay2}&nbsp;PP:${pp2}&nbsp;<br>分類:${moveClass2}&nbsp;優先度:${priority2}&nbsp;接触:${contact2}&nbsp;王者:${king2}&nbsp;No:${no2}<br>効果:${effect2}<br>
    </div><br>


    <div class="damage">
    ${
      moveClass2 === "変化"
        ? `<p>変化技</p>`
        : power2 === kisoS2Power2
        ? `
    <p>威力:${power2}<span class="hosei">${myIryokuDisplay2}${myAbiIryokuDisplay2}${tekiAbiIryokuGENDisplay2}</span><br>[通常]<br>[割合]${calc6KS2Power2}%~${calc5KS2Power2}%<span class="hosei">${myDamageHoseiDisplay2}${teki2kinomiDisplay2}${myTekiouDisplay2}${tekiAbiDamageGENDisplay2}${myAbiIromegaDisplay2}${myYakedoDisplay2}${myReflecDisplay2}${myHikarikabeDisplay2}${myTenkiDisplay2}${myMoraibiDisplay2}</span><br>[ダメージ]${calc4KS2Power2}~${calc3KS2Power2}</p>
    <p>[急所]<br>[割合]${calc6KS2Power2Critical}%~${calc5KS2Power2Critical}%<span class="hosei">${myYakedoDisplay2}</span><br>[ダメージ]${calc4KS2Power2Critical}~${calc3KS2Power2Critical}</p>`
        : `
    ※威力不定
        ${
          power2 === 0
            ? `技効果適用時<p>
    威力:${kisoS2Power2}<span class="hosei">${myIryokuDisplay2}${myAbiIryokuDisplay2}${tekiAbiIryokuGENDisplay2}</span><br>[通常]<br>[割合]${calc6KS2Power2}%~${calc5KS2Power2}%<span class="hosei">${myDamageHoseiDisplay2}${teki2kinomiDisplay2}${myTekiouDisplay2}${tekiAbiDamageGENDisplay2}${myAbiIromegaDisplay2}${myYakedoDisplay2}${myReflecDisplay2}${myHikarikabeDisplay2}${myTenkiDisplay2}${myMoraibiDisplay2}</span><br>[ダメージ]${calc4KS2Power2}~${calc3KS2Power2}</p>
    <p>[急所]<br>[割合]${calc6KS2Power2Critical}%~${calc5KS2Power2Critical}%<span class="hosei">${myYakedoDisplay2}</span><br>[ダメージ]${calc4KS2Power2Critical}~${calc3KS2Power2Critical}</p>`
            : `<p>威力:${power2}<span class="hosei">${myIryokuDisplay2}${myAbiIryokuDisplay2}${tekiAbiIryokuGENDisplay2}</span><br>[通常]<br>[割合]${calc6P2_S2}%~${calc5P2_S2}%<span class="hosei">${myDamageHoseiDisplay2}${teki2kinomiDisplay2}${myTekiouDisplay2}${tekiAbiDamageGENDisplay2}${myAbiIromegaDisplay2}${myYakedoDisplay2}${myReflecDisplay2}${myHikarikabeDisplay2}${myTenkiDisplay2}${myMoraibiDisplay2}</span><br>[ダメージ]${calc4P2_S2}~${calc3P2_S2}</p>
            <p>[急所]<br>[割合]${calc6P2_S2Critical}%~${calc5P2_S2Critical}%<span class="hosei">${myYakedoDisplay2}</span><br>[ダメージ]${calc4P2_S2Critical}~${calc3P2_S2Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoS2Power2}<span class="hosei">${myIryokuDisplay2}${myAbiIryokuDisplay2}${tekiAbiIryokuGENDisplay2}</span><br>[通常]<br>[割合]${calc6KS2Power2}%~${calc5KS2Power2}%<span class="hosei">${myDamageHoseiDisplay2}${teki2kinomiDisplay2}${myTekiouDisplay2}${tekiAbiDamageGENDisplay2}${myAbiIromegaDisplay2}${myYakedoDisplay2}${myReflecDisplay2}${myHikarikabeDisplay2}${myTenkiDisplay2}${myMoraibiDisplay2}</span><br>[ダメージ]${calc4KS2Power2}~${calc3KS2Power2}</p>
            <p>[急所]<br>[割合]${calc6KS2Power2Critical}%~${calc5KS2Power2Critical}%<span class="hosei">${myYakedoDisplay2}</span><br>[ダメージ]${calc4KS2Power2Critical}~${calc3KS2Power2Critical}</p>`
        }
    `
    }
    </div>








    


    <div class="A">⒊&nbsp;${name3}</div>
    <div class="B" style="display: none;">
    [${wtype3}]&nbsp;<br>威力:${powerdisplay3}&nbsp;命中:${accuracydisplay3}&nbsp;PP:${pp3}&nbsp;<br>分類:${moveClass3}&nbsp;優先度:${priority3}&nbsp;接触:${contact3}&nbsp;王者:${king3}&nbsp;No:${no3}<br>効果:${effect3}<br>
    </div><br>

    <div class="damage">
    ${
      moveClass3 === "変化"
        ? `<p>変化技</p>`
        : power3 === kisoS2Power3
        ? `
    <p>威力:${power3}<span class="hosei">${myIryokuDisplay3}${myAbiIryokuDisplay3}${tekiAbiIryokuGENDisplay3}</span><br>[通常]<br>[割合]${calc6KS2Power3}%~${calc5KS2Power3}%<span class="hosei">${myDamageHoseiDisplay3}${teki2kinomiDisplay3}${myTekiouDisplay3}${tekiAbiDamageGENDisplay3}${myAbiIromegaDisplay3}${myYakedoDisplay3}${myReflecDisplay3}${myHikarikabeDisplay3}${myTenkiDisplay3}${myMoraibiDisplay3}</span><br>[ダメージ]${calc4KS2Power3}~${calc3KS2Power3}</p>
    <p>[急所]<br>[割合]${calc6KS2Power3Critical}%~${calc5KS2Power3Critical}%<span class="hosei">${myYakedoDisplay3}</span><br>[ダメージ]${calc4KS2Power3Critical}~${calc3KS2Power3Critical}</p>`
        : `
    ※威力不定
        ${
          power3 === 0
            ? `技効果適用時<p>
    威力:${kisoS2Power3}<span class="hosei">${myIryokuDisplay3}${myAbiIryokuDisplay3}${tekiAbiIryokuGENDisplay3}</span><br>[通常]<br>[割合]${calc6KS2Power3}%~${calc5KS2Power3}%<span class="hosei">${myDamageHoseiDisplay3}${teki2kinomiDisplay3}${myTekiouDisplay3}${tekiAbiDamageGENDisplay3}${myAbiIromegaDisplay3}${myYakedoDisplay3}${myReflecDisplay3}${myHikarikabeDisplay3}${myTenkiDisplay3}${myMoraibiDisplay3}</span><br>[ダメージ]${calc4KS2Power3}~${calc3KS2Power3}</p>
    <p>[急所]<br>[割合]${calc6KS2Power3Critical}%~${calc5KS2Power3Critical}%<span class="hosei">${myYakedoDisplay3}</span><br>[ダメージ]${calc4KS2Power3Critical}~${calc3KS2Power3Critical}</p>`
            : `<p>威力:${power3}<span class="hosei">${myIryokuDisplay3}${myAbiIryokuDisplay3}${tekiAbiIryokuGENDisplay3}</span><br>[通常]<br>[割合]${calc6P3_S2}%~${calc5P3_S2}%<span class="hosei">${myDamageHoseiDisplay3}${teki2kinomiDisplay3}${myTekiouDisplay3}${tekiAbiDamageGENDisplay3}${myAbiIromegaDisplay3}${myYakedoDisplay3}${myReflecDisplay3}${myHikarikabeDisplay3}${myTenkiDisplay3}${myMoraibiDisplay3}</span><br>[ダメージ]${calc4P3_S2}~${calc3P3_S2}</p>
            <p>[急所]<br>[割合]${calc6P3_S2Critical}%~${calc5P3_S2Critical}%<span class="hosei">${myYakedoDisplay3}</span><br>[ダメージ]${calc4P3_S2Critical}~${calc3P3_S2Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoS2Power3}<span class="hosei">${myIryokuDisplay3}${myAbiIryokuDisplay3}${tekiAbiIryokuGENDisplay3}</span><br>[通常]<br>[割合]${calc6KS2Power3}%~${calc5KS2Power3}%<span class="hosei">${myDamageHoseiDisplay3}${teki2kinomiDisplay3}${myTekiouDisplay3}${tekiAbiDamageGENDisplay3}${myAbiIromegaDisplay3}${myYakedoDisplay3}${myReflecDisplay3}${myHikarikabeDisplay3}${myTenkiDisplay3}${myMoraibiDisplay3}</span><br>[ダメージ]${calc4KS2Power3}~${calc3KS2Power3}</p>
            <p>[急所]<br>[割合]${calc6KS2Power3Critical}%~${calc5KS2Power3Critical}%<span class="hosei">${myYakedoDisplay3}</span><br>[ダメージ]${calc4KS2Power3Critical}~${calc3KS2Power3Critical}</p>`
        }
    `
    }
    </div>

    
    <div class="A">⒋&nbsp;${name4}</div>
    <div class="B" style="display: none;">
    [${wtype4}]&nbsp;<br>威力:${powerdisplay4}&nbsp;命中:${accuracydisplay4}&nbsp;PP:${pp4}&nbsp;<br>分類:${moveClass4}&nbsp;優先度:${priority4}&nbsp;接触:${contact4}&nbsp;王者:${king4}&nbsp;No:${no4}<br>効果:${effect4}<br>
    </div><br>
    
    
    <div class="damage">
    ${
      moveClass4 === "変化"
        ? `<p>変化技</p>`
        : power4 === kisoS2Power4
        ? `
    <p>威力:${power4}<span class="hosei">${myIryokuDisplay4}${myAbiIryokuDisplay4}${tekiAbiIryokuGENDisplay4}</span><br>[通常]<br>[割合]${calc6KS2Power4}%~${calc5KS2Power4}%<span class="hosei">${myDamageHoseiDisplay4}${teki2kinomiDisplay4}${myTekiouDisplay4}${tekiAbiDamageGENDisplay4}${myAbiIromegaDisplay4}${myYakedoDisplay4}${myReflecDisplay4}${myHikarikabeDisplay4}${myTenkiDisplay4}${myMoraibiDisplay4}</span><br>[ダメージ]${calc4KS2Power4}~${calc3KS2Power4}</p>
    <p>[急所]<br>[割合]${calc6KS2Power4Critical}%~${calc5KS2Power4Critical}%<span class="hosei">${myYakedoDisplay4}</span><br>[ダメージ]${calc4KS2Power4Critical}~${calc3KS2Power4Critical}</p>`
        : `
    ※威力不定
        ${
          power4 === 0
            ? `技効果適用時<p>
    威力:${kisoS2Power4}<span class="hosei">${myIryokuDisplay4}${myAbiIryokuDisplay4}${tekiAbiIryokuGENDisplay4}</span><br>[通常]<br>[割合]${calc6KS2Power4}%~${calc5KS2Power4}%<span class="hosei">${myDamageHoseiDisplay4}${teki2kinomiDisplay4}${myTekiouDisplay4}${tekiAbiDamageGENDisplay4}${myAbiIromegaDisplay4}${myYakedoDisplay4}${myReflecDisplay4}${myHikarikabeDisplay4}${myTenkiDisplay4}${myMoraibiDisplay4}</span><br>[ダメージ]${calc4KS2Power4}~${calc3KS2Power4}</p>
    <p>[急所]<br>[割合]${calc6KS2Power4Critical}%~${calc5KS2Power4Critical}%<span class="hosei">${myYakedoDisplay4}</span><br>[ダメージ]${calc4KS2Power4Critical}~${calc3KS2Power4Critical}</p>`
            : `<p>威力:${power4}<span class="hosei">${myIryokuDisplay4}${myAbiIryokuDisplay4}${tekiAbiIryokuGENDisplay4}</span><br>[通常]<br>[割合]${calc6P4_S2}%~${calc5P4_S2}%<span class="hosei">${myDamageHoseiDisplay4}${teki2kinomiDisplay4}${myTekiouDisplay4}${tekiAbiDamageGENDisplay4}${myAbiIromegaDisplay4}${myYakedoDisplay4}${myReflecDisplay4}${myHikarikabeDisplay4}${myTenkiDisplay4}${myMoraibiDisplay4}</span><br>[ダメージ]${calc4P4_S2}~${calc3P4_S2}</p>
            <p>[急所]<br>[割合]${calc6P4_S2Critical}%~${calc5P4_S2Critical}%<span class="hosei">${myYakedoDisplay4}</span><br>[ダメージ]${calc4P4_S2Critical}~${calc3P4_S2Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoS2Power4}<span class="hosei">${myIryokuDisplay4}${myAbiIryokuDisplay4}${tekiAbiIryokuGENDisplay4}</span><br>[通常]<br>[割合]${calc6KS2Power4}%~${calc5KS2Power4}%<span class="hosei">${myDamageHoseiDisplay4}${teki2kinomiDisplay4}${myTekiouDisplay4}${tekiAbiDamageGENDisplay4}${myAbiIromegaDisplay4}${myYakedoDisplay4}${myReflecDisplay4}${myHikarikabeDisplay4}${myTenkiDisplay4}${myMoraibiDisplay4}</span><br>[ダメージ]${calc4KS2Power4}~${calc3KS2Power4}</p>
            <p>[急所]<br>[割合]${calc6KS2Power4Critical}%~${calc5KS2Power4Critical}%<span class="hosei">${myYakedoDisplay4}</span><br>[ダメージ]${calc4KS2Power4Critical}~${calc3KS2Power4Critical}</p>`
        }
    `
    }
    </div>
    `;

      // すべてのA要素を取得する
      const trainerDetailAs = pokeStatus2.querySelectorAll(".A");

      trainerDetailAs.forEach((trainerDetailA) => {
        // クリックイベントリスナーを設定する
        trainerDetailA.addEventListener("click", () => {
          // クリックされたA要素の次の兄弟要素を取得する
          const trainerDetailB = trainerDetailA.nextElementSibling;

          // 兄弟要素が存在しているかをチェックし、存在している場合には表示を切り替える
          if (trainerDetailB) {
            trainerDetailB.style.display = trainerDetailB.style.display === "none" ? "block" : "none";
          }
        });
      });
    }
  }

  //!自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃
  // 型3へ攻撃

  if (
    tekipokeMove1S3 === undefined ||
    tekipokeMove2S3 === undefined ||
    tekipokeMove3S3 === undefined ||
    tekipokeMove4S3 === undefined
  ) {
    const pokeStatus3 = document.getElementById("M3_tab3");
    pokeStatus3.innerHTML = "該当の型は存在しません";
  } else {
    if (lvVal === 100 && (tekipokeBfNoshape3 < trainerUnder100 || tekipokeBfNoshape3 > trainerTop100)) {
      const pokeStatus3 = document.getElementById("M3_tab3");
      pokeStatus3.innerHTML = `${trainerName}は型${tekipokeShape3}を使用しません。`;
    } else if (lvVal === 50 && (tekipokeBfNoshape3 < trainerUnder50 || tekipokeBfNoshape3 > trainerTop50)) {
      const pokeStatus3 = document.getElementById("M3_tab3");
      pokeStatus3.innerHTML = `${trainerName}は型${tekipokeShape3}を使用しません。`;
    } else {
      // 通常の処理をここに書く

      //   // document.getElementById('iconA').src = 'https://veekun.com/dex/media/pokemon/icons/' + NoA + '.png';

      const pokeStatus3 = document.getElementById("M3_tab3");
      pokeStatus3.innerHTML = `
      [自]${NAME}<img src="${myImageUrl}">
      →
      [敵]${tekiNAME}型${tekipokeShape3}<img src="${tekiImageUrl}">


      <br><br>
    <p class="ST">
    [自]補正後ステータス<br>
    <span class="itemMoji">@${mypokeItemName}</span><br>
    <span class="moji">H</span>${mypokeStatusH}<br>
    <span class="moji">A</span>${mypokeStatusARanked}<span class="hosei">
    
    ${mySurosutaDisplay}${myYogaDisplay}${myKonjouDisplay}${myKodahachiDisplay}${myHoneDisplay}${myRankADisplay}</span><br>
    
    <span class="moji">B</span>${mypokeStatusBRanked}<span class="hosei">${myRankBDisplay}${myFusiginaurokoDisplay}</span><br>
    <span class="moji">C</span>${mypokeStatusCRanked}<span class="hosei">${myKodamegaDisplay}${myRankCDisplay}</span><br>
    <span class="moji">D</span>${mypokeStatusDRanked}<span class="hosei">${myShinkaiDisplay}${mySunaarashiDisplay}${myRankDDisplay}</span><br>
    <span class="moji">S</span>${mypokeStatusSRanked}<span class="hosei">${mySurosutaDisplay}${myRankSDisplay}${myKodascarfDisplay}${myTekkyuDisplay}${myParalysisDisplay}</span>
    <br>

    [敵(型3)]補正後ステータス<br>
    <span class="itemMoji">@${tekipokeItemName3}</span><br>
    <span class="moji">H</span>${tekipokeStatusHS3}<br>
    <span class="moji">A</span>${tekipokeStatusAS3Ranked}<span class="hosei">
    
    ${tekiSurosutaDisplay}${tekiYogaDisplay}${tekiKonjouDisplay}${tekiKodahachiDisplay3}${tekiHoneDisplay3}${tekiRankADisplay}</span><br>
    
    <span class="moji">B</span>${tekipokeStatusBS3Ranked}<span class="hosei">${tekiRankBDisplay}${tekiFusiginaurokoDisplay}</span><br>
    <span class="moji">C</span>${tekipokeStatusCS3Ranked}<span class="hosei">${tekiKodamegaDisplay3}${tekiRankCDisplay}</span><br>
    <span class="moji">D</span>${tekipokeStatusDS3Ranked}<span class="hosei">${tekiShinkaiDisplay3}${tekiSunaarashiDisplay}${tekiRankDDisplay}</span><br>
    <span class="moji">S</span>${tekipokeStatusSS3Ranked}<span class="hosei">${tekiSurosutaDisplay}${tekiRankSDisplay}${tekiKodascarfDisplay3}${tekiTekkyuDisplay3}
    ${tekiParalysisDisplay}</span>
    </p>




    <div class="A">⒈&nbsp;${name1}</div>
    <div class="B" style="display: none;">
    [${wtype1}]&nbsp;<br>威力:${powerdisplay1}&nbsp;命中:${accuracydisplay1}&nbsp;PP:${pp1}&nbsp;<br>分類:${moveClass1}&nbsp;優先度:${priority1}&nbsp;接触:${contact1}&nbsp;王者:${king1}&nbsp;No:${no1}<br>効果:${effect1}<br>
    </div><br>
    






    <div class="damage">
    ${
      moveClass1 === "変化"
        ? `<p>変化技</p>`
        : power1 === kisoS3Power1
        ? `
    <p>威力:${power1}<span class="hosei">${myIryokuDisplay1}${myAbiIryokuDisplay1}${tekiAbiIryokuGENDisplay1}</span><br>[通常]<br>[割合]${calc6KS3Power1}%~${calc5KS3Power1}%<span class="hosei">${myDamageHoseiDisplay1}${teki3kinomiDisplay1}${myTekiouDisplay1}${tekiAbiDamageGENDisplay1}${myAbiIromegaDisplay1}${myYakedoDisplay1}${myReflecDisplay1}${myHikarikabeDisplay1}${myTenkiDisplay1}${myMoraibiDisplay1}</span><br>[ダメージ]${calc4KS3Power1}~${calc3KS3Power1}</p>
    <p>[急所]<br>[割合]${calc6KS3Power1Critical}%~${calc5KS3Power1Critical}%<span class="hosei">${myYakedoDisplay1}</span><br>[ダメージ]${calc4KS3Power1Critical}~${calc3KS3Power1Critical}</p>`
        : `
    ※威力不定
        ${
          power1 === 0
            ? `技効果適用時<p>
    威力:${kisoS3Power1}<span class="hosei">${myIryokuDisplay1}${myAbiIryokuDisplay1}${tekiAbiIryokuGENDisplay1}</span><br>[通常]<br>[割合]${calc6KS3Power1}%~${calc5KS3Power1}%<span class="hosei">${myDamageHoseiDisplay1}${teki3kinomiDisplay1}${myTekiouDisplay1}${tekiAbiDamageGENDisplay1}${myAbiIromegaDisplay1}${myYakedoDisplay1}${myReflecDisplay1}${myHikarikabeDisplay1}${myTenkiDisplay1}${myMoraibiDisplay1}</span><br>[ダメージ]${calc4KS3Power1}~${calc3KS3Power1}</p>
    <p>[急所]<br>[割合]${calc6KS3Power1Critical}%~${calc5KS3Power1Critical}%<span class="hosei">${myYakedoDisplay1}</span><br>[ダメージ]${calc4KS3Power1Critical}~${calc3KS3Power1Critical}</p>`
            : `<p>威力:${power1}<span class="hosei">${myIryokuDisplay1}${myAbiIryokuDisplay1}${tekiAbiIryokuGENDisplay1}</span><br>[通常]<br>[割合]${calc6P1_S3}%~${calc5P1_S3}%<span class="hosei">${myDamageHoseiDisplay1}${teki3kinomiDisplay1}${myTekiouDisplay1}${tekiAbiDamageGENDisplay1}${myAbiIromegaDisplay1}${myYakedoDisplay1}${myReflecDisplay1}${myHikarikabeDisplay1}${myTenkiDisplay1}${myMoraibiDisplay1}</span><br>[ダメージ]${calc4P1_S3}~${calc3P1_S3}</p>
            <p>[急所]<br>[割合]${calc6P1_S3Critical}%~${calc5P1_S3Critical}%<span class="hosei">${myYakedoDisplay1}</span><br>[ダメージ]${calc4P1_S3Critical}~${calc3P1_S3Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoS3Power1}<span class="hosei">${myIryokuDisplay1}${myAbiIryokuDisplay1}${tekiAbiIryokuGENDisplay1}</span><br>[通常]<br>[割合]${calc6KS3Power1}%~${calc5KS3Power1}%<span class="hosei">${myDamageHoseiDisplay1}${teki3kinomiDisplay1}${myTekiouDisplay1}${tekiAbiDamageGENDisplay1}${myAbiIromegaDisplay1}${myYakedoDisplay1}${myReflecDisplay1}${myHikarikabeDisplay1}${myTenkiDisplay1}${myMoraibiDisplay1}</span><br>[ダメージ]${calc4KS3Power1}~${calc3KS3Power1}</p>
            <p>[急所]<br>[割合]${calc6KS3Power1Critical}%~${calc5KS3Power1Critical}%<span class="hosei">${myYakedoDisplay1}</span><br>[ダメージ]${calc4KS3Power1Critical}~${calc3KS3Power1Critical}</p>`
        }
    `
    }
    </div>




    <div class="A">⒉&nbsp;${name2}</div>
    <div class="B" style="display: none;">
    [${wtype2}]&nbsp;<br>威力:${powerdisplay2}&nbsp;命中:${accuracydisplay2}&nbsp;PP:${pp2}&nbsp;<br>分類:${moveClass2}&nbsp;優先度:${priority2}&nbsp;接触:${contact2}&nbsp;王者:${king2}&nbsp;No:${no2}<br>効果:${effect2}<br>
    </div><br>


    <div class="damage">
    ${
      moveClass2 === "変化"
        ? `<p>変化技</p>`
        : power2 === kisoS3Power2
        ? `
    <p>威力:${power2}<span class="hosei">${myIryokuDisplay2}${myAbiIryokuDisplay2}${tekiAbiIryokuGENDisplay2}</span><br>[通常]<br>[割合]${calc6KS3Power2}%~${calc5KS3Power2}%<span class="hosei">${myDamageHoseiDisplay2}${teki3kinomiDisplay2}${myTekiouDisplay2}${tekiAbiDamageGENDisplay2}${myAbiIromegaDisplay2}${myYakedoDisplay2}${myReflecDisplay2}${myHikarikabeDisplay2}${myTenkiDisplay2}${myMoraibiDisplay2}</span><br>[ダメージ]${calc4KS3Power2}~${calc3KS3Power2}</p>
    <p>[急所]<br>[割合]${calc6KS3Power2Critical}%~${calc5KS3Power2Critical}%<span class="hosei">${myYakedoDisplay2}</span><br>[ダメージ]${calc4KS3Power2Critical}~${calc3KS3Power2Critical}</p>`
        : `
    ※威力不定
        ${
          power2 === 0
            ? `技効果適用時<p>
    威力:${kisoS3Power2}<span class="hosei">${myIryokuDisplay2}${myAbiIryokuDisplay2}${tekiAbiIryokuGENDisplay2}</span><br>[通常]<br>[割合]${calc6KS3Power2}%~${calc5KS3Power2}%<span class="hosei">${myDamageHoseiDisplay2}${teki3kinomiDisplay2}${myTekiouDisplay2}${tekiAbiDamageGENDisplay2}${myAbiIromegaDisplay2}${myYakedoDisplay2}${myReflecDisplay2}${myHikarikabeDisplay2}${myTenkiDisplay2}${myMoraibiDisplay2}</span><br>[ダメージ]${calc4KS3Power2}~${calc3KS3Power2}</p>
    <p>[急所]<br>[割合]${calc6KS3Power2Critical}%~${calc5KS3Power2Critical}%<span class="hosei">${myYakedoDisplay2}</span><br>[ダメージ]${calc4KS3Power2Critical}~${calc3KS3Power2Critical}</p>`
            : `<p>威力:${power2}<span class="hosei">${myIryokuDisplay2}${myAbiIryokuDisplay2}${tekiAbiIryokuGENDisplay2}</span><br>[通常]<br>[割合]${calc6P2_S3}%~${calc5P2_S3}%<span class="hosei">${myDamageHoseiDisplay2}${teki3kinomiDisplay2}${myTekiouDisplay2}${tekiAbiDamageGENDisplay2}${myAbiIromegaDisplay2}${myYakedoDisplay2}${myReflecDisplay2}${myHikarikabeDisplay2}${myTenkiDisplay2}${myMoraibiDisplay2}</span><br>[ダメージ]${calc4P2_S3}~${calc3P2_S3}</p>
            <p>[急所]<br>[割合]${calc6P2_S3Critical}%~${calc5P2_S3Critical}%<span class="hosei">${myYakedoDisplay2}</span><br>[ダメージ]${calc4P2_S3Critical}~${calc3P2_S3Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoS3Power2}<span class="hosei">${myIryokuDisplay2}${myAbiIryokuDisplay2}${tekiAbiIryokuGENDisplay2}</span><br>[通常]<br>[割合]${calc6KS3Power2}%~${calc5KS3Power2}%<span class="hosei">${myDamageHoseiDisplay2}${teki3kinomiDisplay2}${myTekiouDisplay2}${tekiAbiDamageGENDisplay2}${myAbiIromegaDisplay2}${myYakedoDisplay2}${myReflecDisplay2}${myHikarikabeDisplay2}${myTenkiDisplay2}${myMoraibiDisplay2}</span><br>[ダメージ]${calc4KS3Power2}~${calc3KS3Power2}</p>
            <p>[急所]<br>[割合]${calc6KS3Power2Critical}%~${calc5KS3Power2Critical}%<span class="hosei">${myYakedoDisplay2}</span><br>[ダメージ]${calc4KS3Power2Critical}~${calc3KS3Power2Critical}</p>`
        }
    `
    }
    </div>








    


    <div class="A">⒊&nbsp;${name3}</div>
    <div class="B" style="display: none;">
    [${wtype3}]&nbsp;<br>威力:${powerdisplay3}&nbsp;命中:${accuracydisplay3}&nbsp;PP:${pp3}&nbsp;<br>分類:${moveClass3}&nbsp;優先度:${priority3}&nbsp;接触:${contact3}&nbsp;王者:${king3}&nbsp;No:${no3}<br>効果:${effect3}<br>
    </div><br>

    <div class="damage">
    ${
      moveClass3 === "変化"
        ? `<p>変化技</p>`
        : power3 === kisoS3Power3
        ? `
    <p>威力:${power3}<span class="hosei">${myIryokuDisplay3}${myAbiIryokuDisplay3}${tekiAbiIryokuGENDisplay3}</span><br>[通常]<br>[割合]${calc6KS3Power3}%~${calc5KS3Power3}%<span class="hosei">${myDamageHoseiDisplay3}${teki3kinomiDisplay3}${myTekiouDisplay3}${tekiAbiDamageGENDisplay3}${myAbiIromegaDisplay3}${myYakedoDisplay3}${myReflecDisplay3}${myHikarikabeDisplay3}${myTenkiDisplay3}${myMoraibiDisplay3}</span><br>[ダメージ]${calc4KS3Power3}~${calc3KS3Power3}</p>
    <p>[急所]<br>[割合]${calc6KS3Power3Critical}%~${calc5KS3Power3Critical}%<span class="hosei">${myYakedoDisplay3}</span><br>[ダメージ]${calc4KS3Power3Critical}~${calc3KS3Power3Critical}</p>`
        : `
    ※威力不定
        ${
          power3 === 0
            ? `技効果適用時<p>
    威力:${kisoS3Power3}<span class="hosei">${myIryokuDisplay3}${myAbiIryokuDisplay3}${tekiAbiIryokuGENDisplay3}</span><br>[通常]<br>[割合]${calc6KS3Power3}%~${calc5KS3Power3}%<span class="hosei">${myDamageHoseiDisplay3}${teki3kinomiDisplay3}${myTekiouDisplay3}${tekiAbiDamageGENDisplay3}${myAbiIromegaDisplay3}${myYakedoDisplay3}${myReflecDisplay3}${myHikarikabeDisplay3}${myTenkiDisplay3}${myMoraibiDisplay3}</span><br>[ダメージ]${calc4KS3Power3}~${calc3KS3Power3}</p>
    <p>[急所]<br>[割合]${calc6KS3Power3Critical}%~${calc5KS3Power3Critical}%<span class="hosei">${myYakedoDisplay3}</span><br>[ダメージ]${calc4KS3Power3Critical}~${calc3KS3Power3Critical}</p>`
            : `<p>威力:${power3}<span class="hosei">${myIryokuDisplay3}${myAbiIryokuDisplay3}${tekiAbiIryokuGENDisplay3}</span><br>[通常]<br>[割合]${calc6P3_S3}%~${calc5P3_S3}%<span class="hosei">${myDamageHoseiDisplay3}${teki3kinomiDisplay3}${myTekiouDisplay3}${tekiAbiDamageGENDisplay3}${myAbiIromegaDisplay3}${myYakedoDisplay3}${myReflecDisplay3}${myHikarikabeDisplay3}${myTenkiDisplay3}${myMoraibiDisplay3}</span><br>[ダメージ]${calc4P3_S3}~${calc3P3_S3}</p>
            <p>[急所]<br>[割合]${calc6P3_S3Critical}%~${calc5P3_S3Critical}%<span class="hosei">${myYakedoDisplay3}</span><br>[ダメージ]${calc4P3_S3Critical}~${calc3P3_S3Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoS3Power3}<span class="hosei">${myIryokuDisplay3}${myAbiIryokuDisplay3}${tekiAbiIryokuGENDisplay3}</span><br>[通常]<br>[割合]${calc6KS3Power3}%~${calc5KS3Power3}%<span class="hosei">${myDamageHoseiDisplay3}${teki3kinomiDisplay3}${myTekiouDisplay3}${tekiAbiDamageGENDisplay3}${myAbiIromegaDisplay3}${myYakedoDisplay3}${myReflecDisplay3}${myHikarikabeDisplay3}${myTenkiDisplay3}${myMoraibiDisplay3}</span><br>[ダメージ]${calc4KS3Power3}~${calc3KS3Power3}</p>
            <p>[急所]<br>[割合]${calc6KS3Power3Critical}%~${calc5KS3Power3Critical}%<span class="hosei">${myYakedoDisplay3}</span><br>[ダメージ]${calc4KS3Power3Critical}~${calc3KS3Power3Critical}</p>`
        }
    `
    }
    </div>

    
    <div class="A">⒋&nbsp;${name4}</div>
    <div class="B" style="display: none;">
    [${wtype4}]&nbsp;<br>威力:${powerdisplay4}&nbsp;命中:${accuracydisplay4}&nbsp;PP:${pp4}&nbsp;<br>分類:${moveClass4}&nbsp;優先度:${priority4}&nbsp;接触:${contact4}&nbsp;王者:${king4}&nbsp;No:${no4}<br>効果:${effect4}<br>
    </div><br>
    
    
    <div class="damage">
    ${
      moveClass4 === "変化"
        ? `<p>変化技</p>`
        : power4 === kisoS3Power4
        ? `
    <p>威力:${power4}<span class="hosei">${myIryokuDisplay4}${myAbiIryokuDisplay4}${tekiAbiIryokuGENDisplay4}</span><br>[通常]<br>[割合]${calc6KS3Power4}%~${calc5KS3Power4}%<span class="hosei">${myDamageHoseiDisplay4}${teki3kinomiDisplay4}${myTekiouDisplay4}${tekiAbiDamageGENDisplay4}${myAbiIromegaDisplay4}${myYakedoDisplay4}${myReflecDisplay4}${myHikarikabeDisplay4}${myTenkiDisplay4}${myMoraibiDisplay4}</span><br>[ダメージ]${calc4KS3Power4}~${calc3KS3Power4}</p>
    <p>[急所]<br>[割合]${calc6KS3Power4Critical}%~${calc5KS3Power4Critical}%<span class="hosei">${myYakedoDisplay4}</span><br>[ダメージ]${calc4KS3Power4Critical}~${calc3KS3Power4Critical}</p>`
        : `
    ※威力不定
        ${
          power4 === 0
            ? `技効果適用時<p>
    威力:${kisoS3Power4}<span class="hosei">${myIryokuDisplay4}${myAbiIryokuDisplay4}${tekiAbiIryokuGENDisplay4}</span><br>[通常]<br>[割合]${calc6KS3Power4}%~${calc5KS3Power4}%<span class="hosei">${myDamageHoseiDisplay4}${teki3kinomiDisplay4}${myTekiouDisplay4}${tekiAbiDamageGENDisplay4}${myAbiIromegaDisplay4}${myYakedoDisplay4}${myReflecDisplay4}${myHikarikabeDisplay4}${myTenkiDisplay4}${myMoraibiDisplay4}</span><br>[ダメージ]${calc4KS3Power4}~${calc3KS3Power4}</p>
    <p>[急所]<br>[割合]${calc6KS3Power4Critical}%~${calc5KS3Power4Critical}%<span class="hosei">${myYakedoDisplay4}</span><br>[ダメージ]${calc4KS3Power4Critical}~${calc3KS3Power4Critical}</p>`
            : `<p>威力:${power4}<span class="hosei">${myIryokuDisplay4}${myAbiIryokuDisplay4}${tekiAbiIryokuGENDisplay4}</span><br>[通常]<br>[割合]${calc6P4_S3}%~${calc5P4_S3}%<span class="hosei">${myDamageHoseiDisplay4}${teki3kinomiDisplay4}${myTekiouDisplay4}${tekiAbiDamageGENDisplay4}${myAbiIromegaDisplay4}${myYakedoDisplay4}${myReflecDisplay4}${myHikarikabeDisplay4}${myTenkiDisplay4}${myMoraibiDisplay4}</span><br>[ダメージ]${calc4P4_S3}~${calc3P4_S3}</p>
            <p>[急所]<br>[割合]${calc6P4_S3Critical}%~${calc5P4_S3Critical}%<span class="hosei">${myYakedoDisplay4}</span><br>[ダメージ]${calc4P4_S3Critical}~${calc3P4_S3Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoS3Power4}<span class="hosei">${myIryokuDisplay4}${myAbiIryokuDisplay4}${tekiAbiIryokuGENDisplay4}</span><br>[通常]<br>[割合]${calc6KS3Power4}%~${calc5KS3Power4}%<span class="hosei">${myDamageHoseiDisplay4}${teki3kinomiDisplay4}${myTekiouDisplay4}${tekiAbiDamageGENDisplay4}${myAbiIromegaDisplay4}${myYakedoDisplay4}${myReflecDisplay4}${myHikarikabeDisplay4}${myTenkiDisplay4}${myMoraibiDisplay4}</span><br>[ダメージ]${calc4KS3Power4}~${calc3KS3Power4}</p>
            <p>[急所]<br>[割合]${calc6KS3Power4Critical}%~${calc5KS3Power4Critical}%<span class="hosei">${myYakedoDisplay4}</span><br>[ダメージ]${calc4KS3Power4Critical}~${calc3KS3Power4Critical}</p>`
        }
    `
    }
    </div>
    `;

      // すべてのA要素を取得する
      const trainerDetailAs = pokeStatus3.querySelectorAll(".A");

      trainerDetailAs.forEach((trainerDetailA) => {
        // クリックイベントリスナーを設定する
        trainerDetailA.addEventListener("click", () => {
          // クリックされたA要素の次の兄弟要素を取得する
          const trainerDetailB = trainerDetailA.nextElementSibling;

          // 兄弟要素が存在しているかをチェックし、存在している場合には表示を切り替える
          if (trainerDetailB) {
            trainerDetailB.style.display = trainerDetailB.style.display === "none" ? "block" : "none";
          }
        });
      });
    }
  }

  //!自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃自分が攻撃
  // 型4へ攻撃

  if (
    tekipokeMove1S4 === undefined ||
    tekipokeMove2S4 === undefined ||
    tekipokeMove3S4 === undefined ||
    tekipokeMove4S4 === undefined
  ) {
    const pokeStatus4 = document.getElementById("M4_tab3");
    pokeStatus4.innerHTML = "該当の型は存在しません";
  } else {
    if (lvVal === 100 && (tekipokeBfNoshape4 < trainerUnder100 || tekipokeBfNoshape4 > trainerTop100)) {
      const pokeStatus4 = document.getElementById("M4_tab3");
      pokeStatus4.innerHTML = `${trainerName}は型${tekipokeShape4}を使用しません。`;
    } else if (lvVal === 50 && (tekipokeBfNoshape4 < trainerUnder50 || tekipokeBfNoshape4 > trainerTop50)) {
      const pokeStatus4 = document.getElementById("M4_tab3");
      pokeStatus4.innerHTML = `${trainerName}は型${tekipokeShape4}を使用しません。`;
    } else {
      // 通常の処理をここに書く

      //   // document.getElementById('iconA').src = 'https://veekun.com/dex/media/pokemon/icons/' + NoA + '.png';

      const pokeStatus4 = document.getElementById("M4_tab3");
      pokeStatus4.innerHTML = `
      [自]${NAME}<img src="${myImageUrl}">
      →
      [敵]${tekiNAME}型${tekipokeShape4}<img src="${tekiImageUrl}">


      <br><br>
    <p class="ST">
    [自]補正後ステータス<br>
    <span class="itemMoji">@${mypokeItemName}</span><br>
    <span class="moji">H</span>${mypokeStatusH}<br>
    <span class="moji">A</span>${mypokeStatusARanked}<span class="hosei">
    
    ${mySurosutaDisplay}${myYogaDisplay}${myKonjouDisplay}${myKodahachiDisplay}${myHoneDisplay}${myRankADisplay}</span><br>
    
    <span class="moji">B</span>${mypokeStatusBRanked}<span class="hosei">${myRankBDisplay}${myFusiginaurokoDisplay}</span><br>
    <span class="moji">C</span>${mypokeStatusCRanked}<span class="hosei">${myKodamegaDisplay}${myRankCDisplay}</span><br>
    <span class="moji">D</span>${mypokeStatusDRanked}<span class="hosei">${myShinkaiDisplay}${mySunaarashiDisplay}${myRankDDisplay}</span><br>
    <span class="moji">S</span>${mypokeStatusSRanked}<span class="hosei">${mySurosutaDisplay}${myRankSDisplay}${myKodascarfDisplay}${myTekkyuDisplay}${myParalysisDisplay}</span>
    <br>

    [敵(型4)]補正後ステータス<br>
    <span class="itemMoji">@${tekipokeItemName4}</span><br>
    <span class="moji">H</span>${tekipokeStatusHS4}<br>
    <span class="moji">A</span>${tekipokeStatusAS4Ranked}<span class="hosei">
    
    ${tekiSurosutaDisplay}${tekiYogaDisplay}${tekiKonjouDisplay}${tekiKodahachiDisplay4}${tekiHoneDisplay4}${tekiRankADisplay}</span><br>
    
    <span class="moji">B</span>${tekipokeStatusBS4Ranked}<span class="hosei">${tekiRankBDisplay}${tekiFusiginaurokoDisplay}</span><br>
    <span class="moji">C</span>${tekipokeStatusCS4Ranked}<span class="hosei">${tekiKodamegaDisplay4}${tekiRankCDisplay}</span><br>
    <span class="moji">D</span>${tekipokeStatusDS4Ranked}<span class="hosei">${tekiShinkaiDisplay4}${tekiSunaarashiDisplay}${tekiRankDDisplay}</span><br>
    <span class="moji">S</span>${tekipokeStatusSS4Ranked}<span class="hosei">${tekiSurosutaDisplay}${tekiRankSDisplay}${tekiKodascarfDisplay4}${tekiTekkyuDisplay4}
    ${tekiParalysisDisplay}</span>
    </p>




    <div class="A">⒈&nbsp;${name1}</div>
    <div class="B" style="display: none;">
    [${wtype1}]&nbsp;<br>威力:${powerdisplay1}&nbsp;命中:${accuracydisplay1}&nbsp;PP:${pp1}&nbsp;<br>分類:${moveClass1}&nbsp;優先度:${priority1}&nbsp;接触:${contact1}&nbsp;王者:${king1}&nbsp;No:${no1}<br>効果:${effect1}<br>
    </div><br>
    






    <div class="damage">
    ${
      moveClass1 === "変化"
        ? `<p>変化技</p>`
        : power1 === kisoS4Power1
        ? `
    <p>威力:${power1}<span class="hosei">${myIryokuDisplay1}${myAbiIryokuDisplay1}${tekiAbiIryokuGENDisplay1}</span><br>[通常]<br>[割合]${calc6KS4Power1}%~${calc5KS4Power1}%<span class="hosei">${myDamageHoseiDisplay1}${teki4kinomiDisplay1}${myTekiouDisplay1}${tekiAbiDamageGENDisplay1}${myAbiIromegaDisplay1}${myYakedoDisplay1}${myReflecDisplay1}${myHikarikabeDisplay1}${myTenkiDisplay1}${myMoraibiDisplay1}</span><br>[ダメージ]${calc4KS4Power1}~${calc3KS4Power1}</p>
    <p>[急所]<br>[割合]${calc6KS4Power1Critical}%~${calc5KS4Power1Critical}%<span class="hosei">${myYakedoDisplay1}</span><br>[ダメージ]${calc4KS4Power1Critical}~${calc3KS4Power1Critical}</p>`
        : `
    ※威力不定
        ${
          power1 === 0
            ? `技効果適用時<p>
    威力:${kisoS4Power1}<span class="hosei">${myIryokuDisplay1}${myAbiIryokuDisplay1}${tekiAbiIryokuGENDisplay1}</span><br>[通常]<br>[割合]${calc6KS4Power1}%~${calc5KS4Power1}%<span class="hosei">${myDamageHoseiDisplay1}${teki4kinomiDisplay1}${myTekiouDisplay1}${tekiAbiDamageGENDisplay1}${myAbiIromegaDisplay1}${myYakedoDisplay1}${myReflecDisplay1}${myHikarikabeDisplay1}${myTenkiDisplay1}${myMoraibiDisplay1}</span><br>[ダメージ]${calc4KS4Power1}~${calc3KS4Power1}</p>
    <p>[急所]<br>[割合]${calc6KS4Power1Critical}%~${calc5KS4Power1Critical}%<span class="hosei">${myYakedoDisplay1}</span><br>[ダメージ]${calc4KS4Power1Critical}~${calc3KS4Power1Critical}</p>`
            : `<p>威力:${power1}<span class="hosei">${myIryokuDisplay1}${myAbiIryokuDisplay1}${tekiAbiIryokuGENDisplay1}</span><br>[通常]<br>[割合]${calc6P1_S4}%~${calc5P1_S4}%<span class="hosei">${myDamageHoseiDisplay1}${teki4kinomiDisplay1}${myTekiouDisplay1}${tekiAbiDamageGENDisplay1}${myAbiIromegaDisplay1}${myYakedoDisplay1}${myReflecDisplay1}${myHikarikabeDisplay1}${myTenkiDisplay1}${myMoraibiDisplay1}</span><br>[ダメージ]${calc4P1_S4}~${calc3P1_S4}</p>
            <p>[急所]<br>[割合]${calc6P1_S4Critical}%~${calc5P1_S4Critical}%<span class="hosei">${myYakedoDisplay1}</span><br>[ダメージ]${calc4P1_S4Critical}~${calc3P1_S4Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoS4Power1}<span class="hosei">${myIryokuDisplay1}${myAbiIryokuDisplay1}${tekiAbiIryokuGENDisplay1}</span><br>[通常]<br>[割合]${calc6KS4Power1}%~${calc5KS4Power1}%<span class="hosei">${myDamageHoseiDisplay1}${teki4kinomiDisplay1}${myTekiouDisplay1}${tekiAbiDamageGENDisplay1}${myAbiIromegaDisplay1}${myYakedoDisplay1}${myReflecDisplay1}${myHikarikabeDisplay1}${myTenkiDisplay1}${myMoraibiDisplay1}</span><br>[ダメージ]${calc4KS4Power1}~${calc3KS4Power1}</p>
            <p>[急所]<br>[割合]${calc6KS4Power1Critical}%~${calc5KS4Power1Critical}%<span class="hosei">${myYakedoDisplay1}</span><br>[ダメージ]${calc4KS4Power1Critical}~${calc3KS4Power1Critical}</p>`
        }
    `
    }
    </div>




    <div class="A">⒉&nbsp;${name2}</div>
    <div class="B" style="display: none;">
    [${wtype2}]&nbsp;<br>威力:${powerdisplay2}&nbsp;命中:${accuracydisplay2}&nbsp;PP:${pp2}&nbsp;<br>分類:${moveClass2}&nbsp;優先度:${priority2}&nbsp;接触:${contact2}&nbsp;王者:${king2}&nbsp;No:${no2}<br>効果:${effect2}<br>
    </div><br>


    <div class="damage">
    ${
      moveClass2 === "変化"
        ? `<p>変化技</p>`
        : power2 === kisoS4Power2
        ? `
    <p>威力:${power2}<span class="hosei">${myIryokuDisplay2}${myAbiIryokuDisplay2}${tekiAbiIryokuGENDisplay2}</span><br>[通常]<br>[割合]${calc6KS4Power2}%~${calc5KS4Power2}%<span class="hosei">${myDamageHoseiDisplay2}${teki4kinomiDisplay2}${myTekiouDisplay2}${tekiAbiDamageGENDisplay2}${myAbiIromegaDisplay2}${myYakedoDisplay2}${myReflecDisplay2}${myHikarikabeDisplay2}${myTenkiDisplay2}${myMoraibiDisplay2}</span><br>[ダメージ]${calc4KS4Power2}~${calc3KS4Power2}</p>
    <p>[急所]<br>[割合]${calc6KS4Power2Critical}%~${calc5KS4Power2Critical}%<span class="hosei">${myYakedoDisplay2}</span><br>[ダメージ]${calc4KS4Power2Critical}~${calc3KS4Power2Critical}</p>`
        : `
    ※威力不定
        ${
          power2 === 0
            ? `技効果適用時<p>
    威力:${kisoS4Power2}<span class="hosei">${myIryokuDisplay2}${myAbiIryokuDisplay2}${tekiAbiIryokuGENDisplay2}</span><br>[通常]<br>[割合]${calc6KS4Power2}%~${calc5KS4Power2}%<span class="hosei">${myDamageHoseiDisplay2}${teki4kinomiDisplay2}${myTekiouDisplay2}${tekiAbiDamageGENDisplay2}${myAbiIromegaDisplay2}${myYakedoDisplay2}${myReflecDisplay2}${myHikarikabeDisplay2}${myTenkiDisplay2}${myMoraibiDisplay2}</span><br>[ダメージ]${calc4KS4Power2}~${calc3KS4Power2}</p>
    <p>[急所]<br>[割合]${calc6KS4Power2Critical}%~${calc5KS4Power2Critical}%<span class="hosei">${myYakedoDisplay2}</span><br>[ダメージ]${calc4KS4Power2Critical}~${calc3KS4Power2Critical}</p>`
            : `<p>威力:${power2}<span class="hosei">${myIryokuDisplay2}${myAbiIryokuDisplay2}${tekiAbiIryokuGENDisplay2}</span><br>[通常]<br>[割合]${calc6P2_S4}%~${calc5P2_S4}%<span class="hosei">${myDamageHoseiDisplay2}${teki4kinomiDisplay2}${myTekiouDisplay2}${tekiAbiDamageGENDisplay2}${myAbiIromegaDisplay2}${myYakedoDisplay2}${myReflecDisplay2}${myHikarikabeDisplay2}${myTenkiDisplay2}${myMoraibiDisplay2}</span><br>[ダメージ]${calc4P2_S4}~${calc3P2_S4}</p>
            <p>[急所]<br>[割合]${calc6P2_S4Critical}%~${calc5P2_S4Critical}%<span class="hosei">${myYakedoDisplay2}</span><br>[ダメージ]${calc4P2_S4Critical}~${calc3P2_S4Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoS4Power2}<span class="hosei">${myIryokuDisplay2}${myAbiIryokuDisplay2}${tekiAbiIryokuGENDisplay2}</span><br>[通常]<br>[割合]${calc6KS4Power2}%~${calc5KS4Power2}%<span class="hosei">${myDamageHoseiDisplay2}${teki4kinomiDisplay2}${myTekiouDisplay2}${tekiAbiDamageGENDisplay2}${myAbiIromegaDisplay2}${myYakedoDisplay2}${myReflecDisplay2}${myHikarikabeDisplay2}${myTenkiDisplay2}${myMoraibiDisplay2}</span><br>[ダメージ]${calc4KS4Power2}~${calc3KS4Power2}</p>
            <p>[急所]<br>[割合]${calc6KS4Power2Critical}%~${calc5KS4Power2Critical}%<span class="hosei">${myYakedoDisplay2}</span><br>[ダメージ]${calc4KS4Power2Critical}~${calc3KS4Power2Critical}</p>`
        }
    `
    }
    </div>








    


    <div class="A">⒊&nbsp;${name3}</div>
    <div class="B" style="display: none;">
    [${wtype3}]&nbsp;<br>威力:${powerdisplay3}&nbsp;命中:${accuracydisplay3}&nbsp;PP:${pp3}&nbsp;<br>分類:${moveClass3}&nbsp;優先度:${priority3}&nbsp;接触:${contact3}&nbsp;王者:${king3}&nbsp;No:${no3}<br>効果:${effect3}<br>
    </div><br>

    <div class="damage">
    ${
      moveClass3 === "変化"
        ? `<p>変化技</p>`
        : power3 === kisoS4Power3
        ? `
    <p>威力:${power3}<span class="hosei">${myIryokuDisplay3}${myAbiIryokuDisplay3}${tekiAbiIryokuGENDisplay3}</span><br>[通常]<br>[割合]${calc6KS4Power3}%~${calc5KS4Power3}%<span class="hosei">${myDamageHoseiDisplay3}${teki4kinomiDisplay3}${myTekiouDisplay3}${tekiAbiDamageGENDisplay3}${myAbiIromegaDisplay3}${myYakedoDisplay3}${myReflecDisplay3}${myHikarikabeDisplay3}${myTenkiDisplay3}${myMoraibiDisplay3}</span><br>[ダメージ]${calc4KS4Power3}~${calc3KS4Power3}</p>
    <p>[急所]<br>[割合]${calc6KS4Power3Critical}%~${calc5KS4Power3Critical}%<span class="hosei">${myYakedoDisplay3}</span><br>[ダメージ]${calc4KS4Power3Critical}~${calc3KS4Power3Critical}</p>`
        : `
    ※威力不定
        ${
          power3 === 0
            ? `技効果適用時<p>
    威力:${kisoS4Power3}<span class="hosei">${myIryokuDisplay3}${myAbiIryokuDisplay3}${tekiAbiIryokuGENDisplay3}</span><br>[通常]<br>[割合]${calc6KS4Power3}%~${calc5KS4Power3}%<span class="hosei">${myDamageHoseiDisplay3}${teki4kinomiDisplay3}${myTekiouDisplay3}${tekiAbiDamageGENDisplay3}${myAbiIromegaDisplay3}${myYakedoDisplay3}${myReflecDisplay3}${myHikarikabeDisplay3}${myTenkiDisplay3}${myMoraibiDisplay3}</span><br>[ダメージ]${calc4KS4Power3}~${calc3KS4Power3}</p>
    <p>[急所]<br>[割合]${calc6KS4Power3Critical}%~${calc5KS4Power3Critical}%<span class="hosei">${myYakedoDisplay3}</span><br>[ダメージ]${calc4KS4Power3Critical}~${calc3KS4Power3Critical}</p>`
            : `<p>威力:${power3}<span class="hosei">${myIryokuDisplay3}${myAbiIryokuDisplay3}${tekiAbiIryokuGENDisplay3}</span><br>[通常]<br>[割合]${calc6P3_S4}%~${calc5P3_S4}%<span class="hosei">${myDamageHoseiDisplay3}${teki4kinomiDisplay3}${myTekiouDisplay3}${tekiAbiDamageGENDisplay3}${myAbiIromegaDisplay3}${myYakedoDisplay3}${myReflecDisplay3}${myHikarikabeDisplay3}${myTenkiDisplay3}${myMoraibiDisplay3}</span><br>[ダメージ]${calc4P3_S4}~${calc3P3_S4}</p>
            <p>[急所]<br>[割合]${calc6P3_S4Critical}%~${calc5P3_S4Critical}%<span class="hosei">${myYakedoDisplay3}</span><br>[ダメージ]${calc4P3_S4Critical}~${calc3P3_S4Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoS4Power3}<span class="hosei">${myIryokuDisplay3}${myAbiIryokuDisplay3}${tekiAbiIryokuGENDisplay3}</span><br>[通常]<br>[割合]${calc6KS4Power3}%~${calc5KS4Power3}%<span class="hosei">${myDamageHoseiDisplay3}${teki4kinomiDisplay3}${myTekiouDisplay3}${tekiAbiDamageGENDisplay3}${myAbiIromegaDisplay3}${myYakedoDisplay3}${myReflecDisplay3}${myHikarikabeDisplay3}${myTenkiDisplay3}${myMoraibiDisplay3}</span><br>[ダメージ]${calc4KS4Power3}~${calc3KS4Power3}</p>
            <p>[急所]<br>[割合]${calc6KS4Power3Critical}%~${calc5KS4Power3Critical}%<span class="hosei">${myYakedoDisplay3}</span><br>[ダメージ]${calc4KS4Power3Critical}~${calc3KS4Power3Critical}</p>`
        }
    `
    }
    </div>

    
    <div class="A">⒋&nbsp;${name4}</div>
    <div class="B" style="display: none;">
    [${wtype4}]&nbsp;<br>威力:${powerdisplay4}&nbsp;命中:${accuracydisplay4}&nbsp;PP:${pp4}&nbsp;<br>分類:${moveClass4}&nbsp;優先度:${priority4}&nbsp;接触:${contact4}&nbsp;王者:${king4}&nbsp;No:${no4}<br>効果:${effect4}<br>
    </div><br>
    
    
    <div class="damage">
    ${
      moveClass4 === "変化"
        ? `<p>変化技</p>`
        : power4 === kisoS4Power4
        ? `
    <p>威力:${power4}<span class="hosei">${myIryokuDisplay4}${myAbiIryokuDisplay4}${tekiAbiIryokuGENDisplay4}</span><br>[通常]<br>[割合]${calc6KS4Power4}%~${calc5KS4Power4}%<span class="hosei">${myDamageHoseiDisplay4}${teki4kinomiDisplay4}${myTekiouDisplay4}${tekiAbiDamageGENDisplay4}${myAbiIromegaDisplay4}${myYakedoDisplay4}${myReflecDisplay4}${myHikarikabeDisplay4}${myTenkiDisplay4}${myMoraibiDisplay4}</span><br>[ダメージ]${calc4KS4Power4}~${calc3KS4Power4}</p>
    <p>[急所]<br>[割合]${calc6KS4Power4Critical}%~${calc5KS4Power4Critical}%<span class="hosei">${myYakedoDisplay4}</span><br>[ダメージ]${calc4KS4Power4Critical}~${calc3KS4Power4Critical}</p>`
        : `
    ※威力不定
        ${
          power4 === 0
            ? `技効果適用時<p>
    威力:${kisoS4Power4}<span class="hosei">${myIryokuDisplay4}${myAbiIryokuDisplay4}${tekiAbiIryokuGENDisplay4}</span><br>[通常]<br>[割合]${calc6KS4Power4}%~${calc5KS4Power4}%<span class="hosei">${myDamageHoseiDisplay4}${teki4kinomiDisplay4}${myTekiouDisplay4}${tekiAbiDamageGENDisplay4}${myAbiIromegaDisplay4}${myYakedoDisplay4}${myReflecDisplay4}${myHikarikabeDisplay4}${myTenkiDisplay4}${myMoraibiDisplay4}</span><br>[ダメージ]${calc4KS4Power4}~${calc3KS4Power4}</p>
    <p>[急所]<br>[割合]${calc6KS4Power4Critical}%~${calc5KS4Power4Critical}%<span class="hosei">${myYakedoDisplay4}</span><br>[ダメージ]${calc4KS4Power4Critical}~${calc3KS4Power4Critical}</p>`
            : `<p>威力:${power4}<span class="hosei">${myIryokuDisplay4}${myAbiIryokuDisplay4}${tekiAbiIryokuGENDisplay4}</span><br>[通常]<br>[割合]${calc6P4_S4}%~${calc5P4_S4}%<span class="hosei">${myDamageHoseiDisplay4}${teki4kinomiDisplay4}${myTekiouDisplay4}${tekiAbiDamageGENDisplay4}${myAbiIromegaDisplay4}${myYakedoDisplay4}${myReflecDisplay4}${myHikarikabeDisplay4}${myTenkiDisplay4}${myMoraibiDisplay4}</span><br>[ダメージ]${calc4P4_S4}~${calc3P4_S4}</p>
            <p>[急所]<br>[割合]${calc6P4_S4Critical}%~${calc5P4_S4Critical}%<span class="hosei">${myYakedoDisplay4}</span><br>[ダメージ]${calc4P4_S4Critical}~${calc3P4_S4Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoS4Power4}<span class="hosei">${myIryokuDisplay4}${myAbiIryokuDisplay4}${tekiAbiIryokuGENDisplay4}</span><br>[通常]<br>[割合]${calc6KS4Power4}%~${calc5KS4Power4}%<span class="hosei">${myDamageHoseiDisplay4}${teki4kinomiDisplay4}${myTekiouDisplay4}${tekiAbiDamageGENDisplay4}${myAbiIromegaDisplay4}${myYakedoDisplay4}${myReflecDisplay4}${myHikarikabeDisplay4}${myTenkiDisplay4}${myMoraibiDisplay4}</span><br>[ダメージ]${calc4KS4Power4}~${calc3KS4Power4}</p>
            <p>[急所]<br>[割合]${calc6KS4Power4Critical}%~${calc5KS4Power4Critical}%<span class="hosei">${myYakedoDisplay4}</span><br>[ダメージ]${calc4KS4Power4Critical}~${calc3KS4Power4Critical}</p>`
        }
    `
    }
    </div>
    `;

      // すべてのA要素を取得する
      const trainerDetailAs = pokeStatus4.querySelectorAll(".A");

      trainerDetailAs.forEach((trainerDetailA) => {
        // クリックイベントリスナーを設定する
        trainerDetailA.addEventListener("click", () => {
          // クリックされたA要素の次の兄弟要素を取得する
          const trainerDetailB = trainerDetailA.nextElementSibling;

          // 兄弟要素が存在しているかをチェックし、存在している場合には表示を切り替える
          if (trainerDetailB) {
            trainerDetailB.style.display = trainerDetailB.style.display === "none" ? "block" : "none";
          }
        });
      });
    }
  }

  //!敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃
  //!敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃
  //!敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃
  //!敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃敵型1が攻撃

  if (
    tekipokeMove1S1 === undefined ||
    tekipokeMove2S1 === undefined ||
    tekipokeMove3S1 === undefined ||
    tekipokeMove4S1 === undefined
  ) {
    const pokeStatus5 = document.getElementById("T1_tab3");
    pokeStatus5.innerHTML = "該当の型は存在しません";
  } else {
    if (lvVal === 100 && (tekipokeBfNoshape1 < trainerUnder100 || tekipokeBfNoshape1 > trainerTop100)) {
      const pokeStatus5 = document.getElementById("T1_tab3");
      pokeStatus5.innerHTML = `${trainerName}は型${tekipokeShape1}を使用しません。`;
    } else if (lvVal === 50 && (tekipokeBfNoshape1 < trainerUnder50 || tekipokeBfNoshape1 > trainerTop50)) {
      const pokeStatus5 = document.getElementById("T1_tab3");
      pokeStatus5.innerHTML = `${trainerName}は型${tekipokeShape1}を使用しません。`;
    } else {
      // 通常の処理をここに書く

      //   // document.getElementById('iconA').src = 'https://veekun.com/dex/media/pokemon/icons/' + NoA + '.png';

      // //敵ポケ１の型が使う4つの技
      // let calc6P1S1 = (calc4P1S1 / mypokeStatusH * 100).toFixed(1); //敵ポケ１技1例外補正なし威力
      // let calc6P2S1 = (calc4P2S1 / mypokeStatusH * 100).toFixed(1); //敵ポケ１技2例外補正なし威力
      // let calc6P3S1 = (calc4P3S1 / mypokeStatusH * 100).toFixed(1); //敵ポケ１技3例外補正なし威力
      // let calc6P4S1 = (calc4P4S1 / mypokeStatusH * 100).toFixed(1); //敵ポケ１技4例外補正なし威力
      // //敵ポケ2の型が使う4つの技
      // let calc6P1S2 = (calc4P1S2 / mypokeStatusH * 100).toFixed(1); //敵ポケ2技1例外補正なし威力
      // let calc6P2S2 = (calc4P2S2 / mypokeStatusH * 100).toFixed(1); //敵ポケ2技2例外補正なし威力
      // let calc6P3S2 = (calc4P3S2 / mypokeStatusH * 100).toFixed(1); //敵ポケ2技3例外補正なし威力
      // let calc6P4S2 = (calc4P4S2 / mypokeStatusH * 100).toFixed(1); //敵ポケ2技4例外補正なし威力
      // //敵ポケ3の型が使う4つの技
      // let calc6P1S3 = (calc4P1S3 / mypokeStatusH * 100).toFixed(1); //敵ポケ3技1例外補正なし威力
      // let calc6P2S3 = (calc4P2S3 / mypokeStatusH * 100).toFixed(1); //敵ポケ3技2例外補正なし威力
      // let calc6P3S3 = (calc4P3S3 / mypokeStatusH * 100).toFixed(1); //敵ポケ3技3例外補正なし威力
      // let calc6P4S3 = (calc4P4S3 / mypokeStatusH * 100).toFixed(1); //敵ポケ3技4例外補正なし威力
      // //敵ポケ4の型が使う4つの技
      // let calc6P1S4 = (calc4P1S4 / mypokeStatusH * 100).toFixed(1); //敵ポケ4技1例外補正なし威力
      // let calc6P2S4 = (calc4P2S4 / mypokeStatusH * 100).toFixed(1); //敵ポケ4技2例外補正なし威力
      // let calc6P3S4 = (calc4P3S4 / mypokeStatusH * 100).toFixed(1); //敵ポケ4技3例外補正なし威力
      // let calc6P4S4 = (calc4P4S4 / mypokeStatusH * 100).toFixed(1); //敵ポケ4技4例外補正なし威力

      // let calc6KPower1S1 = (calc4KPower1S1 / mypokeStatusH * 100).toFixed(1);  //敵1ポケ技1（補正あり）威力
      // let calc6KPower2S1 = (calc4KPower2S1 / mypokeStatusH * 100).toFixed(1);  //敵1ポケ技2（補正あり）威力
      // let calc6KPower3S1 = (calc4KPower3S1 / mypokeStatusH * 100).toFixed(1);  //敵1ポケ技3（補正あり）威力
      // let calc6KPower4S1 = (calc4KPower4S1 / mypokeStatusH * 100).toFixed(1);  //敵1ポケ技4（補正あり）威力

      // let calc6KPower1S2 = (calc4KPower1S2 / mypokeStatusH * 100).toFixed(1);  //敵2ポケ技1（補正あり）威力
      // let calc6KPower2S2 = (calc4KPower2S2 / mypokeStatusH * 100).toFixed(1);  //敵2ポケ技2（補正あり）威力
      // let calc6KPower3S2 = (calc4KPower3S2 / mypokeStatusH * 100).toFixed(1);  //敵2ポケ技3（補正あり）威力
      // let calc6KPower4S2 = (calc4KPower4S2 / mypokeStatusH * 100).toFixed(1);  //敵2ポケ技4（補正あり）威力

      // let calc6KPower1S3 = (calc4KPower1S3 / mypokeStatusH * 100).toFixed(1);  //敵3ポケ技1（補正あり）威力
      // let calc6KPower2S3 = (calc4KPower2S3 / mypokeStatusH * 100).toFixed(1);  //敵3ポケ技2（補正あり）威力
      // let calc6KPower3S3 = (calc4KPower3S3 / mypokeStatusH * 100).toFixed(1);  //敵3ポケ技3（補正あり）威力
      // let calc6KPower4S3 = (calc4KPower4S3 / mypokeStatusH * 100).toFixed(1);  //敵3ポケ技4（補正あり）威力

      // let calc6KPower1S4 = (calc4KPower1S4 / mypokeStatusH * 100).toFixed(1);  //敵4ポケ技1（補正あり）威力
      // let calc6KPower2S4 = (calc4KPower2S4 / mypokeStatusH * 100).toFixed(1);  //敵4ポケ技2（補正あり）威力
      // let calc6KPower3S4 = (calc4KPower3S4 / mypokeStatusH * 100).toFixed(1);  //敵4ポケ技3（補正あり）威力
      // let calc6KPower4S4 = (calc4KPower4S4 / mypokeStatusH * 100).toFixed(1);  //敵4ポケ技4（補正あり）威力

      // //敵ポケ１の型が使う4つの技
      // let calc6P1S1Critical = (calc4P1S1Critical / tekipokeStatusHS1 * 100).toFixed(1); //敵ポケ１技1例外補正なし威力
      // let calc6P2S1Critical = (calc4P2S1Critical / tekipokeStatusHS1 * 100).toFixed(1); //敵ポケ１技2例外補正なし威力
      // let calc6P3S1Critical = (calc4P3S1Critical / tekipokeStatusHS1 * 100).toFixed(1); //敵ポケ１技3例外補正なし威力
      // let calc6P4S1Critical = (calc4P4S1Critical / tekipokeStatusHS1 * 100).toFixed(1); //敵ポケ１技4例外補正なし威力
      // let calc6P1S2Critical = (calc4P1S2Critical / tekipokeStatusHS2 * 100).toFixed(1); //敵ポケ2技1例外補正なし威力
      // let calc6P2S2Critical = (calc4P2S2Critical / tekipokeStatusHS2 * 100).toFixed(1); //敵ポケ2技2例外補正なし威力
      // let calc6P3S2Critical = (calc4P3S2Critical / tekipokeStatusHS2 * 100).toFixed(1); //敵ポケ2技3例外補正なし威力
      // let calc6P4S2Critical = (calc4P4S2Critical / tekipokeStatusHS2 * 100).toFixed(1); //敵ポケ2技4例外補正なし威力
      // let calc6P1S3Critical = (calc4P1S3Critical / tekipokeStatusHS3 * 100).toFixed(1); //敵ポケ3技1例外補正なし威力
      // let calc6P2S3Critical = (calc4P2S3Critical / tekipokeStatusHS3 * 100).toFixed(1); //敵ポケ3技2例外補正なし威力
      // let calc6P3S3Critical = (calc4P3S3Critical / tekipokeStatusHS3 * 100).toFixed(1); //敵ポケ3技3例外補正なし威力
      // let calc6P4S3Critical = (calc4P4S3Critical / tekipokeStatusHS3 * 100).toFixed(1); //敵ポケ3技4例外補正なし威力
      // let calc6P1S4Critical = (calc4P1S4Critical / tekipokeStatusHS4 * 100).toFixed(1); //敵ポケ4技1例外補正なし威力
      // let calc6P2S4Critical = (calc4P2S4Critical / tekipokeStatusHS4 * 100).toFixed(1); //敵ポケ4技2例外補正なし威力
      // let calc6P3S4Critical = (calc4P3S4Critical / tekipokeStatusHS4 * 100).toFixed(1); //敵ポケ4技3例外補正なし威力
      // let calc6P4S4Critical = (calc4P4S4Critical / tekipokeStatusHS4 * 100).toFixed(1); //敵ポケ4技4例外補正なし威力

      // let calc6KPower1S1Critical = (calc4KPower1S1Critical / tekipokeStatusHS1 * 100).toFixed(1);  //敵1ポケ技1（補正あり）威力
      // let calc6KPower2S1Critical = (calc4KPower2S1Critical / tekipokeStatusHS1 * 100).toFixed(1);  //敵1ポケ技2（補正あり）威力
      // let calc6KPower3S1Critical = (calc4KPower3S1Critical / tekipokeStatusHS1 * 100).toFixed(1);  //敵1ポケ技3（補正あり）威力
      // let calc6KPower4S1Critical = (calc4KPower4S1Critical / tekipokeStatusHS1 * 100).toFixed(1);  //敵1ポケ技4（補正あり）威力
      // let calc6KPower1S2Critical = (calc4KPower1S2Critical / tekipokeStatusHS2 * 100).toFixed(1);  //敵2ポケ技1（補正あり）威力
      // let calc6KPower2S2Critical = (calc4KPower2S2Critical / tekipokeStatusHS2 * 100).toFixed(1);  //敵2ポケ技2（補正あり）威力
      // let calc6KPower3S2Critical = (calc4KPower3S2Critical / tekipokeStatusHS2 * 100).toFixed(1);  //敵2ポケ技3（補正あり）威力
      // let calc6KPower4S2Critical = (calc4KPower4S2Critical / tekipokeStatusHS2 * 100).toFixed(1);  //敵2ポケ技4（補正あり）威力
      // let calc6KPower1S3Critical = (calc4KPower1S3Critical / tekipokeStatusHS3 * 100).toFixed(1);  //敵3ポケ技1（補正あり）威力
      // let calc6KPower2S3Critical = (calc4KPower2S3Critical / tekipokeStatusHS3 * 100).toFixed(1);  //敵3ポケ技2（補正あり）威力
      // let calc6KPower3S3Critical = (calc4KPower3S3Critical / tekipokeStatusHS3 * 100).toFixed(1);  //敵3ポケ技3（補正あり）威力
      // let calc6KPower4S3Critical = (calc4KPower4S3Critical / tekipokeStatusHS3 * 100).toFixed(1);  //敵3ポケ技4（補正あり）威力
      // let calc6KPower1S4Critical = (calc4KPower1S4Critical / tekipokeStatusHS4 * 100).toFixed(1);  //敵4ポケ技1（補正あり）威力
      // let calc6KPower2S4Critical = (calc4KPower2S4Critical / tekipokeStatusHS4 * 100).toFixed(1);  //敵4ポケ技2（補正あり）威力
      // let calc6KPower3S4Critical = (calc4KPower3S4Critical / tekipokeStatusHS4 * 100).toFixed(1);  //敵4ポケ技3（補正あり）威力
      // let calc6KPower4S4Critical = (calc4KPower4S4Critical / tekipokeStatusHS4 * 100).toFixed(1);  //敵4ポケ技4（補正あり）威力

      const pokeStatus5 = document.getElementById("T1_tab3");
      pokeStatus5.innerHTML = `
      [敵]${tekiNAME}型${tekipokeShape1}<img src="${tekiImageUrl}">
      →
      [自]${NAME}<img src="${myImageUrl}">


      <br><br>
    <p class="ST">
    [自]補正後ステータス<br>
    <span class="itemMoji">@${mypokeItemName}</span><br>
    <span class="moji">H</span>${mypokeStatusH}<br>
    <span class="moji">A</span>${mypokeStatusARanked}<span class="hosei">
    
    ${mySurosutaDisplay}${myYogaDisplay}${myKonjouDisplay}${myKodahachiDisplay}${myHoneDisplay}${myRankADisplay}</span><br>
    
    <span class="moji">B</span>${mypokeStatusBRanked}<span class="hosei">${myRankBDisplay}${myFusiginaurokoDisplay}</span><br>
    <span class="moji">C</span>${mypokeStatusCRanked}<span class="hosei">${myKodamegaDisplay}${myRankCDisplay}</span><br>
    <span class="moji">D</span>${mypokeStatusDRanked}<span class="hosei">${myShinkaiDisplay}${mySunaarashiDisplay}${myRankDDisplay}</span><br>
    <span class="moji">S</span>${mypokeStatusSRanked}<span class="hosei">${mySurosutaDisplay}${myRankSDisplay}${myKodascarfDisplay}${myTekkyuDisplay}${myParalysisDisplay}</span>
    <br>

    [敵(型1)]補正後ステータス<br>
    <span class="itemMoji">@${tekipokeItemName1}</span><br>
    <span class="moji">H</span>${tekipokeStatusHS1}<br>
    <span class="moji">A</span>${tekipokeStatusAS1Ranked}<span class="hosei">
    
    ${tekiSurosutaDisplay}${tekiYogaDisplay}${tekiKonjouDisplay}${tekiKodahachiDisplay1}${tekiHoneDisplay1}${tekiRankADisplay}</span><br>
    
    <span class="moji">B</span>${tekipokeStatusBS1Ranked}<span class="hosei">${tekiRankBDisplay}${tekiFusiginaurokoDisplay}</span><br>
    <span class="moji">C</span>${tekipokeStatusCS1Ranked}<span class="hosei">${tekiKodamegaDisplay1}${tekiRankCDisplay}</span><br>
    <span class="moji">D</span>${tekipokeStatusDS1Ranked}<span class="hosei">${tekiShinkaiDisplay1}${tekiSunaarashiDisplay}${tekiRankDDisplay}</span><br>
    <span class="moji">S</span>${tekipokeStatusSS1Ranked}<span class="hosei">${tekiSurosutaDisplay}${tekiRankSDisplay}${tekiKodascarfDisplay1}${tekiTekkyuDisplay1}
    ${tekiParalysisDisplay}</span>
    </p>





    <div class="A">⒈&nbsp;${name1S1}</div>
    <div class="B" style="display: none;">
    [${wtype1S1}]&nbsp;<br>威力:${powerdisplay1S1}&nbsp;命中:${accuracydisplay1S1}&nbsp;PP:${pp1S1}&nbsp;<br>分類:${moveClass1S1}&nbsp;優先度:${priority1S1}&nbsp;接触:${contact1S1}&nbsp;王者:${king1S1}&nbsp;No:${no1S1}<br>効果:${effect1S1}<br>
    </div><br>

    



    <div class="damage">
    ${
      moveClass1S1 === "変化"
        ? `<p>変化技</p>`
        : power1S1 === kisoPower1S1
        ? `
    <p>威力:${power1S1}<span class="hosei">${teki1IryokuDisplay1}${tekiAbiIryokuDisplayS1W1}${myAbiIryokuGENDisplayS1W1}</span><br>[通常]<br>[割合]${calc6KPower1S1}%~${calc5KPower1S1}%<span class="hosei">${teki1DamageHoseiDisplay1}${myKinomiDisplayS1W1}${tekiTekiouDisplayS1W1}${myAbiDamageGENDisplayS1W1}${tekiAbiIromegaDisplayS1W1}${tekiYakedoDisplayS1W1}${tekiReflecDisplayS1W1}${tekiHikarikabeDisplayS1W1}${tekiTenkiDisplayS1W1}${tekiMoraibiDisplayS1W1}</span><br>[ダメージ]${calc4KPower1S1}~${calc3KPower1S1}</p>
    <p>[急所]<br>[割合]${calc6KPower1S1Critical}%~${calc5KPower1S1Critical}%<br>[ダメージ]${calc4KPower1S1Critical}~${calc3KPower1S1Critical}</p>`
        : `
    ※威力不定
        ${
          power1S1 === 0
            ? `技効果適用時<p>
    威力:${kisoPower1S1}<span class="hosei">${teki1IryokuDisplay1}${tekiAbiIryokuDisplayS1W1}${myAbiIryokuGENDisplayS1W1}</span><br>[通常]<br>[割合]${calc6KPower1S1}%~${calc5KPower1S1}%<span class="hosei">${teki1DamageHoseiDisplay1}${myKinomiDisplayS1W1}${tekiTekiouDisplayS1W1}${myAbiDamageGENDisplayS1W1}${tekiAbiIromegaDisplayS1W1}${tekiYakedoDisplayS1W1}${tekiReflecDisplayS1W1}${tekiHikarikabeDisplayS1W1}${tekiTenkiDisplayS1W1}${tekiMoraibiDisplayS1W1}</span><br>[ダメージ]${calc4KPower1S1}~${calc3KPower1S1}</p>
    <p>[急所]<br>[割合]${calc6KPower1S1Critical}%~${calc5KPower1S1Critical}%<br>[ダメージ]${calc4KPower1S1Critical}~${calc3KPower1S1Critical}</p>`
            : `<p>威力:${power1S1}<span class="hosei">${teki1IryokuDisplay1}${tekiAbiIryokuDisplayS1W1}${myAbiIryokuGENDisplayS1W1}</span><br>[通常]<br>[割合]${calc6P1S1}%~${calc5P1S1}%<span class="hosei">${teki1DamageHoseiDisplay1}${myKinomiDisplayS1W1}${tekiTekiouDisplayS1W1}${myAbiDamageGENDisplayS1W1}${tekiAbiIromegaDisplayS1W1}${tekiYakedoDisplayS1W1}${tekiReflecDisplayS1W1}${tekiHikarikabeDisplayS1W1}${tekiTenkiDisplayS1W1}${tekiMoraibiDisplayS1W1}</span><br>[ダメージ]${calc4P1S1}~${calc3P1S1}</p>
            <p>[急所]<br>[割合]${calc6P1S1Critical}%~${calc5P1S1Critical}%<br>[ダメージ]${calc4P1S1Critical}~${calc3P1S1Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoPower1S1}<span class="hosei">${teki1IryokuDisplay1}${tekiAbiIryokuDisplayS1W1}${myAbiIryokuGENDisplayS1W1}</span><br>[通常]<br>[割合]${calc6KPower1S1}%~${calc5KPower1S1}%<span class="hosei">${teki1DamageHoseiDisplay1}${myKinomiDisplayS1W1}${tekiTekiouDisplayS1W1}${myAbiDamageGENDisplayS1W1}${tekiAbiIromegaDisplayS1W1}${tekiYakedoDisplayS1W1}${tekiReflecDisplayS1W1}${tekiHikarikabeDisplayS1W1}${tekiTenkiDisplayS1W1}${tekiMoraibiDisplayS1W1}</span><br>[ダメージ]${calc4KPower1S1}~${calc3KPower1S1}</p>
            <p>[急所]<br>[割合]${calc6KPower1S1Critical}%~${calc5KPower1S1Critical}%<br>[ダメージ]${calc4KPower1S1Critical}~${calc3KPower1S1Critical}</p>`
        }
    `
    }
    </div>





    <div class="A">⒉&nbsp;${name2S1}</div>
    <div class="B" style="display: none;">
    [${wtype2S1}]&nbsp;<br>威力:${powerdisplay2S1}&nbsp;命中:${accuracydisplay2S1}&nbsp;PP:${pp2S1}&nbsp;<br>分類:${moveClass2S1}&nbsp;優先度:${priority2S1}&nbsp;接触:${contact2S1}&nbsp;王者:${king2S1}&nbsp;No:${no2S1}<br>効果:${effect2S1}<br>
    </div><br>
    


    <div class="damage">
    ${
      moveClass2S1 === "変化"
        ? `<p>変化技</p>`
        : power2S1 === kisoPower2S1
        ? `
    <p>威力:${power2S1}<span class="hosei">${teki1IryokuDisplay2}${tekiAbiIryokuDisplayS1W2}${myAbiIryokuGENDisplayS1W2}</span><br>[通常]<br>[割合]${calc6KPower2S1}%~${calc5KPower2S1}%<span class="hosei">${teki1DamageHoseiDisplay2}${myKinomiDisplayS1W2}${tekiTekiouDisplayS1W2}${myAbiDamageGENDisplayS1W2}${tekiAbiIromegaDisplayS1W2}${tekiYakedoDisplayS1W2}${tekiReflecDisplayS1W2}${tekiHikarikabeDisplayS1W2}${tekiTenkiDisplayS1W2}${tekiMoraibiDisplayS1W2}</span><br>[ダメージ]${calc4KPower2S1}~${calc3KPower2S1}</p>
    <p>[急所]<br>[割合]${calc6KPower2S1Critical}%~${calc5KPower2S1Critical}%<br>[ダメージ]${calc4KPower2S1Critical}~${calc3KPower2S1Critical}</p>`
        : `
    ※威力不定
        ${
          power2S1 === 0
            ? `技効果適用時<p>
    威力:${kisoPower2S1}<span class="hosei">${teki1IryokuDisplay2}${tekiAbiIryokuDisplayS1W2}${myAbiIryokuGENDisplayS1W2}</span><br>[通常]<br>[割合]${calc6KPower2S1}%~${calc5KPower2S1}%<span class="hosei">${teki1DamageHoseiDisplay2}${myKinomiDisplayS1W2}${tekiTekiouDisplayS1W2}${myAbiDamageGENDisplayS1W2}${tekiAbiIromegaDisplayS1W2}${tekiYakedoDisplayS1W2}${tekiReflecDisplayS1W2}${tekiHikarikabeDisplayS1W2}${tekiTenkiDisplayS1W2}${tekiMoraibiDisplayS1W2}</span><br>[ダメージ]${calc4KPower2S1}~${calc3KPower2S1}</p>
    <p>[急所]<br>[割合]${calc6KPower2S1Critical}%~${calc5KPower2S1Critical}%<br>[ダメージ]${calc4KPower2S1Critical}~${calc3KPower2S1Critical}</p>`
            : `<p>威力:${power2S1}<span class="hosei">${teki1IryokuDisplay2}${tekiAbiIryokuDisplayS1W2}${myAbiIryokuGENDisplayS1W2}</span><br>[通常]<br>[割合]${calc6P2S1}%~${calc5P2S1}%<span class="hosei">${teki1DamageHoseiDisplay2}${myKinomiDisplayS1W2}${tekiTekiouDisplayS1W2}${myAbiDamageGENDisplayS1W2}${tekiAbiIromegaDisplayS1W2}${tekiYakedoDisplayS1W2}${tekiReflecDisplayS1W2}${tekiHikarikabeDisplayS1W2}${tekiTenkiDisplayS1W2}${tekiMoraibiDisplayS1W2}</span><br>[ダメージ]${calc4P2S1}~${calc3P2S1}</p>
            <p>[急所]<br>[割合]${calc6P2S1Critical}%~${calc5P2S1Critical}%<br>[ダメージ]${calc4P2S1Critical}~${calc3P2S1Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoPower2S1}<span class="hosei">${teki1IryokuDisplay2}${tekiAbiIryokuDisplayS1W2}${myAbiIryokuGENDisplayS1W2}</span><br>[通常]<br>[割合]${calc6KPower2S1}%~${calc5KPower2S1}%<span class="hosei">${teki1DamageHoseiDisplay2}${myKinomiDisplayS1W2}${tekiTekiouDisplayS1W2}${myAbiDamageGENDisplayS1W2}${tekiAbiIromegaDisplayS1W2}${tekiYakedoDisplayS1W2}${tekiReflecDisplayS1W2}${tekiHikarikabeDisplayS1W2}${tekiTenkiDisplayS1W2}${tekiMoraibiDisplayS1W2}</span><br>[ダメージ]${calc4KPower2S1}~${calc3KPower2S1}</p>
            <p>[急所]<br>[割合]${calc6KPower2S1Critical}%~${calc5KPower2S1Critical}%<br>[ダメージ]${calc4KPower2S1Critical}~${calc3KPower2S1Critical}</p>`
        }
    `
    }
    </div>








    


    <div class="A">⒊&nbsp;${name3S1}</div>
    <div class="B" style="display: none;">
    [${wtype3S1}]&nbsp;<br>威力:${powerdisplay3S1}&nbsp;命中:${accuracydisplay3S1}&nbsp;PP:${pp3S1}&nbsp;<br>分類:${moveClass3S1}&nbsp;優先度:${priority3S1}&nbsp;接触:${contact3S1}&nbsp;王者:${king3S1}&nbsp;No:${no3S1}<br>効果:${effect3S1}<br>
    </div><br>
    


    <div class="damage">
    ${
      moveClass3S1 === "変化"
        ? `<p>変化技</p>`
        : power3S1 === kisoPower3S1
        ? `
    <p>威力:${power3S1}<span class="hosei">${teki1IryokuDisplay3}${tekiAbiIryokuDisplayS1W3}${myAbiIryokuGENDisplayS1W3}</span><br>[通常]<br>[割合]${calc6KPower3S1}%~${calc5KPower3S1}%<span class="hosei">${teki1DamageHoseiDisplay3}${myKinomiDisplayS1W3}${tekiTekiouDisplayS1W3}${myAbiDamageGENDisplayS1W3}${tekiAbiIromegaDisplayS1W3}${tekiYakedoDisplayS1W3}${tekiReflecDisplayS1W3}${tekiHikarikabeDisplayS1W3}${tekiTenkiDisplayS1W3}${tekiMoraibiDisplayS1W3}</span><br>[ダメージ]${calc4KPower3S1}~${calc3KPower3S1}</p>
    <p>[急所]<br>[割合]${calc6KPower3S1Critical}%~${calc5KPower3S1Critical}%<br>[ダメージ]${calc4KPower3S1Critical}~${calc3KPower3S1Critical}</p>`
        : `
    ※威力不定
        ${
          power3S1 === 0
            ? `技効果適用時<p>
    威力:${kisoPower3S1}<span class="hosei">${teki1IryokuDisplay3}${tekiAbiIryokuDisplayS1W3}${myAbiIryokuGENDisplayS1W3}</span><br>[通常]<br>[割合]${calc6KPower3S1}%~${calc5KPower3S1}%<span class="hosei">${teki1DamageHoseiDisplay3}${myKinomiDisplayS1W3}${tekiTekiouDisplayS1W3}${myAbiDamageGENDisplayS1W3}${tekiAbiIromegaDisplayS1W3}${tekiYakedoDisplayS1W3}${tekiReflecDisplayS1W3}${tekiHikarikabeDisplayS1W3}${tekiTenkiDisplayS1W3}${tekiMoraibiDisplayS1W3}</span><br>[ダメージ]${calc4KPower3S1}~${calc3KPower3S1}</p>
    <p>[急所]<br>[割合]${calc6KPower3S1Critical}%~${calc5KPower3S1Critical}%<br>[ダメージ]${calc4KPower3S1Critical}~${calc3KPower3S1Critical}</p>`
            : `<p>威力:${power3S1}<span class="hosei">${teki1IryokuDisplay3}${tekiAbiIryokuDisplayS1W3}${myAbiIryokuGENDisplayS1W3}</span><br>[通常]<br>[割合]${calc6P3S1}%~${calc5P3S1}%<span class="hosei">${teki1DamageHoseiDisplay3}${myKinomiDisplayS1W3}${tekiTekiouDisplayS1W3}${myAbiDamageGENDisplayS1W3}${tekiAbiIromegaDisplayS1W3}${tekiYakedoDisplayS1W3}${tekiReflecDisplayS1W3}${tekiHikarikabeDisplayS1W3}${tekiTenkiDisplayS1W3}${tekiMoraibiDisplayS1W3}</span><br>[ダメージ]${calc4P3S1}~${calc3P3S1}</p>
            <p>[急所]<br>[割合]${calc6P3S1Critical}%~${calc5P3S1Critical}%<br>[ダメージ]${calc4P3S1Critical}~${calc3P3S1Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoPower3S1}<span class="hosei">${teki1IryokuDisplay3}${tekiAbiIryokuDisplayS1W3}${myAbiIryokuGENDisplayS1W3}</span><br>[通常]<br>[割合]${calc6KPower3S1}%~${calc5KPower3S1}%<span class="hosei">${teki1DamageHoseiDisplay3}${myKinomiDisplayS1W3}${tekiTekiouDisplayS1W3}${myAbiDamageGENDisplayS1W3}${tekiAbiIromegaDisplayS1W3}${tekiYakedoDisplayS1W3}${tekiReflecDisplayS1W3}${tekiHikarikabeDisplayS1W3}${tekiTenkiDisplayS1W3}${tekiMoraibiDisplayS1W3}</span><br>[ダメージ]${calc4KPower3S1}~${calc3KPower3S1}</p>
            <p>[急所]<br>[割合]${calc6KPower3S1Critical}%~${calc5KPower3S1Critical}%<br>[ダメージ]${calc4KPower3S1Critical}~${calc3KPower3S1Critical}</p>`
        }
    `
    }
    </div>

    
    <div class="A">⒋&nbsp;${name4S1}</div>
    <div class="B" style="display: none;">
    [${wtype4S1}]&nbsp;<br>威力:${powerdisplay4S1}&nbsp;命中:${accuracydisplay4S1}&nbsp;PP:${pp4S1}&nbsp;<br>分類:${moveClass4S1}&nbsp;優先度:${priority4S1}&nbsp;接触:${contact4S1}&nbsp;王者:${king4S1}&nbsp;No:${no4S1}<br>効果:${effect4S1}<br>
    </div><br>
    
    
    <div class="damage">
    ${
      moveClass4S1 === "変化"
        ? `<p>変化技</p>`
        : power4S1 === kisoPower4S1
        ? `
<p>威力:${power4S1}<span class="hosei">${teki1IryokuDisplay4}${tekiAbiIryokuDisplayS1W4}${myAbiIryokuGENDisplayS1W4}</span><br>[通常]<br>[割合]${calc6KPower4S1}%~${calc5KPower4S1}%<span class="hosei">${teki1DamageHoseiDisplay4}${myKinomiDisplayS1W4}${tekiTekiouDisplayS1W4}${myAbiDamageGENDisplayS1W4}${tekiAbiIromegaDisplayS1W4}${tekiYakedoDisplayS1W4}${tekiReflecDisplayS1W4}${tekiHikarikabeDisplayS1W4}${tekiTenkiDisplayS1W4}${tekiMoraibiDisplayS1W4}</span><br>[ダメージ]${calc4KPower4S1}~${calc3KPower4S1}</p>
<p>[急所]<br>[割合]${calc6KPower4S1Critical}%~${calc5KPower4S1Critical}%<br>[ダメージ]${calc4KPower4S1Critical}~${calc3KPower4S1Critical}</p>`
        : `
※威力不定
    ${
      power4S1 === 0
        ? `技効果適用時<p>
威力:${kisoPower4S1}<span class="hosei">${teki1IryokuDisplay4}${tekiAbiIryokuDisplayS1W4}${myAbiIryokuGENDisplayS1W4}</span><br>[通常]<br>[割合]${calc6KPower4S1}%~${calc5KPower4S1}%<span class="hosei">${teki1DamageHoseiDisplay4}${myKinomiDisplayS1W4}${tekiTekiouDisplayS1W4}${myAbiDamageGENDisplayS1W4}${tekiAbiIromegaDisplayS1W4}${tekiYakedoDisplayS1W4}${tekiReflecDisplayS1W4}${tekiHikarikabeDisplayS1W4}${tekiTenkiDisplayS1W4}${tekiMoraibiDisplayS1W4}</span><br>[ダメージ]${calc4KPower4S1}~${calc3KPower4S1}</p>
<p>[急所]<br>[割合]${calc6KPower4S1Critical}%~${calc5KPower4S1Critical}%<br>[ダメージ]${calc4KPower4S1Critical}~${calc3KPower4S1Critical}</p>`
        : `<p>威力:${power4S1}<span class="hosei">${teki1IryokuDisplay4}${tekiAbiIryokuDisplayS1W4}${myAbiIryokuGENDisplayS1W4}</span><br>[通常]<br>[割合]${calc6P4S1}%~${calc5P4S1}%<span class="hosei">${teki1DamageHoseiDisplay4}${myKinomiDisplayS1W4}${tekiTekiouDisplayS1W4}${myAbiDamageGENDisplayS1W4}${tekiAbiIromegaDisplayS1W4}${tekiYakedoDisplayS1W4}${tekiReflecDisplayS1W4}${tekiHikarikabeDisplayS1W4}${tekiTenkiDisplayS1W4}${tekiMoraibiDisplayS1W4}</span><br>[ダメージ]${calc4P4S1}~${calc3P4S1}</p>
        <p>[急所]<br>[割合]${calc6P4S1Critical}%~${calc5P4S1Critical}%<br>[ダメージ]${calc4P4S1Critical}~${calc3P4S1Critical}</p>
        <br>
        技効果適用時<p>
        威力:${kisoPower4S1}<span class="hosei">${teki1IryokuDisplay4}${tekiAbiIryokuDisplayS1W4}${myAbiIryokuGENDisplayS1W4}</span><br>[通常]<br>[割合]${calc6KPower4S1}%~${calc5KPower4S1}%<span class="hosei">${teki1DamageHoseiDisplay4}${myKinomiDisplayS1W4}${tekiTekiouDisplayS1W4}${myAbiDamageGENDisplayS1W4}${tekiAbiIromegaDisplayS1W4}${tekiYakedoDisplayS1W4}${tekiReflecDisplayS1W4}${tekiHikarikabeDisplayS1W4}${tekiTenkiDisplayS1W4}${tekiMoraibiDisplayS1W4}</span><br>[ダメージ]${calc4KPower4S1}~${calc3KPower4S1}</p>
        <p>[急所]<br>[割合]${calc6KPower4S1Critical}%~${calc5KPower4S1Critical}%<br>[ダメージ]${calc4KPower4S1Critical}~${calc3KPower4S1Critical}</p>`
    }`
    }
</div>
    `;

      // すべてのA要素を取得する
      const trainerDetailAs = pokeStatus5.querySelectorAll(".A");

      trainerDetailAs.forEach((trainerDetailA) => {
        // クリックイベントリスナーを設定する
        trainerDetailA.addEventListener("click", () => {
          // クリックされたA要素の次の兄弟要素を取得する
          const trainerDetailB = trainerDetailA.nextElementSibling;

          // 兄弟要素が存在しているかをチェックし、存在している場合には表示を切り替える
          if (trainerDetailB) {
            trainerDetailB.style.display = trainerDetailB.style.display === "none" ? "block" : "none";
          }
        });
      });
    }
  }

  //!敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃
  //!敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃
  //!敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃
  //!敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃敵型2が攻撃

  if (
    tekipokeMove1S2 === undefined ||
    tekipokeMove2S2 === undefined ||
    tekipokeMove3S2 === undefined ||
    tekipokeMove4S2 === undefined
  ) {
    const pokeStatus6 = document.getElementById("T2_tab3");
    pokeStatus6.innerHTML = "該当の型は存在しません";
  } else {
    if (lvVal === 100 && (tekipokeBfNoshape2 < trainerUnder100 || tekipokeBfNoshape2 > trainerTop100)) {
      const pokeStatus6 = document.getElementById("T2_tab3");
      pokeStatus6.innerHTML = `${trainerName}は型${tekipokeShape2}を使用しません。`;
    } else if (lvVal === 50 && (tekipokeBfNoshape2 < trainerUnder50 || tekipokeBfNoshape2 > trainerTop50)) {
      const pokeStatus6 = document.getElementById("T2_tab3");
      pokeStatus6.innerHTML = `${trainerName}は型${tekipokeShape2}を使用しません。`;
    } else {
      // 通常の処理をここに書く

      const pokeStatus6 = document.getElementById("T2_tab3");
      pokeStatus6.innerHTML = `
      [敵]${tekiNAME}型${tekipokeShape2}<img src="${tekiImageUrl}">
      →
      [自]${NAME}<img src="${myImageUrl}">


      <br><br>
    <p class="ST">
    [自]補正後ステータス<br>
    <span class="itemMoji">@${mypokeItemName}</span><br>
    <span class="moji">H</span>${mypokeStatusH}<br>
    <span class="moji">A</span>${mypokeStatusARanked}<span class="hosei">
    
    ${mySurosutaDisplay}${myYogaDisplay}${myKonjouDisplay}${myKodahachiDisplay}${myHoneDisplay}${myRankADisplay}</span><br>
    
    <span class="moji">B</span>${mypokeStatusBRanked}<span class="hosei">${myRankBDisplay}${myFusiginaurokoDisplay}</span><br>
    <span class="moji">C</span>${mypokeStatusCRanked}<span class="hosei">${myKodamegaDisplay}${myRankCDisplay}</span><br>
    <span class="moji">D</span>${mypokeStatusDRanked}<span class="hosei">${myShinkaiDisplay}${mySunaarashiDisplay}${myRankDDisplay}</span><br>
    <span class="moji">S</span>${mypokeStatusSRanked}<span class="hosei">${mySurosutaDisplay}${myRankSDisplay}${myKodascarfDisplay}${myTekkyuDisplay}${myParalysisDisplay}</span>
    <br>

    [敵(型2)]補正後ステータス<br>
    <span class="itemMoji">@${tekipokeItemName2}</span><br>
    <span class="moji">H</span>${tekipokeStatusHS2}<br>
    <span class="moji">A</span>${tekipokeStatusAS2Ranked}<span class="hosei">
    
    ${tekiSurosutaDisplay}${tekiYogaDisplay}${tekiKonjouDisplay}${tekiKodahachiDisplay2}${tekiHoneDisplay2}${tekiRankADisplay}</span><br>
    
    <span class="moji">B</span>${tekipokeStatusBS2Ranked}<span class="hosei">${tekiRankBDisplay}${tekiFusiginaurokoDisplay}</span><br>
    <span class="moji">C</span>${tekipokeStatusCS2Ranked}<span class="hosei">${tekiKodamegaDisplay2}${tekiRankCDisplay}</span><br>
    <span class="moji">D</span>${tekipokeStatusDS2Ranked}<span class="hosei">${tekiShinkaiDisplay2}${tekiSunaarashiDisplay}${tekiRankDDisplay}</span><br>
    <span class="moji">S</span>${tekipokeStatusSS2Ranked}<span class="hosei">${tekiSurosutaDisplay}${tekiRankSDisplay}${tekiKodascarfDisplay2}${tekiTekkyuDisplay2}
    ${tekiParalysisDisplay}</span>
    </p>





    <div class="A">⒈&nbsp;${name1S2}</div>
    <div class="B" style="display: none;">
    [${wtype1S2}]&nbsp;<br>威力:${powerdisplay1S2}&nbsp;命中:${accuracydisplay1S2}&nbsp;PP:${pp1S2}&nbsp;<br>分類:${moveClass1S2}&nbsp;優先度:${priority1S2}&nbsp;接触:${contact1S2}&nbsp;王者:${king1S2}&nbsp;No:${no1S2}<br>効果:${effect1S2}<br>
    </div><br>

    



    <div class="damage">
    ${
      moveClass1S2 === "変化"
        ? `<p>変化技</p>`
        : power1S2 === kisoPower1S2
        ? `
    <p>威力:${power1S2}<span class="hosei">${teki2IryokuDisplay1}${tekiAbiIryokuDisplayS2W1}${myAbiIryokuGENDisplayS2W1}</span><br>[通常]<br>[割合]${calc6KPower1S2}%~${calc5KPower1S2}%<span class="hosei">${teki2DamageHoseiDisplay1}${myKinomiDisplayS2W1}${tekiTekiouDisplayS2W1}${myAbiDamageGENDisplayS2W1}${tekiAbiIromegaDisplayS2W1}${tekiYakedoDisplayS2W1}${tekiReflecDisplayS2W1}${tekiHikarikabeDisplayS2W1}${tekiTenkiDisplayS2W1}${tekiMoraibiDisplayS2W1}</span><br>[ダメージ]${calc4KPower1S2}~${calc3KPower1S2}</p>
    <p>[急所]<br>[割合]${calc6KPower1S2Critical}%~${calc5KPower1S2Critical}%<br>[ダメージ]${calc4KPower1S2Critical}~${calc3KPower1S2Critical}</p>`
        : `
    ※威力不定
        ${
          power1S2 === 0
            ? `技効果適用時<p>
    威力:${kisoPower1S2}<span class="hosei">${teki2IryokuDisplay1}${tekiAbiIryokuDisplayS2W1}${myAbiIryokuGENDisplayS2W1}</span><br>[通常]<br>[割合]${calc6KPower1S2}%~${calc5KPower1S2}%<span class="hosei">${teki2DamageHoseiDisplay1}${myKinomiDisplayS2W1}${tekiTekiouDisplayS2W1}${myAbiDamageGENDisplayS2W1}${tekiAbiIromegaDisplayS2W1}${tekiYakedoDisplayS2W1}${tekiReflecDisplayS2W1}${tekiHikarikabeDisplayS2W1}${tekiTenkiDisplayS2W1}${tekiMoraibiDisplayS2W1}</span><br>[ダメージ]${calc4KPower1S2}~${calc3KPower1S2}</p>
    <p>[急所]<br>[割合]${calc6KPower1S2Critical}%~${calc5KPower1S2Critical}%<br>[ダメージ]${calc4KPower1S2Critical}~${calc3KPower1S2Critical}</p>`
            : `<p>威力:${power1S2}<span class="hosei">${teki2IryokuDisplay1}${tekiAbiIryokuDisplayS2W1}${myAbiIryokuGENDisplayS2W1}</span><br>[通常]<br>[割合]${calc6P1S2}%~${calc5P1S2}%<span class="hosei">${teki2DamageHoseiDisplay1}${myKinomiDisplayS2W1}${tekiTekiouDisplayS2W1}${myAbiDamageGENDisplayS2W1}${tekiAbiIromegaDisplayS2W1}${tekiYakedoDisplayS2W1}${tekiReflecDisplayS2W1}${tekiHikarikabeDisplayS2W1}${tekiTenkiDisplayS2W1}${tekiMoraibiDisplayS2W1}</span><br>[ダメージ]${calc4P1S2}~${calc3P1S2}</p>
            <p>[急所]<br>[割合]${calc6P1S2Critical}%~${calc5P1S2Critical}%<br>[ダメージ]${calc4P1S2Critical}~${calc3P1S2Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoPower1S2}<span class="hosei">${teki2IryokuDisplay1}${tekiAbiIryokuDisplayS2W1}${myAbiIryokuGENDisplayS2W1}</span><br>[通常]<br>[割合]${calc6KPower1S2}%~${calc5KPower1S2}%<span class="hosei">${teki2DamageHoseiDisplay1}${myKinomiDisplayS2W1}${tekiTekiouDisplayS2W1}${myAbiDamageGENDisplayS2W1}${tekiAbiIromegaDisplayS2W1}${tekiYakedoDisplayS2W1}${tekiReflecDisplayS2W1}${tekiHikarikabeDisplayS2W1}${tekiTenkiDisplayS2W1}${tekiMoraibiDisplayS2W1}</span><br>[ダメージ]${calc4KPower1S2}~${calc3KPower1S2}</p>
            <p>[急所]<br>[割合]${calc6KPower1S2Critical}%~${calc5KPower1S2Critical}%<br>[ダメージ]${calc4KPower1S2Critical}~${calc3KPower1S2Critical}</p>`
        }
    `
    }
    </div>





    <div class="A">⒉&nbsp;${name2S2}</div>
    <div class="B" style="display: none;">
    [${wtype2S2}]&nbsp;<br>威力:${powerdisplay2S2}&nbsp;命中:${accuracydisplay2S2}&nbsp;PP:${pp2S2}&nbsp;<br>分類:${moveClass2S2}&nbsp;優先度:${priority2S2}&nbsp;接触:${contact2S2}&nbsp;王者:${king2S2}&nbsp;No:${no2S2}<br>効果:${effect2S2}<br>
    </div><br>
    


    <div class="damage">
    ${
      moveClass2S2 === "変化"
        ? `<p>変化技</p>`
        : power2S2 === kisoPower2S2
        ? `
    <p>威力:${power2S2}<span class="hosei">${teki2IryokuDisplay2}${tekiAbiIryokuDisplayS2W2}${myAbiIryokuGENDisplayS2W2}</span><br>[通常]<br>[割合]${calc6KPower2S2}%~${calc5KPower2S2}%<span class="hosei">${teki2DamageHoseiDisplay2}${myKinomiDisplayS2W2}${tekiTekiouDisplayS2W2}${myAbiDamageGENDisplayS2W2}${tekiAbiIromegaDisplayS2W2}${tekiYakedoDisplayS2W2}${tekiReflecDisplayS2W2}${tekiHikarikabeDisplayS2W2}${tekiTenkiDisplayS2W2}${tekiMoraibiDisplayS2W2}</span><br>[ダメージ]${calc4KPower2S2}~${calc3KPower2S2}</p>
    <p>[急所]<br>[割合]${calc6KPower2S2Critical}%~${calc5KPower2S2Critical}%<br>[ダメージ]${calc4KPower2S2Critical}~${calc3KPower2S2Critical}</p>`
        : `
    ※威力不定
        ${
          power2S2 === 0
            ? `技効果適用時<p>
    威力:${kisoPower2S2}<span class="hosei">${teki2IryokuDisplay2}${tekiAbiIryokuDisplayS2W2}${myAbiIryokuGENDisplayS2W2}</span><br>[通常]<br>[割合]${calc6KPower2S2}%~${calc5KPower2S2}%<span class="hosei">${teki2DamageHoseiDisplay2}${myKinomiDisplayS2W2}${tekiTekiouDisplayS2W2}${myAbiDamageGENDisplayS2W2}${tekiAbiIromegaDisplayS2W2}${tekiYakedoDisplayS2W2}${tekiReflecDisplayS2W2}${tekiHikarikabeDisplayS2W2}${tekiTenkiDisplayS2W2}${tekiMoraibiDisplayS2W2}</span><br>[ダメージ]${calc4KPower2S2}~${calc3KPower2S2}</p>
    <p>[急所]<br>[割合]${calc6KPower2S2Critical}%~${calc5KPower2S2Critical}%<br>[ダメージ]${calc4KPower2S2Critical}~${calc3KPower2S2Critical}</p>`
            : `<p>威力:${power2S2}<span class="hosei">${teki2IryokuDisplay2}${tekiAbiIryokuDisplayS2W2}${myAbiIryokuGENDisplayS2W2}</span><br>[通常]<br>[割合]${calc6P2S2}%~${calc5P2S2}%<span class="hosei">${teki2DamageHoseiDisplay2}${myKinomiDisplayS2W2}${tekiTekiouDisplayS2W2}${myAbiDamageGENDisplayS2W2}${tekiAbiIromegaDisplayS2W2}${tekiYakedoDisplayS2W2}${tekiReflecDisplayS2W2}${tekiHikarikabeDisplayS2W2}${tekiTenkiDisplayS2W2}${tekiMoraibiDisplayS2W2}</span><br>[ダメージ]${calc4P2S2}~${calc3P2S2}</p>
            <p>[急所]<br>[割合]${calc6P2S2Critical}%~${calc5P2S2Critical}%<br>[ダメージ]${calc4P2S2Critical}~${calc3P2S2Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoPower2S2}<span class="hosei">${teki2IryokuDisplay2}${tekiAbiIryokuDisplayS2W2}${myAbiIryokuGENDisplayS2W2}</span><br>[通常]<br>[割合]${calc6KPower2S2}%~${calc5KPower2S2}%<span class="hosei">${teki2DamageHoseiDisplay2}${myKinomiDisplayS2W2}${tekiTekiouDisplayS2W2}${myAbiDamageGENDisplayS2W2}${tekiAbiIromegaDisplayS2W2}${tekiYakedoDisplayS2W2}${tekiReflecDisplayS2W2}${tekiHikarikabeDisplayS2W2}${tekiTenkiDisplayS2W2}${tekiMoraibiDisplayS2W2}</span><br>[ダメージ]${calc4KPower2S2}~${calc3KPower2S2}</p>
            <p>[急所]<br>[割合]${calc6KPower2S2Critical}%~${calc5KPower2S2Critical}%<br>[ダメージ]${calc4KPower2S2Critical}~${calc3KPower2S2Critical}</p>`
        }
    `
    }
    </div>




    <div class="A">⒊&nbsp;${name3S2}</div>
    <div class="B" style="display: none;">
    [${wtype3S2}]&nbsp;<br>威力:${powerdisplay3S2}&nbsp;命中:${accuracydisplay3S2}&nbsp;PP:${pp3S2}&nbsp;<br>分類:${moveClass3S2}&nbsp;優先度:${priority3S2}&nbsp;接触:${contact3S2}&nbsp;王者:${king3S2}&nbsp;No:${no3S2}<br>効果:${effect3S2}<br>
    </div><br>
    


    <div class="damage">
    ${
      moveClass3S2 === "変化"
        ? `<p>変化技</p>`
        : power3S2 === kisoPower3S2
        ? `
    <p>威力:${power3S2}<span class="hosei">${teki2IryokuDisplay3}${tekiAbiIryokuDisplayS2W3}${myAbiIryokuGENDisplayS2W3}</span><br>[通常]<br>[割合]${calc6KPower3S2}%~${calc5KPower3S2}%<span class="hosei">${teki2DamageHoseiDisplay3}${myKinomiDisplayS2W3}${tekiTekiouDisplayS2W3}${myAbiDamageGENDisplayS2W3}${tekiAbiIromegaDisplayS2W3}${tekiYakedoDisplayS2W3}${tekiReflecDisplayS2W3}${tekiHikarikabeDisplayS2W3}${tekiTenkiDisplayS2W3}${tekiMoraibiDisplayS2W3}</span><br>[ダメージ]${calc4KPower3S2}~${calc3KPower3S2}</p>
    <p>[急所]<br>[割合]${calc6KPower3S2Critical}%~${calc5KPower3S2Critical}%<br>[ダメージ]${calc4KPower3S2Critical}~${calc3KPower3S2Critical}</p>`
        : `
    ※威力不定
        ${
          power3S2 === 0
            ? `技効果適用時<p>
    威力:${kisoPower3S2}<span class="hosei">${teki2IryokuDisplay3}${tekiAbiIryokuDisplayS2W3}${myAbiIryokuGENDisplayS2W3}</span><br>[通常]<br>[割合]${calc6KPower3S2}%~${calc5KPower3S2}%<span class="hosei">${teki2DamageHoseiDisplay3}${myKinomiDisplayS2W3}${tekiTekiouDisplayS2W3}${myAbiDamageGENDisplayS2W3}${tekiAbiIromegaDisplayS2W3}${tekiYakedoDisplayS2W3}${tekiReflecDisplayS2W3}${tekiHikarikabeDisplayS2W3}${tekiTenkiDisplayS2W3}${tekiMoraibiDisplayS2W3}</span><br>[ダメージ]${calc4KPower3S2}~${calc3KPower3S2}</p>
    <p>[急所]<br>[割合]${calc6KPower3S2Critical}%~${calc5KPower3S2Critical}%<br>[ダメージ]${calc4KPower3S2Critical}~${calc3KPower3S2Critical}</p>`
            : `<p>威力:${power3S2}<span class="hosei">${teki2IryokuDisplay3}${tekiAbiIryokuDisplayS2W3}${myAbiIryokuGENDisplayS2W3}</span><br>[通常]<br>[割合]${calc6P3S2}%~${calc5P3S2}%<span class="hosei">${teki2DamageHoseiDisplay3}${myKinomiDisplayS2W3}${tekiTekiouDisplayS2W3}${myAbiDamageGENDisplayS2W3}${tekiAbiIromegaDisplayS2W3}${tekiYakedoDisplayS2W3}${tekiReflecDisplayS2W3}${tekiHikarikabeDisplayS2W3}${tekiTenkiDisplayS2W3}${tekiMoraibiDisplayS2W3}</span><br>[ダメージ]${calc4P3S2}~${calc3P3S2}</p>
            <p>[急所]<br>[割合]${calc6P3S2Critical}%~${calc5P3S2Critical}%<br>[ダメージ]${calc4P3S2Critical}~${calc3P3S2Critical}</p>
            <br>
            技効果適用時<p>
            威力:${kisoPower3S2}<span class="hosei">${teki2IryokuDisplay3}${tekiAbiIryokuDisplayS2W3}${myAbiIryokuGENDisplayS2W3}</span><br>[通常]<br>[割合]${calc6KPower3S2}%~${calc5KPower3S2}%<span class="hosei">${teki2DamageHoseiDisplay3}${myKinomiDisplayS2W3}${tekiTekiouDisplayS2W3}${myAbiDamageGENDisplayS2W3}${tekiAbiIromegaDisplayS2W3}${tekiYakedoDisplayS2W3}${tekiReflecDisplayS2W3}${tekiHikarikabeDisplayS2W3}${tekiTenkiDisplayS2W3}${tekiMoraibiDisplayS2W3}</span><br>[ダメージ]${calc4KPower3S2}~${calc3KPower3S2}</p>
            <p>[急所]<br>[割合]${calc6KPower3S2Critical}%~${calc5KPower3S2Critical}%<br>[ダメージ]${calc4KPower3S2Critical}~${calc3KPower3S2Critical}</p>`
        }
    `
    }
    </div>

    
    <div class="A">⒋&nbsp;${name4S2}</div>
    <div class="B" style="display: none;">
    [${wtype4S2}]&nbsp;<br>威力:${powerdisplay4S2}&nbsp;命中:${accuracydisplay4S2}&nbsp;PP:${pp4S2}&nbsp;<br>分類:${moveClass4S2}&nbsp;優先度:${priority4S2}&nbsp;接触:${contact4S2}&nbsp;王者:${king4S2}&nbsp;No:${no4S2}<br>効果:${effect4S2}<br>
    </div><br>
    
    
    <div class="damage">
    ${
      moveClass4S2 === "変化"
        ? `<p>変化技</p>`
        : power4S2 === kisoPower4S2
        ? `
<p>威力:${power4S2}<span class="hosei">${teki2IryokuDisplay4}${tekiAbiIryokuDisplayS2W4}${myAbiIryokuGENDisplayS2W4}</span><br>[通常]<br>[割合]${calc6KPower4S2}%~${calc5KPower4S2}%<span class="hosei">${teki2DamageHoseiDisplay4}${myKinomiDisplayS2W4}${tekiTekiouDisplayS2W4}${myAbiDamageGENDisplayS2W4}${tekiAbiIromegaDisplayS2W4}${tekiYakedoDisplayS2W4}${tekiReflecDisplayS2W4}${tekiHikarikabeDisplayS2W4}${tekiTenkiDisplayS2W4}${tekiMoraibiDisplayS2W4}</span><br>[ダメージ]${calc4KPower4S2}~${calc3KPower4S2}</p>
<p>[急所]<br>[割合]${calc6KPower4S2Critical}%~${calc5KPower4S2Critical}%<br>[ダメージ]${calc4KPower4S2Critical}~${calc3KPower4S2Critical}</p>`
        : `
※威力不定
    ${
      power4S2 === 0
        ? `技効果適用時<p>
威力:${kisoPower4S2}<span class="hosei">${teki2IryokuDisplay4}${tekiAbiIryokuDisplayS2W4}${myAbiIryokuGENDisplayS2W4}</span><br>[通常]<br>[割合]${calc6KPower4S2}%~${calc5KPower4S2}%<span class="hosei">${teki2DamageHoseiDisplay4}${myKinomiDisplayS2W4}${tekiTekiouDisplayS2W4}${myAbiDamageGENDisplayS2W4}${tekiAbiIromegaDisplayS2W4}${tekiYakedoDisplayS2W4}${tekiReflecDisplayS2W4}${tekiHikarikabeDisplayS2W4}${tekiTenkiDisplayS2W4}${tekiMoraibiDisplayS2W4}</span><br>[ダメージ]${calc4KPower4S2}~${calc3KPower4S2}</p>
<p>[急所]<br>[割合]${calc6KPower4S2Critical}%~${calc5KPower4S2Critical}%<br>[ダメージ]${calc4KPower4S2Critical}~${calc3KPower4S2Critical}</p>`
        : `<p>威力:${power4S2}<span class="hosei">${teki2IryokuDisplay4}${tekiAbiIryokuDisplayS2W4}${myAbiIryokuGENDisplayS2W4}</span><br>[通常]<br>[割合]${calc6P4S2}%~${calc5P4S2}%<span class="hosei">${teki2DamageHoseiDisplay4}${myKinomiDisplayS2W4}${tekiTekiouDisplayS2W4}${myAbiDamageGENDisplayS2W4}${tekiAbiIromegaDisplayS2W4}${tekiYakedoDisplayS2W4}${tekiReflecDisplayS2W4}${tekiHikarikabeDisplayS2W4}${tekiTenkiDisplayS2W4}${tekiMoraibiDisplayS2W4}</span><br>[ダメージ]${calc4P4S2}~${calc3P4S2}</p>
        <p>[急所]<br>[割合]${calc6P4S2Critical}%~${calc5P4S2Critical}%<br>[ダメージ]${calc4P4S2Critical}~${calc3P4S2Critical}</p>
        <br>
        技効果適用時<p>
        威力:${kisoPower4S2}<span class="hosei">${teki2IryokuDisplay4}${tekiAbiIryokuDisplayS2W4}${myAbiIryokuGENDisplayS2W4}</span><br>[通常]<br>[割合]${calc6KPower4S2}%~${calc5KPower4S2}%<span class="hosei">${teki2DamageHoseiDisplay4}${myKinomiDisplayS2W4}${tekiTekiouDisplayS2W4}${myAbiDamageGENDisplayS2W4}${tekiAbiIromegaDisplayS2W4}${tekiYakedoDisplayS2W4}${tekiReflecDisplayS2W4}${tekiHikarikabeDisplayS2W4}${tekiTenkiDisplayS2W4}${tekiMoraibiDisplayS2W4}</span><br>[ダメージ]${calc4KPower4S2}~${calc3KPower4S2}</p>
        <p>[急所]<br>[割合]${calc6KPower4S2Critical}%~${calc5KPower4S2Critical}%<br>[ダメージ]${calc4KPower4S2Critical}~${calc3KPower4S2Critical}</p>`
    }
`
    }
</div>
    `;

      // すべてのA要素を取得する
      const trainerDetailAs = pokeStatus6.querySelectorAll(".A");

      trainerDetailAs.forEach((trainerDetailA) => {
        // クリックイベントリスナーを設定する
        trainerDetailA.addEventListener("click", () => {
          // クリックされたA要素の次の兄弟要素を取得する
          const trainerDetailB = trainerDetailA.nextElementSibling;

          // 兄弟要素が存在しているかをチェックし、存在している場合には表示を切り替える
          if (trainerDetailB) {
            trainerDetailB.style.display = trainerDetailB.style.display === "none" ? "block" : "none";
          }
        });
      });
    }
  }

  //!敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃
  //!敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃
  //!敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃
  //!敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃敵型3が攻撃

  if (
    tekipokeMove1S3 === undefined ||
    tekipokeMove2S3 === undefined ||
    tekipokeMove3S3 === undefined ||
    tekipokeMove4S3 === undefined
  ) {
    const pokeStatus7 = document.getElementById("T3_tab3");
    pokeStatus7.innerHTML = "該当の型は存在しません";
  } else {
    if (lvVal === 100 && (tekipokeBfNoshape3 < trainerUnder100 || tekipokeBfNoshape3 > trainerTop100)) {
      const pokeStatus7 = document.getElementById("T3_tab3");
      pokeStatus7.innerHTML = `${trainerName}は型${tekipokeShape3}を使用しません。`;
    } else if (lvVal === 50 && (tekipokeBfNoshape3 < trainerUnder50 || tekipokeBfNoshape3 > trainerTop50)) {
      const pokeStatus7 = document.getElementById("T3_tab3");
      pokeStatus7.innerHTML = `${trainerName}は型${tekipokeShape3}を使用しません。`;
    } else {
      // 通常の処理をここに書く

      const pokeStatus7 = document.getElementById("T3_tab3");
      pokeStatus7.innerHTML = `
    [敵]${tekiNAME}型${tekipokeShape3}<img src="${tekiImageUrl}">
    →
    [自]${NAME}<img src="${myImageUrl}">


    <br><br>
  <p class="ST">
  [自]補正後ステータス<br>
  <span class="itemMoji">@${mypokeItemName}</span><br>
  <span class="moji">H</span>${mypokeStatusH}<br>
  <span class="moji">A</span>${mypokeStatusARanked}<span class="hosei">
  
  ${mySurosutaDisplay}${myYogaDisplay}${myKonjouDisplay}${myKodahachiDisplay}${myHoneDisplay}${myRankADisplay}</span><br>
  
  <span class="moji">B</span>${mypokeStatusBRanked}<span class="hosei">${myRankBDisplay}${myFusiginaurokoDisplay}</span><br>
  <span class="moji">C</span>${mypokeStatusCRanked}<span class="hosei">${myKodamegaDisplay}${myRankCDisplay}</span><br>
  <span class="moji">D</span>${mypokeStatusDRanked}<span class="hosei">${myShinkaiDisplay}${mySunaarashiDisplay}${myRankDDisplay}</span><br>
  <span class="moji">S</span>${mypokeStatusSRanked}<span class="hosei">${mySurosutaDisplay}${myRankSDisplay}${myKodascarfDisplay}${myTekkyuDisplay}${myParalysisDisplay}</span>
  <br>

  [敵(型3)]補正後ステータス<br>
  <span class="itemMoji">@${tekipokeItemName3}</span><br>
  <span class="moji">H</span>${tekipokeStatusHS3}<br>
  <span class="moji">A</span>${tekipokeStatusAS3Ranked}<span class="hosei">
  
  ${tekiSurosutaDisplay}${tekiYogaDisplay}${tekiKonjouDisplay}${tekiKodahachiDisplay3}${tekiHoneDisplay3}${tekiRankADisplay}</span><br>
  
  <span class="moji">B</span>${tekipokeStatusBS3Ranked}<span class="hosei">${tekiRankBDisplay}${tekiFusiginaurokoDisplay}</span><br>
  <span class="moji">C</span>${tekipokeStatusCS3Ranked}<span class="hosei">${tekiKodamegaDisplay3}${tekiRankCDisplay}</span><br>
  <span class="moji">D</span>${tekipokeStatusDS3Ranked}<span class="hosei">${tekiShinkaiDisplay3}${tekiSunaarashiDisplay}${tekiRankDDisplay}</span><br>
  <span class="moji">S</span>${tekipokeStatusSS3Ranked}<span class="hosei">${tekiSurosutaDisplay}${tekiRankSDisplay}${tekiKodascarfDisplay3}${tekiTekkyuDisplay3}
  ${tekiParalysisDisplay}</span>
  </p>





  <div class="A">⒈&nbsp;${name1S3}</div>
  <div class="B" style="display: none;">
  [${wtype1S3}]&nbsp;<br>威力:${powerdisplay1S3}&nbsp;命中:${accuracydisplay1S3}&nbsp;PP:${pp1S3}&nbsp;<br>分類:${moveClass1S3}&nbsp;優先度:${priority1S3}&nbsp;接触:${contact1S3}&nbsp;王者:${king1S3}&nbsp;No:${no1S3}<br>効果:${effect1S3}<br>
  </div><br>

  



  <div class="damage">
  ${
    moveClass1S3 === "変化"
      ? `<p>変化技</p>`
      : power1S3 === kisoPower1S3
      ? `
  <p>威力:${power1S3}<span class="hosei">${teki3IryokuDisplay1}${tekiAbiIryokuDisplayS3W1}${myAbiIryokuGENDisplayS3W1}</span><br>[通常]<br>[割合]${calc6KPower1S3}%~${calc5KPower1S3}%<span class="hosei">${teki3DamageHoseiDisplay1}${myKinomiDisplayS3W1}${tekiTekiouDisplayS3W1}${myAbiDamageGENDisplayS3W1}${tekiAbiIromegaDisplayS3W1}${tekiYakedoDisplayS3W1}${tekiReflecDisplayS3W1}${tekiHikarikabeDisplayS3W1}${tekiTenkiDisplayS3W1}${tekiMoraibiDisplayS3W1}</span><br>[ダメージ]${calc4KPower1S3}~${calc3KPower1S3}</p>
  <p>[急所]<br>[割合]${calc6KPower1S3Critical}%~${calc5KPower1S3Critical}%<br>[ダメージ]${calc4KPower1S3Critical}~${calc3KPower1S3Critical}</p>`
      : `
  ※威力不定
      ${
        power1S3 === 0
          ? `技効果適用時<p>
  威力:${kisoPower1S3}<span class="hosei">${teki3IryokuDisplay1}${tekiAbiIryokuDisplayS3W1}${myAbiIryokuGENDisplayS3W1}</span><br>[通常]<br>[割合]${calc6KPower1S3}%~${calc5KPower1S3}%<span class="hosei">${teki3DamageHoseiDisplay1}${myKinomiDisplayS3W1}${tekiTekiouDisplayS3W1}${myAbiDamageGENDisplayS3W1}${tekiAbiIromegaDisplayS3W1}${tekiYakedoDisplayS3W1}${tekiReflecDisplayS3W1}${tekiHikarikabeDisplayS3W1}${tekiTenkiDisplayS3W1}${tekiMoraibiDisplayS3W1}</span><br>[ダメージ]${calc4KPower1S3}~${calc3KPower1S3}</p>
  <p>[急所]<br>[割合]${calc6KPower1S3Critical}%~${calc5KPower1S3Critical}%<br>[ダメージ]${calc4KPower1S3Critical}~${calc3KPower1S3Critical}</p>`
          : `<p>威力:${power1S3}<span class="hosei">${teki3IryokuDisplay1}${tekiAbiIryokuDisplayS3W1}${myAbiIryokuGENDisplayS3W1}</span><br>[通常]<br>[割合]${calc6P1S3}%~${calc5P1S3}%<span class="hosei">${teki3DamageHoseiDisplay1}${myKinomiDisplayS3W1}${tekiTekiouDisplayS3W1}${myAbiDamageGENDisplayS3W1}${tekiAbiIromegaDisplayS3W1}${tekiYakedoDisplayS3W1}${tekiReflecDisplayS3W1}${tekiHikarikabeDisplayS3W1}${tekiTenkiDisplayS3W1}${tekiMoraibiDisplayS3W1}</span><br>[ダメージ]${calc4P1S3}~${calc3P1S3}</p>
          <p>[急所]<br>[割合]${calc6P1S3Critical}%~${calc5P1S3Critical}%<br>[ダメージ]${calc4P1S3Critical}~${calc3P1S3Critical}</p>
          <br>
          技効果適用時<p>
          威力:${kisoPower1S3}<span class="hosei">${teki3IryokuDisplay1}${tekiAbiIryokuDisplayS3W1}${myAbiIryokuGENDisplayS3W1}</span><br>[通常]<br>[割合]${calc6KPower1S3}%~${calc5KPower1S3}%<span class="hosei">${teki3DamageHoseiDisplay1}${myKinomiDisplayS3W1}${tekiTekiouDisplayS3W1}${myAbiDamageGENDisplayS3W1}${tekiAbiIromegaDisplayS3W1}${tekiYakedoDisplayS3W1}${tekiReflecDisplayS3W1}${tekiHikarikabeDisplayS3W1}${tekiTenkiDisplayS3W1}${tekiMoraibiDisplayS3W1}</span><br>[ダメージ]${calc4KPower1S3}~${calc3KPower1S3}</p>
          <p>[急所]<br>[割合]${calc6KPower1S3Critical}%~${calc5KPower1S3Critical}%<br>[ダメージ]${calc4KPower1S3Critical}~${calc3KPower1S3Critical}</p>`
      }
  `
  }
  </div>





  <div class="A">⒉&nbsp;${name2S3}</div>
  <div class="B" style="display: none;">
  [${wtype2S3}]&nbsp;<br>威力:${powerdisplay2S3}&nbsp;命中:${accuracydisplay2S3}&nbsp;PP:${pp2S3}&nbsp;<br>分類:${moveClass2S3}&nbsp;優先度:${priority2S3}&nbsp;接触:${contact2S3}&nbsp;王者:${king2S3}&nbsp;No:${no2S3}<br>効果:${effect2S3}<br>
  </div><br>
  


  <div class="damage">
  ${
    moveClass2S3 === "変化"
      ? `<p>変化技</p>`
      : power2S3 === kisoPower2S3
      ? `
  <p>威力:${power2S3}<span class="hosei">${teki3IryokuDisplay2}${tekiAbiIryokuDisplayS3W2}${myAbiIryokuGENDisplayS3W2}</span><br>[通常]<br>[割合]${calc6KPower2S3}%~${calc5KPower2S3}%<span class="hosei">${teki3DamageHoseiDisplay2}${myKinomiDisplayS3W2}${tekiTekiouDisplayS3W2}${myAbiDamageGENDisplayS3W2}${tekiAbiIromegaDisplayS3W2}${tekiYakedoDisplayS3W2}${tekiReflecDisplayS3W2}${tekiHikarikabeDisplayS3W2}${tekiTenkiDisplayS3W2}${tekiMoraibiDisplayS3W2}</span><br>[ダメージ]${calc4KPower2S3}~${calc3KPower2S3}</p>
  <p>[急所]<br>[割合]${calc6KPower2S3Critical}%~${calc5KPower2S3Critical}%<br>[ダメージ]${calc4KPower2S3Critical}~${calc3KPower2S3Critical}</p>`
      : `
  ※威力不定
      ${
        power2S3 === 0
          ? `技効果適用時<p>
  威力:${kisoPower2S3}<span class="hosei">${teki3IryokuDisplay2}${tekiAbiIryokuDisplayS3W2}${myAbiIryokuGENDisplayS3W2}</span><br>[通常]<br>[割合]${calc6KPower2S3}%~${calc5KPower2S3}%<span class="hosei">${teki3DamageHoseiDisplay2}${myKinomiDisplayS3W2}${tekiTekiouDisplayS3W2}${myAbiDamageGENDisplayS3W2}${tekiAbiIromegaDisplayS3W2}${tekiYakedoDisplayS3W2}${tekiReflecDisplayS3W2}${tekiHikarikabeDisplayS3W2}${tekiTenkiDisplayS3W2}${tekiMoraibiDisplayS3W2}</span><br>[ダメージ]${calc4KPower2S3}~${calc3KPower2S3}</p>
  <p>[急所]<br>[割合]${calc6KPower2S3Critical}%~${calc5KPower2S3Critical}%<br>[ダメージ]${calc4KPower2S3Critical}~${calc3KPower2S3Critical}</p>`
          : `<p>威力:${power2S3}<span class="hosei">${teki3IryokuDisplay2}${tekiAbiIryokuDisplayS3W2}${myAbiIryokuGENDisplayS3W2}</span><br>[通常]<br>[割合]${calc6P2S3}%~${calc5P2S3}%<span class="hosei">${teki3DamageHoseiDisplay2}${myKinomiDisplayS3W2}${tekiTekiouDisplayS3W2}${myAbiDamageGENDisplayS3W2}${tekiAbiIromegaDisplayS3W2}${tekiYakedoDisplayS3W2}${tekiReflecDisplayS3W2}${tekiHikarikabeDisplayS3W2}${tekiTenkiDisplayS3W2}${tekiMoraibiDisplayS3W2}</span><br>[ダメージ]${calc4P2S3}~${calc3P2S3}</p>
          <p>[急所]<br>[割合]${calc6P2S3Critical}%~${calc5P2S3Critical}%<br>[ダメージ]${calc4P2S3Critical}~${calc3P2S3Critical}</p>
          <br>
          技効果適用時<p>
          威力:${kisoPower2S3}<span class="hosei">${teki3IryokuDisplay2}${tekiAbiIryokuDisplayS3W2}${myAbiIryokuGENDisplayS3W2}</span><br>[通常]<br>[割合]${calc6KPower2S3}%~${calc5KPower2S3}%<span class="hosei">${teki3DamageHoseiDisplay2}${myKinomiDisplayS3W2}${tekiTekiouDisplayS3W2}${myAbiDamageGENDisplayS3W2}${tekiAbiIromegaDisplayS3W2}${tekiYakedoDisplayS3W2}${tekiReflecDisplayS3W2}${tekiHikarikabeDisplayS3W2}${tekiTenkiDisplayS3W2}${tekiMoraibiDisplayS3W2}</span><br>[ダメージ]${calc4KPower2S3}~${calc3KPower2S3}</p>
          <p>[急所]<br>[割合]${calc6KPower2S3Critical}%~${calc5KPower2S3Critical}%<br>[ダメージ]${calc4KPower2S3Critical}~${calc3KPower2S3Critical}</p>`
      }
  `
  }
  </div>




  <div class="A">⒊&nbsp;${name3S3}</div>
  <div class="B" style="display: none;">
  [${wtype3S3}]&nbsp;<br>威力:${powerdisplay3S3}&nbsp;命中:${accuracydisplay3S3}&nbsp;PP:${pp3S3}&nbsp;<br>分類:${moveClass3S3}&nbsp;優先度:${priority3S3}&nbsp;接触:${contact3S3}&nbsp;王者:${king3S3}&nbsp;No:${no3S3}<br>効果:${effect3S3}<br>
  </div><br>
  


  <div class="damage">
  ${
    moveClass3S3 === "変化"
      ? `<p>変化技</p>`
      : power3S3 === kisoPower3S3
      ? `
  <p>威力:${power3S3}<span class="hosei">${teki3IryokuDisplay3}${tekiAbiIryokuDisplayS3W3}${myAbiIryokuGENDisplayS3W3}</span><br>[通常]<br>[割合]${calc6KPower3S3}%~${calc5KPower3S3}%<span class="hosei">${teki3DamageHoseiDisplay3}${myKinomiDisplayS3W3}${tekiTekiouDisplayS3W3}${myAbiDamageGENDisplayS3W3}${tekiAbiIromegaDisplayS3W3}${tekiYakedoDisplayS3W3}${tekiReflecDisplayS3W3}${tekiHikarikabeDisplayS3W3}${tekiTenkiDisplayS3W3}${tekiMoraibiDisplayS3W3}</span><br>[ダメージ]${calc4KPower3S3}~${calc3KPower3S3}</p>
  <p>[急所]<br>[割合]${calc6KPower3S3Critical}%~${calc5KPower3S3Critical}%<br>[ダメージ]${calc4KPower3S3Critical}~${calc3KPower3S3Critical}</p>`
      : `
  ※威力不定
      ${
        power3S3 === 0
          ? `技効果適用時<p>
  威力:${kisoPower3S3}<span class="hosei">${teki3IryokuDisplay3}${tekiAbiIryokuDisplayS3W3}${myAbiIryokuGENDisplayS3W3}</span><br>[通常]<br>[割合]${calc6KPower3S3}%~${calc5KPower3S3}%<span class="hosei">${teki3DamageHoseiDisplay3}${myKinomiDisplayS3W3}${tekiTekiouDisplayS3W3}${myAbiDamageGENDisplayS3W3}${tekiAbiIromegaDisplayS3W3}${tekiYakedoDisplayS3W3}${tekiReflecDisplayS3W3}${tekiHikarikabeDisplayS3W3}${tekiTenkiDisplayS3W3}${tekiMoraibiDisplayS3W3}</span><br>[ダメージ]${calc4KPower3S3}~${calc3KPower3S3}</p>
  <p>[急所]<br>[割合]${calc6KPower3S3Critical}%~${calc5KPower3S3Critical}%<br>[ダメージ]${calc4KPower3S3Critical}~${calc3KPower3S3Critical}</p>`
          : `<p>威力:${power3S3}<span class="hosei">${teki3IryokuDisplay3}${tekiAbiIryokuDisplayS3W3}${myAbiIryokuGENDisplayS3W3}</span><br>[通常]<br>[割合]${calc6P3S3}%~${calc5P3S3}%<span class="hosei">${teki3DamageHoseiDisplay3}${myKinomiDisplayS3W3}${tekiTekiouDisplayS3W3}${myAbiDamageGENDisplayS3W3}${tekiAbiIromegaDisplayS3W3}${tekiYakedoDisplayS3W3}${tekiReflecDisplayS3W3}${tekiHikarikabeDisplayS3W3}${tekiTenkiDisplayS3W3}${tekiMoraibiDisplayS3W3}</span><br>[ダメージ]${calc4P3S3}~${calc3P3S3}</p>
          <p>[急所]<br>[割合]${calc6P3S3Critical}%~${calc5P3S3Critical}%<br>[ダメージ]${calc4P3S3Critical}~${calc3P3S3Critical}</p>
          <br>
          技効果適用時<p>
          威力:${kisoPower3S3}<span class="hosei">${teki3IryokuDisplay3}${tekiAbiIryokuDisplayS3W3}${myAbiIryokuGENDisplayS3W3}</span><br>[通常]<br>[割合]${calc6KPower3S3}%~${calc5KPower3S3}%<span class="hosei">${teki3DamageHoseiDisplay3}${myKinomiDisplayS3W3}${tekiTekiouDisplayS3W3}${myAbiDamageGENDisplayS3W3}${tekiAbiIromegaDisplayS3W3}${tekiYakedoDisplayS3W3}${tekiReflecDisplayS3W3}${tekiHikarikabeDisplayS3W3}${tekiTenkiDisplayS3W3}${tekiMoraibiDisplayS3W3}</span><br>[ダメージ]${calc4KPower3S3}~${calc3KPower3S3}</p>
          <p>[急所]<br>[割合]${calc6KPower3S3Critical}%~${calc5KPower3S3Critical}%<br>[ダメージ]${calc4KPower3S3Critical}~${calc3KPower3S3Critical}</p>`
      }
  `
  }
  </div>

  
  <div class="A">⒋&nbsp;${name4S3}</div>
  <div class="B" style="display: none;">
  [${wtype4S3}]&nbsp;<br>威力:${powerdisplay4S3}&nbsp;命中:${accuracydisplay4S3}&nbsp;PP:${pp4S3}&nbsp;<br>分類:${moveClass4S3}&nbsp;優先度:${priority4S3}&nbsp;接触:${contact4S3}&nbsp;王者:${king4S3}&nbsp;No:${no4S3}<br>効果:${effect4S3}<br>
  </div><br>
  
  
  <div class="damage">
  ${
    moveClass4S3 === "変化"
      ? `<p>変化技</p>`
      : power4S3 === kisoPower4S3
      ? `
<p>威力:${power4S3}<span class="hosei">${teki3IryokuDisplay4}${tekiAbiIryokuDisplayS3W4}${myAbiIryokuGENDisplayS3W4}</span><br>[通常]<br>[割合]${calc6KPower4S3}%~${calc5KPower4S3}%<span class="hosei">${teki3DamageHoseiDisplay4}${myKinomiDisplayS3W4}${tekiTekiouDisplayS3W4}${myAbiDamageGENDisplayS3W4}${tekiAbiIromegaDisplayS3W4}${tekiYakedoDisplayS3W4}${tekiReflecDisplayS3W4}${tekiHikarikabeDisplayS3W4}${tekiTenkiDisplayS3W4}${tekiMoraibiDisplayS3W4}</span><br>[ダメージ]${calc4KPower4S3}~${calc3KPower4S3}</p>
<p>[急所]<br>[割合]${calc6KPower4S3Critical}%~${calc5KPower4S3Critical}%<br>[ダメージ]${calc4KPower4S3Critical}~${calc3KPower4S3Critical}</p>`
      : `
※威力不定
    ${
      power4S3 === 0
        ? `技効果適用時<p>
威力:${kisoPower4S3}<span class="hosei">${teki3IryokuDisplay4}${tekiAbiIryokuDisplayS3W4}${myAbiIryokuGENDisplayS3W4}</span><br>[通常]<br>[割合]${calc6KPower4S3}%~${calc5KPower4S3}%<span class="hosei">${teki3DamageHoseiDisplay4}${myKinomiDisplayS3W4}${tekiTekiouDisplayS3W4}${myAbiDamageGENDisplayS3W4}${tekiAbiIromegaDisplayS3W4}${tekiYakedoDisplayS3W4}${tekiReflecDisplayS3W4}${tekiHikarikabeDisplayS3W4}${tekiTenkiDisplayS3W4}${tekiMoraibiDisplayS3W4}</span><br>[ダメージ]${calc4KPower4S3}~${calc3KPower4S3}</p>
<p>[急所]<br>[割合]${calc6KPower4S3Critical}%~${calc5KPower4S3Critical}%<br>[ダメージ]${calc4KPower4S3Critical}~${calc3KPower4S3Critical}</p>`
        : `<p>威力:${power4S3}<span class="hosei">${teki3IryokuDisplay4}${tekiAbiIryokuDisplayS3W4}${myAbiIryokuGENDisplayS3W4}</span><br>[通常]<br>[割合]${calc6P4S3}%~${calc5P4S3}%<span class="hosei">${teki3DamageHoseiDisplay4}${myKinomiDisplayS3W4}${tekiTekiouDisplayS3W4}${myAbiDamageGENDisplayS3W4}${tekiAbiIromegaDisplayS3W4}${tekiYakedoDisplayS3W4}${tekiReflecDisplayS3W4}${tekiHikarikabeDisplayS3W4}${tekiTenkiDisplayS3W4}${tekiMoraibiDisplayS3W4}</span><br>[ダメージ]${calc4P4S3}~${calc3P4S3}</p>
        <p>[急所]<br>[割合]${calc6P4S3Critical}%~${calc5P4S3Critical}%<br>[ダメージ]${calc4P4S3Critical}~${calc3P4S3Critical}</p>
        <br>
        技効果適用時<p>
        威力:${kisoPower4S3}<span class="hosei">${teki3IryokuDisplay4}${tekiAbiIryokuDisplayS3W4}${myAbiIryokuGENDisplayS3W4}</span><br>[通常]<br>[割合]${calc6KPower4S3}%~${calc5KPower4S3}%<span class="hosei">${teki3DamageHoseiDisplay4}${myKinomiDisplayS3W4}${tekiTekiouDisplayS3W4}${myAbiDamageGENDisplayS3W4}${tekiAbiIromegaDisplayS3W4}${tekiYakedoDisplayS3W4}${tekiReflecDisplayS3W4}${tekiHikarikabeDisplayS3W4}${tekiTenkiDisplayS3W4}${tekiMoraibiDisplayS3W4}</span><br>[ダメージ]${calc4KPower4S3}~${calc3KPower4S3}</p>
        <p>[急所]<br>[割合]${calc6KPower4S3Critical}%~${calc5KPower4S3Critical}%<br>[ダメージ]${calc4KPower4S3Critical}~${calc3KPower4S3Critical}</p>`
    }
`
  }
</div>
  `;

      // すべてのA要素を取得する
      const trainerDetailAs = pokeStatus7.querySelectorAll(".A");

      trainerDetailAs.forEach((trainerDetailA) => {
        // クリックイベントリスナーを設定する
        trainerDetailA.addEventListener("click", () => {
          // クリックされたA要素の次の兄弟要素を取得する
          const trainerDetailB = trainerDetailA.nextElementSibling;

          // 兄弟要素が存在しているかをチェックし、存在している場合には表示を切り替える
          if (trainerDetailB) {
            trainerDetailB.style.display = trainerDetailB.style.display === "none" ? "block" : "none";
          }
        });
      });
    }
  }

  //!敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃
  //!敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃
  //!敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃
  //!敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃敵型4が攻撃

  if (
    tekipokeMove1S4 === undefined ||
    tekipokeMove2S4 === undefined ||
    tekipokeMove3S4 === undefined ||
    tekipokeMove4S4 === undefined
  ) {
    const pokeStatus7 = document.getElementById("T4_tab3");
    pokeStatus7.innerHTML = "該当の型は存在しません";
  } else {
    if (lvVal === 100 && (tekipokeBfNoshape4 < trainerUnder100 || tekipokeBfNoshape4 > trainerTop100)) {
      const pokeStatus7 = document.getElementById("T4_tab3");
      pokeStatus7.innerHTML = `${trainerName}は型${tekipokeShape4}を使用しません。`;
    } else if (lvVal === 50 && (tekipokeBfNoshape4 < trainerUnder50 || tekipokeBfNoshape4 > trainerTop50)) {
      const pokeStatus7 = document.getElementById("T4_tab3");
      pokeStatus7.innerHTML = `${trainerName}は型${tekipokeShape4}を使用しません。`;
    } else {
      // 通常の処理をここに書く

      const pokeStatus7 = document.getElementById("T4_tab3");
      pokeStatus7.innerHTML = `
    [敵]${tekiNAME}型${tekipokeShape4}<img src="${tekiImageUrl}">
    →
    [自]${NAME}<img src="${myImageUrl}">


    <br><br>
  <p class="ST">
  [自]補正後ステータス<br>
  <span class="itemMoji">@${mypokeItemName}</span><br>
  <span class="moji">H</span>${mypokeStatusH}<br>
  <span class="moji">A</span>${mypokeStatusARanked}<span class="hosei">
  
  ${mySurosutaDisplay}${myYogaDisplay}${myKonjouDisplay}${myKodahachiDisplay}${myHoneDisplay}${myRankADisplay}</span><br>
  
  <span class="moji">B</span>${mypokeStatusBRanked}<span class="hosei">${myRankBDisplay}${myFusiginaurokoDisplay}</span><br>
  <span class="moji">C</span>${mypokeStatusCRanked}<span class="hosei">${myKodamegaDisplay}${myRankCDisplay}</span><br>
  <span class="moji">D</span>${mypokeStatusDRanked}<span class="hosei">${myShinkaiDisplay}${mySunaarashiDisplay}${myRankDDisplay}</span><br>
  <span class="moji">S</span>${mypokeStatusSRanked}<span class="hosei">${mySurosutaDisplay}${myRankSDisplay}${myKodascarfDisplay}${myTekkyuDisplay}${myParalysisDisplay}</span>
  <br>

  [敵(型4)]補正後ステータス<br>
  <span class="itemMoji">@${tekipokeItemName4}</span><br>
  <span class="moji">H</span>${tekipokeStatusHS4}<br>
  <span class="moji">A</span>${tekipokeStatusAS4Ranked}<span class="hosei">
  
  ${tekiSurosutaDisplay}${tekiYogaDisplay}${tekiKonjouDisplay}${tekiKodahachiDisplay4}${tekiHoneDisplay4}${tekiRankADisplay}</span><br>
  
  <span class="moji">B</span>${tekipokeStatusBS4Ranked}<span class="hosei">${tekiRankBDisplay}${tekiFusiginaurokoDisplay}</span><br>
  <span class="moji">C</span>${tekipokeStatusCS4Ranked}<span class="hosei">${tekiKodamegaDisplay4}${tekiRankCDisplay}</span><br>
  <span class="moji">D</span>${tekipokeStatusDS4Ranked}<span class="hosei">${tekiShinkaiDisplay4}${tekiSunaarashiDisplay}${tekiRankDDisplay}</span><br>
  <span class="moji">S</span>${tekipokeStatusSS4Ranked}<span class="hosei">${tekiSurosutaDisplay}${tekiRankSDisplay}${tekiKodascarfDisplay4}${tekiTekkyuDisplay4}
  ${tekiParalysisDisplay}</span>
  </p>





  <div class="A">⒈&nbsp;${name1S4}</div>
  <div class="B" style="display: none;">
  [${wtype1S4}]&nbsp;<br>威力:${powerdisplay1S4}&nbsp;命中:${accuracydisplay1S4}&nbsp;PP:${pp1S4}&nbsp;<br>分類:${moveClass1S4}&nbsp;優先度:${priority1S4}&nbsp;接触:${contact1S4}&nbsp;王者:${king1S4}&nbsp;No:${no1S4}<br>効果:${effect1S4}<br>
  </div><br>

  



  <div class="damage">
  ${
    moveClass1S4 === "変化"
      ? `<p>変化技</p>`
      : power1S4 === kisoPower1S4
      ? `
  <p>威力:${power1S4}<span class="hosei">${teki4IryokuDisplay1}${tekiAbiIryokuDisplayS4W1}${myAbiIryokuGENDisplayS4W1}</span><br>[通常]<br>[割合]${calc6KPower1S4}%~${calc5KPower1S4}%<span class="hosei">${teki4DamageHoseiDisplay1}${myKinomiDisplayS4W1}${tekiTekiouDisplayS4W1}${myAbiDamageGENDisplayS4W1}${tekiAbiIromegaDisplayS4W1}${tekiYakedoDisplayS4W1}${tekiReflecDisplayS4W1}${tekiHikarikabeDisplayS4W1}${tekiTenkiDisplayS4W1}${tekiMoraibiDisplayS4W1}</span><br>[ダメージ]${calc4KPower1S4}~${calc3KPower1S4}</p>
  <p>[急所]<br>[割合]${calc6KPower1S4Critical}%~${calc5KPower1S4Critical}%<br>[ダメージ]${calc4KPower1S4Critical}~${calc3KPower1S4Critical}</p>`
      : `
  ※威力不定
      ${
        power1S4 === 0
          ? `技効果適用時<p>
  威力:${kisoPower1S4}<span class="hosei">${teki4IryokuDisplay1}${tekiAbiIryokuDisplayS4W1}${myAbiIryokuGENDisplayS4W1}</span><br>[通常]<br>[割合]${calc6KPower1S4}%~${calc5KPower1S4}%<span class="hosei">${teki4DamageHoseiDisplay1}${myKinomiDisplayS4W1}${tekiTekiouDisplayS4W1}${myAbiDamageGENDisplayS4W1}${tekiAbiIromegaDisplayS4W1}${tekiYakedoDisplayS4W1}${tekiReflecDisplayS4W1}${tekiHikarikabeDisplayS4W1}${tekiTenkiDisplayS4W1}${tekiMoraibiDisplayS4W1}</span><br>[ダメージ]${calc4KPower1S4}~${calc3KPower1S4}</p>
  <p>[急所]<br>[割合]${calc6KPower1S4Critical}%~${calc5KPower1S4Critical}%<br>[ダメージ]${calc4KPower1S4Critical}~${calc3KPower1S4Critical}</p>`
          : `<p>威力:${power1S4}<span class="hosei">${teki4IryokuDisplay1}${tekiAbiIryokuDisplayS4W1}${myAbiIryokuGENDisplayS4W1}</span><br>[通常]<br>[割合]${calc6P1S4}%~${calc5P1S4}%<span class="hosei">${teki4DamageHoseiDisplay1}${myKinomiDisplayS4W1}${tekiTekiouDisplayS4W1}${myAbiDamageGENDisplayS4W1}${tekiAbiIromegaDisplayS4W1}${tekiYakedoDisplayS4W1}${tekiReflecDisplayS4W1}${tekiHikarikabeDisplayS4W1}${tekiTenkiDisplayS4W1}${tekiMoraibiDisplayS4W1}</span><br>[ダメージ]${calc4P1S4}~${calc3P1S4}</p>
          <p>[急所]<br>[割合]${calc6P1S4Critical}%~${calc5P1S4Critical}%<br>[ダメージ]${calc4P1S4Critical}~${calc3P1S4Critical}</p>
          <br>
          技効果適用時<p>
          威力:${kisoPower1S4}<span class="hosei">${teki4IryokuDisplay1}${tekiAbiIryokuDisplayS4W1}${myAbiIryokuGENDisplayS4W1}</span><br>[通常]<br>[割合]${calc6KPower1S4}%~${calc5KPower1S4}%<span class="hosei">${teki4DamageHoseiDisplay1}${myKinomiDisplayS4W1}${tekiTekiouDisplayS4W1}${myAbiDamageGENDisplayS4W1}${tekiAbiIromegaDisplayS4W1}${tekiYakedoDisplayS4W1}${tekiReflecDisplayS4W1}${tekiHikarikabeDisplayS4W1}${tekiTenkiDisplayS4W1}${tekiMoraibiDisplayS4W1}</span><br>[ダメージ]${calc4KPower1S4}~${calc3KPower1S4}</p>
          <p>[急所]<br>[割合]${calc6KPower1S4Critical}%~${calc5KPower1S4Critical}%<br>[ダメージ]${calc4KPower1S4Critical}~${calc3KPower1S4Critical}</p>`
      }
  `
  }
  </div>





  <div class="A">⒉&nbsp;${name2S4}</div>
  <div class="B" style="display: none;">
  [${wtype2S4}]&nbsp;<br>威力:${powerdisplay2S4}&nbsp;命中:${accuracydisplay2S4}&nbsp;PP:${pp2S4}&nbsp;<br>分類:${moveClass2S4}&nbsp;優先度:${priority2S4}&nbsp;接触:${contact2S4}&nbsp;王者:${king2S4}&nbsp;No:${no2S4}<br>効果:${effect2S4}<br>
  </div><br>
  


  <div class="damage">
  ${
    moveClass2S4 === "変化"
      ? `<p>変化技</p>`
      : power2S4 === kisoPower2S4
      ? `
  <p>威力:${power2S4}<span class="hosei">${teki4IryokuDisplay2}${tekiAbiIryokuDisplayS4W2}${myAbiIryokuGENDisplayS4W2}</span><br>[通常]<br>[割合]${calc6KPower2S4}%~${calc5KPower2S4}%<span class="hosei">${teki4DamageHoseiDisplay2}${myKinomiDisplayS4W2}${tekiTekiouDisplayS4W2}${myAbiDamageGENDisplayS4W2}${tekiAbiIromegaDisplayS4W2}${tekiYakedoDisplayS4W2}${tekiReflecDisplayS4W2}${tekiHikarikabeDisplayS4W2}${tekiTenkiDisplayS4W2}${tekiMoraibiDisplayS4W2}</span><br>[ダメージ]${calc4KPower2S4}~${calc3KPower2S4}</p>
  <p>[急所]<br>[割合]${calc6KPower2S4Critical}%~${calc5KPower2S4Critical}%<br>[ダメージ]${calc4KPower2S4Critical}~${calc3KPower2S4Critical}</p>`
      : `
  ※威力不定
      ${
        power2S4 === 0
          ? `技効果適用時<p>
  威力:${kisoPower2S4}<span class="hosei">${teki4IryokuDisplay2}${tekiAbiIryokuDisplayS4W2}${myAbiIryokuGENDisplayS4W2}</span><br>[通常]<br>[割合]${calc6KPower2S4}%~${calc5KPower2S4}%<span class="hosei">${teki4DamageHoseiDisplay2}${myKinomiDisplayS4W2}${tekiTekiouDisplayS4W2}${myAbiDamageGENDisplayS4W2}${tekiAbiIromegaDisplayS4W2}${tekiYakedoDisplayS4W2}${tekiReflecDisplayS4W2}${tekiHikarikabeDisplayS4W2}${tekiTenkiDisplayS4W2}${tekiMoraibiDisplayS4W2}</span><br>[ダメージ]${calc4KPower2S4}~${calc3KPower2S4}</p>
  <p>[急所]<br>[割合]${calc6KPower2S4Critical}%~${calc5KPower2S4Critical}%<br>[ダメージ]${calc4KPower2S4Critical}~${calc3KPower2S4Critical}</p>`
          : `<p>威力:${power2S4}<span class="hosei">${teki4IryokuDisplay2}${tekiAbiIryokuDisplayS4W2}${myAbiIryokuGENDisplayS4W2}</span><br>[通常]<br>[割合]${calc6P2S4}%~${calc5P2S4}%<span class="hosei">${teki4DamageHoseiDisplay2}${myKinomiDisplayS4W2}${tekiTekiouDisplayS4W2}${myAbiDamageGENDisplayS4W2}${tekiAbiIromegaDisplayS4W2}${tekiYakedoDisplayS4W2}${tekiReflecDisplayS4W2}${tekiHikarikabeDisplayS4W2}${tekiTenkiDisplayS4W2}${tekiMoraibiDisplayS4W2}</span><br>[ダメージ]${calc4P2S4}~${calc3P2S4}</p>
          <p>[急所]<br>[割合]${calc6P2S4Critical}%~${calc5P2S4Critical}%<br>[ダメージ]${calc4P2S4Critical}~${calc3P2S4Critical}</p>
          <br>
          技効果適用時<p>
          威力:${kisoPower2S4}<span class="hosei">${teki4IryokuDisplay2}${tekiAbiIryokuDisplayS4W2}${myAbiIryokuGENDisplayS4W2}</span><br>[通常]<br>[割合]${calc6KPower2S4}%~${calc5KPower2S4}%<span class="hosei">${teki4DamageHoseiDisplay2}${myKinomiDisplayS4W2}${tekiTekiouDisplayS4W2}${myAbiDamageGENDisplayS4W2}${tekiAbiIromegaDisplayS4W2}${tekiYakedoDisplayS4W2}${tekiReflecDisplayS4W2}${tekiHikarikabeDisplayS4W2}${tekiTenkiDisplayS4W2}${tekiMoraibiDisplayS4W2}</span><br>[ダメージ]${calc4KPower2S4}~${calc3KPower2S4}</p>
          <p>[急所]<br>[割合]${calc6KPower2S4Critical}%~${calc5KPower2S4Critical}%<br>[ダメージ]${calc4KPower2S4Critical}~${calc3KPower2S4Critical}</p>`
      }
  `
  }
  </div>




  <div class="A">⒊&nbsp;${name3S4}</div>
  <div class="B" style="display: none;">
  [${wtype3S4}]&nbsp;<br>威力:${powerdisplay3S4}&nbsp;命中:${accuracydisplay3S4}&nbsp;PP:${pp3S4}&nbsp;<br>分類:${moveClass3S4}&nbsp;優先度:${priority3S4}&nbsp;接触:${contact3S4}&nbsp;王者:${king3S4}&nbsp;No:${no3S4}<br>効果:${effect3S4}<br>
  </div><br>
  


  <div class="damage">
  ${
    moveClass3S4 === "変化"
      ? `<p>変化技</p>`
      : power3S4 === kisoPower3S4
      ? `
  <p>威力:${power3S4}<span class="hosei">${teki4IryokuDisplay3}${tekiAbiIryokuDisplayS4W3}${myAbiIryokuGENDisplayS4W3}</span><br>[通常]<br>[割合]${calc6KPower3S4}%~${calc5KPower3S4}%<span class="hosei">${teki4DamageHoseiDisplay3}${myKinomiDisplayS4W3}${tekiTekiouDisplayS4W3}${myAbiDamageGENDisplayS4W3}${tekiAbiIromegaDisplayS4W3}${tekiYakedoDisplayS4W3}${tekiReflecDisplayS4W3}${tekiHikarikabeDisplayS4W3}${tekiTenkiDisplayS4W3}${tekiMoraibiDisplayS4W3}</span><br>[ダメージ]${calc4KPower3S4}~${calc3KPower3S4}</p>
  <p>[急所]<br>[割合]${calc6KPower3S4Critical}%~${calc5KPower3S4Critical}%<br>[ダメージ]${calc4KPower3S4Critical}~${calc3KPower3S4Critical}</p>`
      : `
  ※威力不定
      ${
        power3S4 === 0
          ? `技効果適用時<p>
  威力:${kisoPower3S4}<span class="hosei">${teki4IryokuDisplay3}${tekiAbiIryokuDisplayS4W3}${myAbiIryokuGENDisplayS4W3}</span><br>[通常]<br>[割合]${calc6KPower3S4}%~${calc5KPower3S4}%<span class="hosei">${teki4DamageHoseiDisplay3}${myKinomiDisplayS4W3}${tekiTekiouDisplayS4W3}${myAbiDamageGENDisplayS4W3}${tekiAbiIromegaDisplayS4W3}${tekiYakedoDisplayS4W3}${tekiReflecDisplayS4W3}${tekiHikarikabeDisplayS4W3}${tekiTenkiDisplayS4W3}${tekiMoraibiDisplayS4W3}</span><br>[ダメージ]${calc4KPower3S4}~${calc3KPower3S4}</p>
  <p>[急所]<br>[割合]${calc6KPower3S4Critical}%~${calc5KPower3S4Critical}%<br>[ダメージ]${calc4KPower3S4Critical}~${calc3KPower3S4Critical}</p>`
          : `<p>威力:${power3S4}<span class="hosei">${teki4IryokuDisplay3}${tekiAbiIryokuDisplayS4W3}${myAbiIryokuGENDisplayS4W3}</span><br>[通常]<br>[割合]${calc6P3S4}%~${calc5P3S4}%<span class="hosei">${teki4DamageHoseiDisplay3}${myKinomiDisplayS4W3}${tekiTekiouDisplayS4W3}${myAbiDamageGENDisplayS4W3}${tekiAbiIromegaDisplayS4W3}${tekiYakedoDisplayS4W3}${tekiReflecDisplayS4W3}${tekiHikarikabeDisplayS4W3}${tekiTenkiDisplayS4W3}${tekiMoraibiDisplayS4W3}</span><br>[ダメージ]${calc4P3S4}~${calc3P3S4}</p>
          <p>[急所]<br>[割合]${calc6P3S4Critical}%~${calc5P3S4Critical}%<br>[ダメージ]${calc4P3S4Critical}~${calc3P3S4Critical}</p>
          <br>
          技効果適用時<p>
          威力:${kisoPower3S4}<span class="hosei">${teki4IryokuDisplay3}${tekiAbiIryokuDisplayS4W3}${myAbiIryokuGENDisplayS4W3}</span><br>[通常]<br>[割合]${calc6KPower3S4}%~${calc5KPower3S4}%<span class="hosei">${teki4DamageHoseiDisplay3}${myKinomiDisplayS4W3}${tekiTekiouDisplayS4W3}${myAbiDamageGENDisplayS4W3}${tekiAbiIromegaDisplayS4W3}${tekiYakedoDisplayS4W3}${tekiReflecDisplayS4W3}${tekiHikarikabeDisplayS4W3}${tekiTenkiDisplayS4W3}${tekiMoraibiDisplayS4W3}</span><br>[ダメージ]${calc4KPower3S4}~${calc3KPower3S4}</p>
          <p>[急所]<br>[割合]${calc6KPower3S4Critical}%~${calc5KPower3S4Critical}%<br>[ダメージ]${calc4KPower3S4Critical}~${calc3KPower3S4Critical}</p>`
      }
  `
  }
  </div>

  
  <div class="A">⒋&nbsp;${name4S4}</div>
  <div class="B" style="display: none;">
  [${wtype4S4}]&nbsp;<br>威力:${powerdisplay4S4}&nbsp;命中:${accuracydisplay4S4}&nbsp;PP:${pp4S4}&nbsp;<br>分類:${moveClass4S4}&nbsp;優先度:${priority4S4}&nbsp;接触:${contact4S4}&nbsp;王者:${king4S4}&nbsp;No:${no4S4}<br>効果:${effect4S4}<br>
  </div><br>
  
  
  <div class="damage">
  ${
    moveClass4S4 === "変化"
      ? `<p>変化技</p>`
      : power4S4 === kisoPower4S4
      ? `
<p>威力:${power4S4}<span class="hosei">${teki4IryokuDisplay4}${tekiAbiIryokuDisplayS4W4}${myAbiIryokuGENDisplayS4W4}</span><br>[通常]<br>[割合]${calc6KPower4S4}%~${calc5KPower4S4}%<span class="hosei">${teki4DamageHoseiDisplay4}${myKinomiDisplayS4W4}${tekiTekiouDisplayS4W4}${myAbiDamageGENDisplayS4W4}${tekiAbiIromegaDisplayS4W4}${tekiYakedoDisplayS4W4}${tekiReflecDisplayS4W4}${tekiHikarikabeDisplayS4W4}${tekiTenkiDisplayS4W4}${tekiMoraibiDisplayS4W4}</span><br>[ダメージ]${calc4KPower4S4}~${calc3KPower4S4}</p>
<p>[急所]<br>[割合]${calc6KPower4S4Critical}%~${calc5KPower4S4Critical}%<br>[ダメージ]${calc4KPower4S4Critical}~${calc3KPower4S4Critical}</p>`
      : `
※威力不定
    ${
      power4S4 === 0
        ? `技効果適用時<p>
威力:${kisoPower4S4}<span class="hosei">${teki4IryokuDisplay4}${tekiAbiIryokuDisplayS4W4}${myAbiIryokuGENDisplayS4W4}</span><br>[通常]<br>[割合]${calc6KPower4S4}%~${calc5KPower4S4}%<span class="hosei">${teki4DamageHoseiDisplay4}${myKinomiDisplayS4W4}${tekiTekiouDisplayS4W4}${myAbiDamageGENDisplayS4W4}${tekiAbiIromegaDisplayS4W4}${tekiYakedoDisplayS4W4}${tekiReflecDisplayS4W4}${tekiHikarikabeDisplayS4W4}${tekiTenkiDisplayS4W4}${tekiMoraibiDisplayS4W4}</span><br>[ダメージ]${calc4KPower4S4}~${calc3KPower4S4}</p>
<p>[急所]<br>[割合]${calc6KPower4S4Critical}%~${calc5KPower4S4Critical}%<br>[ダメージ]${calc4KPower4S4Critical}~${calc3KPower4S4Critical}</p>`
        : `<p>威力:${power4S4}<span class="hosei">${teki4IryokuDisplay4}${tekiAbiIryokuDisplayS4W4}${myAbiIryokuGENDisplayS4W4}</span><br>[通常]<br>[割合]${calc6P4S4}%~${calc5P4S4}%<span class="hosei">${teki4DamageHoseiDisplay4}${myKinomiDisplayS4W4}${tekiTekiouDisplayS4W4}${myAbiDamageGENDisplayS4W4}${tekiAbiIromegaDisplayS4W4}${tekiYakedoDisplayS4W4}${tekiReflecDisplayS4W4}${tekiHikarikabeDisplayS4W4}${tekiTenkiDisplayS4W4}${tekiMoraibiDisplayS4W4}</span><br>[ダメージ]${calc4P4S4}~${calc3P4S4}</p>
        <p>[急所]<br>[割合]${calc6P4S4Critical}%~${calc5P4S4Critical}%<br>[ダメージ]${calc4P4S4Critical}~${calc3P4S4Critical}</p>
        <br>
        技効果適用時<p>
        威力:${kisoPower4S4}<span class="hosei">${teki4IryokuDisplay4}${tekiAbiIryokuDisplayS4W4}${myAbiIryokuGENDisplayS4W4}</span><br>[通常]<br>[割合]${calc6KPower4S4}%~${calc5KPower4S4}%<span class="hosei">${teki4DamageHoseiDisplay4}${myKinomiDisplayS4W4}${tekiTekiouDisplayS4W4}${myAbiDamageGENDisplayS4W4}${tekiAbiIromegaDisplayS4W4}${tekiYakedoDisplayS4W4}${tekiReflecDisplayS4W4}${tekiHikarikabeDisplayS4W4}${tekiTenkiDisplayS4W4}${tekiMoraibiDisplayS4W4}</span><br>[ダメージ]${calc4KPower4S4}~${calc3KPower4S4}</p>
        <p>[急所]<br>[割合]${calc6KPower4S4Critical}%~${calc5KPower4S4Critical}%<br>[ダメージ]${calc4KPower4S4Critical}~${calc3KPower4S4Critical}</p>`
    }
`
  }
</div>
  `;

      // すべてのA要素を取得する
      const trainerDetailAs = pokeStatus7.querySelectorAll(".A");

      trainerDetailAs.forEach((trainerDetailA) => {
        // クリックイベントリスナーを設定する
        trainerDetailA.addEventListener("click", () => {
          // クリックされたA要素の次の兄弟要素を取得する
          const trainerDetailB = trainerDetailA.nextElementSibling;

          // 兄弟要素が存在しているかをチェックし、存在している場合には表示を切り替える
          if (trainerDetailB) {
            trainerDetailB.style.display = trainerDetailB.style.display === "none" ? "block" : "none";
          }
        });
      });
    }
  }
});
